{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\komun\\\\booking-app\\\\frontend\\\\src\\\\LanguageContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport { translations } from './i18n';\n\n// дефинираме структурата, която ще държи контекстът\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// създаваме контекст с начални стойности\nconst LanguageContext = /*#__PURE__*/createContext({\n  language: 'en',\n  setLanguage: () => {}\n});\n\n// провайдър-компонент, който обвива приложението\nexport const LanguageProvider = ({\n  children\n}) => {\n  _s();\n  const [language, setLanguage] = useState('en');\n  return /*#__PURE__*/_jsxDEV(LanguageContext.Provider, {\n    value: {\n      language,\n      setLanguage\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n// този хук ви дава достъп до текущия език и функцията за промяна\n_s(LanguageProvider, \"fVUtOCD1O58HgvMjnE8lxRQa0QA=\");\n_c = LanguageProvider;\nexport const useLanguage = () => {\n  _s2();\n  return useContext(LanguageContext);\n};\n\n// този хук връща речника за текущия език\n_s2(useLanguage, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const useTranslations = () => {\n  _s3();\n  const {\n    language\n  } = useContext(LanguageContext);\n  return translations[language];\n};\n_s3(useTranslations, \"RMsR/EeEL9bXO6Sj4sW9UN9/2EQ=\");\nvar _c;\n$RefreshReg$(_c, \"LanguageProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","translations","jsxDEV","_jsxDEV","LanguageContext","language","setLanguage","LanguageProvider","children","_s","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useLanguage","_s2","useTranslations","_s3","$RefreshReg$"],"sources":["C:/Users/komun/booking-app/frontend/src/LanguageContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\r\nimport { Language, translations } from './i18n';\r\n\r\n// дефинираме структурата, която ще държи контекстът\r\ninterface LanguageContextValue {\r\n  language: Language;\r\n  setLanguage: (lang: Language) => void;\r\n}\r\n\r\n// създаваме контекст с начални стойности\r\nconst LanguageContext = createContext<LanguageContextValue>({\r\n  language: 'en',\r\n  setLanguage: () => {},\r\n});\r\n\r\n// провайдър-компонент, който обвива приложението\r\nexport const LanguageProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [language, setLanguage] = useState<Language>('en');\r\n\r\n  return (\r\n    <LanguageContext.Provider value={{ language, setLanguage }}>\r\n      {children}\r\n    </LanguageContext.Provider>\r\n  );\r\n};\r\n\r\n// този хук ви дава достъп до текущия език и функцията за промяна\r\nexport const useLanguage = () => useContext(LanguageContext);\r\n\r\n// този хук връща речника за текущия език\r\nexport const useTranslations = () => {\r\n  const { language } = useContext(LanguageContext);\r\n  return translations[language];\r\n};\r\n"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAClE,SAAmBC,YAAY,QAAQ,QAAQ;;AAE/C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAMA;AACA,MAAMC,eAAe,gBAAGN,aAAa,CAAuB;EAC1DO,QAAQ,EAAE,IAAI;EACdC,WAAW,EAAEA,CAAA,KAAM,CAAC;AACtB,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,gBAAyD,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACzF,MAAM,CAACJ,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAW,IAAI,CAAC;EAExD,oBACEG,OAAA,CAACC,eAAe,CAACM,QAAQ;IAACC,KAAK,EAAE;MAAEN,QAAQ;MAAEC;IAAY,CAAE;IAAAE,QAAA,EACxDA;EAAQ;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;;AAED;AAAAN,EAAA,CAVaF,gBAAyD;AAAAS,EAAA,GAAzDT,gBAAyD;AAWtE,OAAO,MAAMU,WAAW,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMnB,UAAU,CAACK,eAAe,CAAC;AAAA;;AAE5D;AAAAc,GAAA,CAFaD,WAAW;AAGxB,OAAO,MAAME,eAAe,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACnC,MAAM;IAAEf;EAAS,CAAC,GAAGN,UAAU,CAACK,eAAe,CAAC;EAChD,OAAOH,YAAY,CAACI,QAAQ,CAAC;AAC/B,CAAC;AAACe,GAAA,CAHWD,eAAe;AAAA,IAAAH,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}