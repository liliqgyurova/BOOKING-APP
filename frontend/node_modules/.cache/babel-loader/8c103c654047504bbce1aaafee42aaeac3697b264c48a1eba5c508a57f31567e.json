{"ast":null,"code":"// src/auth.ts\n\nexport async function openOAuthPopup(provider) {\n  const base = 'http://127.0.0.1:8000';\n  const res = await fetch(`${base}/auth/login/${provider}`);\n  if (!res.ok) throw new Error('Failed to init OAuth');\n  const {\n    auth_url\n  } = await res.json();\n  const w = 500,\n    h = 650;\n  const left = window.screenX + (window.outerWidth - w) / 2;\n  const top = window.screenY + (window.outerHeight - h) / 2;\n  const popup = window.open(auth_url, 'oauth', `width=${w},height=${h},left=${left},top=${top}`);\n  if (!popup) throw new Error('Popup blocked');\n  return new Promise((resolve, reject) => {\n    const timer = setInterval(() => {\n      if (popup.closed) {\n        clearInterval(timer);\n        window.removeEventListener('message', onMsg);\n        reject(new Error('Popup closed'));\n      }\n    }, 500);\n    function onMsg(ev) {\n      var _ev$data$tokens;\n      // бекендът праща postMessage({...}, \"*\"), затова валидирай по форма\n      if (!ev.data || !((_ev$data$tokens = ev.data.tokens) !== null && _ev$data$tokens !== void 0 && _ev$data$tokens.access_token)) return;\n      clearInterval(timer);\n      window.removeEventListener('message', onMsg);\n      if (popup) popup.close();\n      resolve(ev.data);\n    }\n    window.addEventListener('message', onMsg);\n  });\n}\nexport async function fetchMe(accessToken) {\n  const res = await fetch('http://127.0.0.1:8000/auth/me', {\n    headers: {\n      Authorization: `Bearer ${accessToken}`\n    }\n  });\n  if (!res.ok) throw new Error('Invalid token');\n  return res.json();\n}","map":{"version":3,"names":["openOAuthPopup","provider","base","res","fetch","ok","Error","auth_url","json","w","h","left","window","screenX","outerWidth","top","screenY","outerHeight","popup","open","Promise","resolve","reject","timer","setInterval","closed","clearInterval","removeEventListener","onMsg","ev","_ev$data$tokens","data","tokens","access_token","close","addEventListener","fetchMe","accessToken","headers","Authorization"],"sources":["C:/Users/komun/booking-app/frontend/src/auth.ts"],"sourcesContent":["// src/auth.ts\r\nexport type AuthResult = {\r\n  user: { id: number; email: string; name?: string | null; picture?: string | null };\r\n  tokens: { access_token: string; refresh_token: string; token_type: 'bearer' };\r\n};\r\n\r\nexport async function openOAuthPopup(provider: 'google'): Promise<AuthResult> {\r\n  const base = 'http://127.0.0.1:8000';\r\n  const res = await fetch(`${base}/auth/login/${provider}`);\r\n  if (!res.ok) throw new Error('Failed to init OAuth');\r\n  const { auth_url } = await res.json();\r\n\r\n  const w = 500, h = 650;\r\n  const left = window.screenX + (window.outerWidth - w) / 2;\r\n  const top = window.screenY + (window.outerHeight - h) / 2;\r\n  const popup = window.open(\r\n    auth_url,\r\n    'oauth',\r\n    `width=${w},height=${h},left=${left},top=${top}`\r\n  );\r\n  if (!popup) throw new Error('Popup blocked');\r\n\r\n  return new Promise<AuthResult>((resolve, reject) => {\r\n    const timer = setInterval(() => {\r\n      if (popup.closed) {\r\n        clearInterval(timer);\r\n        window.removeEventListener('message', onMsg);\r\n        reject(new Error('Popup closed'));\r\n      }\r\n    }, 500);\r\n\r\n    function onMsg(ev: MessageEvent) {\r\n      // бекендът праща postMessage({...}, \"*\"), затова валидирай по форма\r\n      if (!ev.data || !ev.data.tokens?.access_token) return;\r\n      clearInterval(timer);\r\n      window.removeEventListener('message', onMsg);\r\n      if (popup) popup.close();\r\n      resolve(ev.data as AuthResult);\r\n    }\r\n\r\n    window.addEventListener('message', onMsg);\r\n  });\r\n}\r\n\r\nexport async function fetchMe(accessToken: string) {\r\n  const res = await fetch('http://127.0.0.1:8000/auth/me', {\r\n    headers: { Authorization: `Bearer ${accessToken}` }\r\n  });\r\n  if (!res.ok) throw new Error('Invalid token');\r\n  return res.json();\r\n}\r\n"],"mappings":"AAAA;;AAMA,OAAO,eAAeA,cAAcA,CAACC,QAAkB,EAAuB;EAC5E,MAAMC,IAAI,GAAG,uBAAuB;EACpC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGF,IAAI,eAAeD,QAAQ,EAAE,CAAC;EACzD,IAAI,CAACE,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;EACpD,MAAM;IAAEC;EAAS,CAAC,GAAG,MAAMJ,GAAG,CAACK,IAAI,CAAC,CAAC;EAErC,MAAMC,CAAC,GAAG,GAAG;IAAEC,CAAC,GAAG,GAAG;EACtB,MAAMC,IAAI,GAAGC,MAAM,CAACC,OAAO,GAAG,CAACD,MAAM,CAACE,UAAU,GAAGL,CAAC,IAAI,CAAC;EACzD,MAAMM,GAAG,GAAGH,MAAM,CAACI,OAAO,GAAG,CAACJ,MAAM,CAACK,WAAW,GAAGP,CAAC,IAAI,CAAC;EACzD,MAAMQ,KAAK,GAAGN,MAAM,CAACO,IAAI,CACvBZ,QAAQ,EACR,OAAO,EACP,SAASE,CAAC,WAAWC,CAAC,SAASC,IAAI,QAAQI,GAAG,EAChD,CAAC;EACD,IAAI,CAACG,KAAK,EAAE,MAAM,IAAIZ,KAAK,CAAC,eAAe,CAAC;EAE5C,OAAO,IAAIc,OAAO,CAAa,CAACC,OAAO,EAAEC,MAAM,KAAK;IAClD,MAAMC,KAAK,GAAGC,WAAW,CAAC,MAAM;MAC9B,IAAIN,KAAK,CAACO,MAAM,EAAE;QAChBC,aAAa,CAACH,KAAK,CAAC;QACpBX,MAAM,CAACe,mBAAmB,CAAC,SAAS,EAAEC,KAAK,CAAC;QAC5CN,MAAM,CAAC,IAAIhB,KAAK,CAAC,cAAc,CAAC,CAAC;MACnC;IACF,CAAC,EAAE,GAAG,CAAC;IAEP,SAASsB,KAAKA,CAACC,EAAgB,EAAE;MAAA,IAAAC,eAAA;MAC/B;MACA,IAAI,CAACD,EAAE,CAACE,IAAI,IAAI,GAAAD,eAAA,GAACD,EAAE,CAACE,IAAI,CAACC,MAAM,cAAAF,eAAA,eAAdA,eAAA,CAAgBG,YAAY,GAAE;MAC/CP,aAAa,CAACH,KAAK,CAAC;MACpBX,MAAM,CAACe,mBAAmB,CAAC,SAAS,EAAEC,KAAK,CAAC;MAC5C,IAAIV,KAAK,EAAEA,KAAK,CAACgB,KAAK,CAAC,CAAC;MACxBb,OAAO,CAACQ,EAAE,CAACE,IAAkB,CAAC;IAChC;IAEAnB,MAAM,CAACuB,gBAAgB,CAAC,SAAS,EAAEP,KAAK,CAAC;EAC3C,CAAC,CAAC;AACJ;AAEA,OAAO,eAAeQ,OAAOA,CAACC,WAAmB,EAAE;EACjD,MAAMlC,GAAG,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;IACvDkC,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUF,WAAW;IAAG;EACpD,CAAC,CAAC;EACF,IAAI,CAAClC,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,eAAe,CAAC;EAC7C,OAAOH,GAAG,CAACK,IAAI,CAAC,CAAC;AACnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}