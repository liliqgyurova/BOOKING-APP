{"ast":null,"code":"var _env;\n// src/auth.ts\n\nconst BASE = ((_env = import.meta.env) === null || _env === void 0 ? void 0 : _env.VITE_API_BASE) || window.__API_BASE__ || 'http://127.0.0.1:8000';\n\n// прочети стойност на cookie по име\nfunction getCookie(name) {\n  const m = document.cookie.match(new RegExp('(?:^|; )' + name.replace(/[-.$?*|{}()[\\]\\\\/+^]/g, '\\\\$&') + '=([^;]*)'));\n  return m ? decodeURIComponent(m[1]) : null;\n}\nexport async function openOAuthPopup(provider) {\n  const w = 500,\n    h = 650;\n  const left = window.screenX + (window.outerWidth - w) / 2;\n  const top = window.screenY + (window.outerHeight - h) / 2;\n  const popup = window.open(`${BASE}/auth/login/${provider}?redirect=1`, 'oauth', `width=${w},height=${h},left=${left},top=${top}`);\n  if (!popup) throw new Error('Popup blocked');\n  return new Promise((resolve, reject) => {\n    const timeout = setTimeout(() => {\n      window.removeEventListener('message', onMsg);\n      try {\n        if (popup) popup.close();\n      } catch {}\n      reject(new Error('OAuth timed out'));\n    }, 120000);\n    const tick = setInterval(() => {\n      if (popup.closed) {\n        clearInterval(tick);\n        clearTimeout(timeout);\n        window.removeEventListener('message', onMsg);\n        reject(new Error('Popup closed'));\n      }\n    }, 500);\n    function onMsg(ev) {\n      var _ev$data, _ev$data$user;\n      const ok = ev === null || ev === void 0 ? void 0 : (_ev$data = ev.data) === null || _ev$data === void 0 ? void 0 : (_ev$data$user = _ev$data.user) === null || _ev$data$user === void 0 ? void 0 : _ev$data$user.email;\n      if (!ok) return;\n      clearInterval(tick);\n      clearTimeout(timeout);\n      window.removeEventListener('message', onMsg);\n      try {\n        if (popup) popup.close();\n      } catch {}\n      resolve(ev.data);\n    }\n    window.addEventListener('message', onMsg);\n  });\n}\nexport async function fetchMe() {\n  const res = await fetch(`${BASE}/auth/me`, {\n    credentials: 'include'\n  });\n  if (!res.ok) throw new Error('Invalid session');\n  return res.json();\n}\nexport async function refreshSession() {\n  const xsrf = getCookie('XSRF-TOKEN');\n  const res = await fetch(`${BASE}/auth/refresh`, {\n    method: 'POST',\n    credentials: 'include',\n    headers: xsrf ? {\n      'X-XSRF-TOKEN': xsrf\n    } : {}\n  });\n  if (!res.ok) throw new Error('Refresh failed');\n  return res.json();\n}\nexport async function logout() {\n  const xsrf = getCookie('XSRF-TOKEN');\n  const res = await fetch(`${BASE}/auth/logout`, {\n    method: 'POST',\n    credentials: 'include',\n    headers: xsrf ? {\n      'X-XSRF-TOKEN': xsrf\n    } : {}\n  });\n  if (!res.ok) throw new Error('Logout failed');\n  return res.json();\n}","map":{"version":3,"names":["BASE","_env","import","meta","env","VITE_API_BASE","window","__API_BASE__","getCookie","name","m","document","cookie","match","RegExp","replace","decodeURIComponent","openOAuthPopup","provider","w","h","left","screenX","outerWidth","top","screenY","outerHeight","popup","open","Error","Promise","resolve","reject","timeout","setTimeout","removeEventListener","onMsg","close","tick","setInterval","closed","clearInterval","clearTimeout","ev","_ev$data","_ev$data$user","ok","data","user","email","addEventListener","fetchMe","res","fetch","credentials","json","refreshSession","xsrf","method","headers","logout"],"sources":["C:/Users/komun/booking-app/frontend/src/auth.ts"],"sourcesContent":["// src/auth.ts\r\nexport type AuthResult = {\r\n  user: { id: number; email: string; name?: string | null; picture?: string | null };\r\n  tokens: { access_token: string; refresh_token: string; token_type: 'bearer' };\r\n};\r\n\r\nconst BASE =\r\n  (import.meta as any).env?.VITE_API_BASE ||\r\n  (window as any).__API_BASE__ ||\r\n  'http://127.0.0.1:8000';\r\n\r\n// прочети стойност на cookie по име\r\nfunction getCookie(name: string) {\r\n  const m = document.cookie.match(new RegExp('(?:^|; )' + name.replace(/[-.$?*|{}()[\\]\\\\/+^]/g, '\\\\$&') + '=([^;]*)'));\r\n  return m ? decodeURIComponent(m[1]) : null;\r\n}\r\n\r\nexport async function openOAuthPopup(provider: 'google'): Promise<AuthResult> {\r\n  const w = 500, h = 650;\r\n  const left = window.screenX + (window.outerWidth - w) / 2;\r\n  const top = window.screenY + (window.outerHeight - h) / 2;\r\n\r\n  const popup = window.open(\r\n    `${BASE}/auth/login/${provider}?redirect=1`,\r\n    'oauth',\r\n    `width=${w},height=${h},left=${left},top=${top}`\r\n  );\r\n  if (!popup) throw new Error('Popup blocked');\r\n\r\n  return new Promise<AuthResult>((resolve, reject) => {\r\n    const timeout = setTimeout(() => {\r\n      window.removeEventListener('message', onMsg);\r\n      try { if (popup) popup.close(); } catch {}\r\n      reject(new Error('OAuth timed out'));\r\n    }, 120_000);\r\n\r\n    const tick = setInterval(() => {\r\n      if (popup.closed) {\r\n        clearInterval(tick);\r\n        clearTimeout(timeout);\r\n        window.removeEventListener('message', onMsg);\r\n        reject(new Error('Popup closed'));\r\n      }\r\n    }, 500);\r\n\r\n    function onMsg(ev: MessageEvent) {\r\n      const ok = ev?.data?.user?.email;\r\n      if (!ok) return;\r\n      clearInterval(tick);\r\n      clearTimeout(timeout);\r\n      window.removeEventListener('message', onMsg);\r\n      try { if (popup) popup.close(); } catch {}\r\n      resolve(ev.data as AuthResult);\r\n    }\r\n\r\n    window.addEventListener('message', onMsg);\r\n  });\r\n}\r\n\r\nexport async function fetchMe() {\r\n  const res = await fetch(`${BASE}/auth/me`, { credentials: 'include' });\r\n  if (!res.ok) throw new Error('Invalid session');\r\n  return res.json();\r\n}\r\n\r\nexport async function refreshSession() {\r\n  const xsrf = getCookie('XSRF-TOKEN');\r\n  const res = await fetch(`${BASE}/auth/refresh`, {\r\n    method: 'POST',\r\n    credentials: 'include',\r\n    headers: xsrf ? { 'X-XSRF-TOKEN': xsrf } : {},\r\n  });\r\n  if (!res.ok) throw new Error('Refresh failed');\r\n  return res.json();\r\n}\r\n\r\nexport async function logout() {\r\n  const xsrf = getCookie('XSRF-TOKEN');\r\n  const res = await fetch(`${BASE}/auth/logout`, {\r\n    method: 'POST',\r\n    credentials: 'include',\r\n    headers: xsrf ? { 'X-XSRF-TOKEN': xsrf } : {},\r\n  });\r\n  if (!res.ok) throw new Error('Logout failed');\r\n  return res.json();\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}