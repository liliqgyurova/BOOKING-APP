{"ast":null,"code":"import { hasXMLHttpRequest } from './utils.js';\nlet fetchApi = typeof fetch === 'function' ? fetch : undefined;\nif (typeof global !== 'undefined' && global.fetch) {\n  fetchApi = global.fetch;\n} else if (typeof window !== 'undefined' && window.fetch) {\n  fetchApi = window.fetch;\n}\nlet XmlHttpRequestApi;\nif (hasXMLHttpRequest()) {\n  if (typeof global !== 'undefined' && global.XMLHttpRequest) {\n    XmlHttpRequestApi = global.XMLHttpRequest;\n  } else if (typeof window !== 'undefined' && window.XMLHttpRequest) {\n    XmlHttpRequestApi = window.XMLHttpRequest;\n  }\n}\nlet ActiveXObjectApi;\nif (typeof ActiveXObject === 'function') {\n  if (typeof global !== 'undefined' && global.ActiveXObject) {\n    ActiveXObjectApi = global.ActiveXObject;\n  } else if (typeof window !== 'undefined' && window.ActiveXObject) {\n    ActiveXObjectApi = window.ActiveXObject;\n  }\n}\nif (typeof fetchApi !== 'function') fetchApi = undefined;\nif (!fetchApi && !XmlHttpRequestApi && !ActiveXObjectApi) {\n  try {\n    // top-level await is not available on everywhere\n    // fetchApi = (await import('cross-fetch')).default\n    import('cross-fetch').then(mod => {\n      fetchApi = mod.default;\n    }).catch(() => {});\n  } catch (e) {}\n}\nconst addQueryString = (url, params) => {\n  if (params && typeof params === 'object') {\n    let queryString = '';\n    // Must encode data\n    for (const paramName in params) {\n      queryString += '&' + encodeURIComponent(paramName) + '=' + encodeURIComponent(params[paramName]);\n    }\n    if (!queryString) return url;\n    url = url + (url.indexOf('?') !== -1 ? '&' : '?') + queryString.slice(1);\n  }\n  return url;\n};\nconst fetchIt = (url, fetchOptions, callback, altFetch) => {\n  const resolver = response => {\n    if (!response.ok) return callback(response.statusText || 'Error', {\n      status: response.status\n    });\n    response.text().then(data => {\n      callback(null, {\n        status: response.status,\n        data\n      });\n    }).catch(callback);\n  };\n  if (altFetch) {\n    // already checked to have the proper signature\n    const altResponse = altFetch(url, fetchOptions);\n    if (altResponse instanceof Promise) {\n      altResponse.then(resolver).catch(callback);\n      return;\n    }\n    // fall through\n  }\n  if (typeof fetch === 'function') {\n    // react-native debug mode needs the fetch function to be called directly (no alias)\n    fetch(url, fetchOptions).then(resolver).catch(callback);\n  } else {\n    fetchApi(url, fetchOptions).then(resolver).catch(callback);\n  }\n};\nlet omitFetchOptions = false;\n\n// fetch api stuff\nconst requestWithFetch = (options, url, payload, callback) => {\n  if (options.queryStringParams) {\n    url = addQueryString(url, options.queryStringParams);\n  }\n  const headers = {\n    ...(typeof options.customHeaders === 'function' ? options.customHeaders() : options.customHeaders)\n  };\n  if (typeof window === 'undefined' && typeof global !== 'undefined' && typeof global.process !== 'undefined' && global.process.versions && global.process.versions.node) {\n    headers['User-Agent'] = `i18next-http-backend (node/${global.process.version}; ${global.process.platform} ${global.process.arch})`;\n  }\n  if (payload) headers['Content-Type'] = 'application/json';\n  const reqOptions = typeof options.requestOptions === 'function' ? options.requestOptions(payload) : options.requestOptions;\n  const fetchOptions = {\n    method: payload ? 'POST' : 'GET',\n    body: payload ? options.stringify(payload) : undefined,\n    headers,\n    ...(omitFetchOptions ? {} : reqOptions)\n  };\n  const altFetch = typeof options.alternateFetch === 'function' && options.alternateFetch.length >= 1 ? options.alternateFetch : undefined;\n  try {\n    fetchIt(url, fetchOptions, callback, altFetch);\n  } catch (e) {\n    if (!reqOptions || Object.keys(reqOptions).length === 0 || !e.message || e.message.indexOf('not implemented') < 0) {\n      return callback(e);\n    }\n    try {\n      Object.keys(reqOptions).forEach(opt => {\n        delete fetchOptions[opt];\n      });\n      fetchIt(url, fetchOptions, callback, altFetch);\n      omitFetchOptions = true;\n    } catch (err) {\n      callback(err);\n    }\n  }\n};\n\n// xml http request stuff\nconst requestWithXmlHttpRequest = (options, url, payload, callback) => {\n  if (payload && typeof payload === 'object') {\n    // if (!cache) payload._t = Date.now()\n    // URL encoded form payload must be in querystring format\n    payload = addQueryString('', payload).slice(1);\n  }\n  if (options.queryStringParams) {\n    url = addQueryString(url, options.queryStringParams);\n  }\n  try {\n    const x = XmlHttpRequestApi ? new XmlHttpRequestApi() : new ActiveXObjectApi('MSXML2.XMLHTTP.3.0');\n    x.open(payload ? 'POST' : 'GET', url, 1);\n    if (!options.crossDomain) {\n      x.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n    }\n    x.withCredentials = !!options.withCredentials;\n    if (payload) {\n      x.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n    }\n    if (x.overrideMimeType) {\n      x.overrideMimeType('application/json');\n    }\n    let h = options.customHeaders;\n    h = typeof h === 'function' ? h() : h;\n    if (h) {\n      for (const i in h) {\n        x.setRequestHeader(i, h[i]);\n      }\n    }\n    x.onreadystatechange = () => {\n      x.readyState > 3 && callback(x.status >= 400 ? x.statusText : null, {\n        status: x.status,\n        data: x.responseText\n      });\n    };\n    x.send(payload);\n  } catch (e) {\n    console && console.log(e);\n  }\n};\nconst request = (options, url, payload, callback) => {\n  if (typeof payload === 'function') {\n    callback = payload;\n    payload = undefined;\n  }\n  callback = callback || (() => {});\n  if (fetchApi && url.indexOf('file:') !== 0) {\n    // use fetch api\n    return requestWithFetch(options, url, payload, callback);\n  }\n  if (hasXMLHttpRequest() || typeof ActiveXObject === 'function') {\n    // use xml http request\n    return requestWithXmlHttpRequest(options, url, payload, callback);\n  }\n  callback(new Error('No fetch and no xhr implementation found!'));\n};\nexport default request;","map":{"version":3,"names":["hasXMLHttpRequest","fetchApi","fetch","undefined","global","window","XmlHttpRequestApi","XMLHttpRequest","ActiveXObjectApi","ActiveXObject","then","mod","default","catch","e","addQueryString","url","params","queryString","paramName","encodeURIComponent","indexOf","slice","fetchIt","fetchOptions","callback","altFetch","resolver","response","ok","statusText","status","text","data","altResponse","Promise","omitFetchOptions","requestWithFetch","options","payload","queryStringParams","headers","customHeaders","process","versions","node","version","platform","arch","reqOptions","requestOptions","method","body","stringify","alternateFetch","length","Object","keys","message","forEach","opt","err","requestWithXmlHttpRequest","x","open","crossDomain","setRequestHeader","withCredentials","overrideMimeType","h","i","onreadystatechange","readyState","responseText","send","console","log","request","Error"],"sources":["C:/Users/komun/booking-app/frontend/node_modules/i18next-http-backend/lib/request.js"],"sourcesContent":["import { hasXMLHttpRequest } from './utils.js'\n\nlet fetchApi = typeof fetch === 'function' ? fetch : undefined\nif (typeof global !== 'undefined' && global.fetch) {\n  fetchApi = global.fetch\n} else if (typeof window !== 'undefined' && window.fetch) {\n  fetchApi = window.fetch\n}\nlet XmlHttpRequestApi\nif (hasXMLHttpRequest()) {\n  if (typeof global !== 'undefined' && global.XMLHttpRequest) {\n    XmlHttpRequestApi = global.XMLHttpRequest\n  } else if (typeof window !== 'undefined' && window.XMLHttpRequest) {\n    XmlHttpRequestApi = window.XMLHttpRequest\n  }\n}\nlet ActiveXObjectApi\nif (typeof ActiveXObject === 'function') {\n  if (typeof global !== 'undefined' && global.ActiveXObject) {\n    ActiveXObjectApi = global.ActiveXObject\n  } else if (typeof window !== 'undefined' && window.ActiveXObject) {\n    ActiveXObjectApi = window.ActiveXObject\n  }\n}\n\nif (typeof fetchApi !== 'function') fetchApi = undefined\n\nif (!fetchApi && !XmlHttpRequestApi && !ActiveXObjectApi) {\n  try {\n    // top-level await is not available on everywhere\n    // fetchApi = (await import('cross-fetch')).default\n    import('cross-fetch').then((mod) => {\n      fetchApi = mod.default\n    }).catch(() => {})\n  } catch (e) {}\n}\n\nconst addQueryString = (url, params) => {\n  if (params && typeof params === 'object') {\n    let queryString = ''\n    // Must encode data\n    for (const paramName in params) {\n      queryString += '&' + encodeURIComponent(paramName) + '=' + encodeURIComponent(params[paramName])\n    }\n    if (!queryString) return url\n    url = url + (url.indexOf('?') !== -1 ? '&' : '?') + queryString.slice(1)\n  }\n  return url\n}\n\nconst fetchIt = (url, fetchOptions, callback, altFetch) => {\n  const resolver = (response) => {\n    if (!response.ok) return callback(response.statusText || 'Error', { status: response.status })\n    response.text().then((data) => {\n      callback(null, { status: response.status, data })\n    }).catch(callback)\n  }\n  if (altFetch) {\n    // already checked to have the proper signature\n    const altResponse = altFetch(url, fetchOptions)\n    if (altResponse instanceof Promise) {\n      altResponse.then(resolver).catch(callback)\n      return\n    }\n    // fall through\n  }\n  if (typeof fetch === 'function') { // react-native debug mode needs the fetch function to be called directly (no alias)\n    fetch(url, fetchOptions).then(resolver).catch(callback)\n  } else {\n    fetchApi(url, fetchOptions).then(resolver).catch(callback)\n  }\n}\n\nlet omitFetchOptions = false\n\n// fetch api stuff\nconst requestWithFetch = (options, url, payload, callback) => {\n  if (options.queryStringParams) {\n    url = addQueryString(url, options.queryStringParams)\n  }\n  const headers = {\n    ...(typeof options.customHeaders === 'function' ? options.customHeaders() : options.customHeaders)\n  }\n  if (typeof window === 'undefined' && typeof global !== 'undefined' && typeof global.process !== 'undefined' && global.process.versions && global.process.versions.node) {\n    headers['User-Agent'] = `i18next-http-backend (node/${global.process.version}; ${global.process.platform} ${global.process.arch})`\n  }\n  if (payload) headers['Content-Type'] = 'application/json'\n  const reqOptions = typeof options.requestOptions === 'function' ? options.requestOptions(payload) : options.requestOptions\n  const fetchOptions = {\n    method: payload ? 'POST' : 'GET',\n    body: payload ? options.stringify(payload) : undefined,\n    headers,\n    ...(omitFetchOptions ? {} : reqOptions)\n  }\n  const altFetch = typeof options.alternateFetch === 'function' && options.alternateFetch.length >= 1 ? options.alternateFetch : undefined\n  try {\n    fetchIt(url, fetchOptions, callback, altFetch)\n  } catch (e) {\n    if (!reqOptions || Object.keys(reqOptions).length === 0 || !e.message || e.message.indexOf('not implemented') < 0) {\n      return callback(e)\n    }\n    try {\n      Object.keys(reqOptions).forEach((opt) => {\n        delete fetchOptions[opt]\n      })\n      fetchIt(url, fetchOptions, callback, altFetch)\n      omitFetchOptions = true\n    } catch (err) {\n      callback(err)\n    }\n  }\n}\n\n// xml http request stuff\nconst requestWithXmlHttpRequest = (options, url, payload, callback) => {\n  if (payload && typeof payload === 'object') {\n    // if (!cache) payload._t = Date.now()\n    // URL encoded form payload must be in querystring format\n    payload = addQueryString('', payload).slice(1)\n  }\n\n  if (options.queryStringParams) {\n    url = addQueryString(url, options.queryStringParams)\n  }\n\n  try {\n    const x = XmlHttpRequestApi ? new XmlHttpRequestApi() : new ActiveXObjectApi('MSXML2.XMLHTTP.3.0')\n    x.open(payload ? 'POST' : 'GET', url, 1)\n    if (!options.crossDomain) {\n      x.setRequestHeader('X-Requested-With', 'XMLHttpRequest')\n    }\n    x.withCredentials = !!options.withCredentials\n    if (payload) {\n      x.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded')\n    }\n    if (x.overrideMimeType) {\n      x.overrideMimeType('application/json')\n    }\n    let h = options.customHeaders\n    h = typeof h === 'function' ? h() : h\n    if (h) {\n      for (const i in h) {\n        x.setRequestHeader(i, h[i])\n      }\n    }\n    x.onreadystatechange = () => {\n      x.readyState > 3 && callback(x.status >= 400 ? x.statusText : null, { status: x.status, data: x.responseText })\n    }\n    x.send(payload)\n  } catch (e) {\n    console && console.log(e)\n  }\n}\n\nconst request = (options, url, payload, callback) => {\n  if (typeof payload === 'function') {\n    callback = payload\n    payload = undefined\n  }\n  callback = callback || (() => {})\n\n  if (fetchApi && url.indexOf('file:') !== 0) {\n    // use fetch api\n    return requestWithFetch(options, url, payload, callback)\n  }\n\n  if (hasXMLHttpRequest() || typeof ActiveXObject === 'function') {\n    // use xml http request\n    return requestWithXmlHttpRequest(options, url, payload, callback)\n  }\n\n  callback(new Error('No fetch and no xhr implementation found!'))\n}\n\nexport default request\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}