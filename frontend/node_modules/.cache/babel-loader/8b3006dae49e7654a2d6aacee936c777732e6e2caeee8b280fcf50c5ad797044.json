{"ast":null,"code":"const isString = obj => typeof obj === 'string';\nconst defer = () => {\n  let res;\n  let rej;\n  const promise = new Promise((resolve, reject) => {\n    res = resolve;\n    rej = reject;\n  });\n  promise.resolve = res;\n  promise.reject = rej;\n  return promise;\n};\nconst makeString = object => {\n  if (object == null) return '';\n  return '' + object;\n};\nconst copy = (a, s, t) => {\n  a.forEach(m => {\n    if (s[m]) t[m] = s[m];\n  });\n};\nconst lastOfPathSeparatorRegExp = /###/g;\nconst cleanKey = key => key && key.indexOf('###') > -1 ? key.replace(lastOfPathSeparatorRegExp, '.') : key;\nconst canNotTraverseDeeper = object => !object || isString(object);\nconst getLastOfPath = (object, path, Empty) => {\n  const stack = !isString(path) ? path : path.split('.');\n  let stackIndex = 0;\n  while (stackIndex < stack.length - 1) {\n    if (canNotTraverseDeeper(object)) return {};\n    const key = cleanKey(stack[stackIndex]);\n    if (!object[key] && Empty) object[key] = new Empty();\n    if (Object.prototype.hasOwnProperty.call(object, key)) {\n      object = object[key];\n    } else {\n      object = {};\n    }\n    ++stackIndex;\n  }\n  if (canNotTraverseDeeper(object)) return {};\n  return {\n    obj: object,\n    k: cleanKey(stack[stackIndex])\n  };\n};\nconst setPath = (object, path, newValue) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path, Object);\n  if (obj !== undefined || path.length === 1) {\n    obj[k] = newValue;\n    return;\n  }\n  let e = path[path.length - 1];\n  let p = path.slice(0, path.length - 1);\n  let last = getLastOfPath(object, p, Object);\n  while (last.obj === undefined && p.length) {\n    e = `${p[p.length - 1]}.${e}`;\n    p = p.slice(0, p.length - 1);\n    last = getLastOfPath(object, p, Object);\n    if (last?.obj && typeof last.obj[`${last.k}.${e}`] !== 'undefined') {\n      last.obj = undefined;\n    }\n  }\n  last.obj[`${last.k}.${e}`] = newValue;\n};\nconst pushPath = (object, path, newValue, concat) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path, Object);\n  obj[k] = obj[k] || [];\n  obj[k].push(newValue);\n};\nconst getPath = (object, path) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path);\n  if (!obj) return undefined;\n  if (!Object.prototype.hasOwnProperty.call(obj, k)) return undefined;\n  return obj[k];\n};\nconst getPathWithDefaults = (data, defaultData, key) => {\n  const value = getPath(data, key);\n  if (value !== undefined) {\n    return value;\n  }\n  return getPath(defaultData, key);\n};\nconst deepExtend = (target, source, overwrite) => {\n  for (const prop in source) {\n    if (prop !== '__proto__' && prop !== 'constructor') {\n      if (prop in target) {\n        if (isString(target[prop]) || target[prop] instanceof String || isString(source[prop]) || source[prop] instanceof String) {\n          if (overwrite) target[prop] = source[prop];\n        } else {\n          deepExtend(target[prop], source[prop], overwrite);\n        }\n      } else {\n        target[prop] = source[prop];\n      }\n    }\n  }\n  return target;\n};\nconst regexEscape = str => str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\nvar _entityMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '/': '&#x2F;'\n};\nconst escape = data => {\n  if (isString(data)) {\n    return data.replace(/[&<>\"'\\/]/g, s => _entityMap[s]);\n  }\n  return data;\n};\nclass RegExpCache {\n  constructor(capacity) {\n    this.capacity = capacity;\n    this.regExpMap = new Map();\n    this.regExpQueue = [];\n  }\n  getRegExp(pattern) {\n    const regExpFromCache = this.regExpMap.get(pattern);\n    if (regExpFromCache !== undefined) {\n      return regExpFromCache;\n    }\n    const regExpNew = new RegExp(pattern);\n    if (this.regExpQueue.length === this.capacity) {\n      this.regExpMap.delete(this.regExpQueue.shift());\n    }\n    this.regExpMap.set(pattern, regExpNew);\n    this.regExpQueue.push(pattern);\n    return regExpNew;\n  }\n}\nconst chars = [' ', ',', '?', '!', ';'];\nconst looksLikeObjectPathRegExpCache = new RegExpCache(20);\nconst looksLikeObjectPath = (key, nsSeparator, keySeparator) => {\n  nsSeparator = nsSeparator || '';\n  keySeparator = keySeparator || '';\n  const possibleChars = chars.filter(c => nsSeparator.indexOf(c) < 0 && keySeparator.indexOf(c) < 0);\n  if (possibleChars.length === 0) return true;\n  const r = looksLikeObjectPathRegExpCache.getRegExp(`(${possibleChars.map(c => c === '?' ? '\\\\?' : c).join('|')})`);\n  let matched = !r.test(key);\n  if (!matched) {\n    const ki = key.indexOf(keySeparator);\n    if (ki > 0 && !r.test(key.substring(0, ki))) {\n      matched = true;\n    }\n  }\n  return matched;\n};\nconst deepFind = (obj, path, keySeparator = '.') => {\n  if (!obj) return undefined;\n  if (obj[path]) {\n    if (!Object.prototype.hasOwnProperty.call(obj, path)) return undefined;\n    return obj[path];\n  }\n  const tokens = path.split(keySeparator);\n  let current = obj;\n  for (let i = 0; i < tokens.length;) {\n    if (!current || typeof current !== 'object') {\n      return undefined;\n    }\n    let next;\n    let nextPath = '';\n    for (let j = i; j < tokens.length; ++j) {\n      if (j !== i) {\n        nextPath += keySeparator;\n      }\n      nextPath += tokens[j];\n      next = current[nextPath];\n      if (next !== undefined) {\n        if (['string', 'number', 'boolean'].indexOf(typeof next) > -1 && j < tokens.length - 1) {\n          continue;\n        }\n        i += j - i + 1;\n        break;\n      }\n    }\n    current = next;\n  }\n  return current;\n};\nconst getCleanedCode = code => code?.replace('_', '-');\nconst consoleLogger = {\n  type: 'logger',\n  log(args) {\n    this.output('log', args);\n  },\n  warn(args) {\n    this.output('warn', args);\n  },\n  error(args) {\n    this.output('error', args);\n  },\n  output(type, args) {\n    console?.[type]?.apply?.(console, args);\n  }\n};\nclass Logger {\n  constructor(concreteLogger, options = {}) {\n    this.init(concreteLogger, options);\n  }\n  init(concreteLogger, options = {}) {\n    this.prefix = options.prefix || 'i18next:';\n    this.logger = concreteLogger || consoleLogger;\n    this.options = options;\n    this.debug = options.debug;\n  }\n  log(...args) {\n    return this.forward(args, 'log', '', true);\n  }\n  warn(...args) {\n    return this.forward(args, 'warn', '', true);\n  }\n  error(...args) {\n    return this.forward(args, 'error', '');\n  }\n  deprecate(...args) {\n    return this.forward(args, 'warn', 'WARNING DEPRECATED: ', true);\n  }\n  forward(args, lvl, prefix, debugOnly) {\n    if (debugOnly && !this.debug) return null;\n    if (isString(args[0])) args[0] = `${prefix}${this.prefix} ${args[0]}`;\n    return this.logger[lvl](args);\n  }\n  create(moduleName) {\n    return new Logger(this.logger, {\n      ...{\n        prefix: `${this.prefix}:${moduleName}:`\n      },\n      ...this.options\n    });\n  }\n  clone(options) {\n    options = options || this.options;\n    options.prefix = options.prefix || this.prefix;\n    return new Logger(this.logger, options);\n  }\n}\nvar baseLogger = new Logger();\nclass EventEmitter {\n  constructor() {\n    this.observers = {};\n  }\n  on(events, listener) {\n    events.split(' ').forEach(event => {\n      if (!this.observers[event]) this.observers[event] = new Map();\n      const numListeners = this.observers[event].get(listener) || 0;\n      this.observers[event].set(listener, numListeners + 1);\n    });\n    return this;\n  }\n  off(event, listener) {\n    if (!this.observers[event]) return;\n    if (!listener) {\n      delete this.observers[event];\n      return;\n    }\n    this.observers[event].delete(listener);\n  }\n  emit(event, ...args) {\n    if (this.observers[event]) {\n      const cloned = Array.from(this.observers[event].entries());\n      cloned.forEach(([observer, numTimesAdded]) => {\n        for (let i = 0; i < numTimesAdded; i++) {\n          observer(...args);\n        }\n      });\n    }\n    if (this.observers['*']) {\n      const cloned = Array.from(this.observers['*'].entries());\n      cloned.forEach(([observer, numTimesAdded]) => {\n        for (let i = 0; i < numTimesAdded; i++) {\n          observer.apply(observer, [event, ...args]);\n        }\n      });\n    }\n  }\n}\nclass ResourceStore extends EventEmitter {\n  constructor(data, options = {\n    ns: ['translation'],\n    defaultNS: 'translation'\n  }) {\n    super();\n    this.data = data || {};\n    this.options = options;\n    if (this.options.keySeparator === undefined) {\n      this.options.keySeparator = '.';\n    }\n    if (this.options.ignoreJSONStructure === undefined) {\n      this.options.ignoreJSONStructure = true;\n    }\n  }\n  addNamespaces(ns) {\n    if (this.options.ns.indexOf(ns) < 0) {\n      this.options.ns.push(ns);\n    }\n  }\n  removeNamespaces(ns) {\n    const index = this.options.ns.indexOf(ns);\n    if (index > -1) {\n      this.options.ns.splice(index, 1);\n    }\n  }\n  getResource(lng, ns, key, options = {}) {\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    const ignoreJSONStructure = options.ignoreJSONStructure !== undefined ? options.ignoreJSONStructure : this.options.ignoreJSONStructure;\n    let path;\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n    } else {\n      path = [lng, ns];\n      if (key) {\n        if (Array.isArray(key)) {\n          path.push(...key);\n        } else if (isString(key) && keySeparator) {\n          path.push(...key.split(keySeparator));\n        } else {\n          path.push(key);\n        }\n      }\n    }\n    const result = getPath(this.data, path);\n    if (!result && !ns && !key && lng.indexOf('.') > -1) {\n      lng = path[0];\n      ns = path[1];\n      key = path.slice(2).join('.');\n    }\n    if (result || !ignoreJSONStructure || !isString(key)) return result;\n    return deepFind(this.data?.[lng]?.[ns], key, keySeparator);\n  }\n  addResource(lng, ns, key, value, options = {\n    silent: false\n  }) {\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    let path = [lng, ns];\n    if (key) path = path.concat(keySeparator ? key.split(keySeparator) : key);\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      value = ns;\n      ns = path[1];\n    }\n    this.addNamespaces(ns);\n    setPath(this.data, path, value);\n    if (!options.silent) this.emit('added', lng, ns, key, value);\n  }\n  addResources(lng, ns, resources, options = {\n    silent: false\n  }) {\n    for (const m in resources) {\n      if (isString(resources[m]) || Array.isArray(resources[m])) this.addResource(lng, ns, m, resources[m], {\n        silent: true\n      });\n    }\n    if (!options.silent) this.emit('added', lng, ns, resources);\n  }\n  addResourceBundle(lng, ns, resources, deep, overwrite, options = {\n    silent: false,\n    skipCopy: false\n  }) {\n    let path = [lng, ns];\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      deep = resources;\n      resources = ns;\n      ns = path[1];\n    }\n    this.addNamespaces(ns);\n    let pack = getPath(this.data, path) || {};\n    if (!options.skipCopy) resources = JSON.parse(JSON.stringify(resources));\n    if (deep) {\n      deepExtend(pack, resources, overwrite);\n    } else {\n      pack = {\n        ...pack,\n        ...resources\n      };\n    }\n    setPath(this.data, path, pack);\n    if (!options.silent) this.emit('added', lng, ns, resources);\n  }\n  removeResourceBundle(lng, ns) {\n    if (this.hasResourceBundle(lng, ns)) {\n      delete this.data[lng][ns];\n    }\n    this.removeNamespaces(ns);\n    this.emit('removed', lng, ns);\n  }\n  hasResourceBundle(lng, ns) {\n    return this.getResource(lng, ns) !== undefined;\n  }\n  getResourceBundle(lng, ns) {\n    if (!ns) ns = this.options.defaultNS;\n    return this.getResource(lng, ns);\n  }\n  getDataByLanguage(lng) {\n    return this.data[lng];\n  }\n  hasLanguageSomeTranslations(lng) {\n    const data = this.getDataByLanguage(lng);\n    const n = data && Object.keys(data) || [];\n    return !!n.find(v => data[v] && Object.keys(data[v]).length > 0);\n  }\n  toJSON() {\n    return this.data;\n  }\n}\nvar postProcessor = {\n  processors: {},\n  addPostProcessor(module) {\n    this.processors[module.name] = module;\n  },\n  handle(processors, value, key, options, translator) {\n    processors.forEach(processor => {\n      value = this.processors[processor]?.process(value, key, options, translator) ?? value;\n    });\n    return value;\n  }\n};\nconst PATH_KEY = Symbol('i18next/PATH_KEY');\nfunction createProxy() {\n  const state = [];\n  const handler = Object.create(null);\n  let proxy;\n  handler.get = (target, key) => {\n    proxy?.revoke?.();\n    if (key === PATH_KEY) return state;\n    state.push(key);\n    proxy = Proxy.revocable(target, handler);\n    return proxy.proxy;\n  };\n  return Proxy.revocable(Object.create(null), handler).proxy;\n}\nfunction keysFromSelector(selector, opts) {\n  const {\n    [PATH_KEY]: path\n  } = selector(createProxy());\n  return path.join(opts?.keySeparator ?? '.');\n}\nconst checkedLoadedFor = {};\nconst shouldHandleAsObject = res => !isString(res) && typeof res !== 'boolean' && typeof res !== 'number';\nclass Translator extends EventEmitter {\n  constructor(services, options = {}) {\n    super();\n    copy(['resourceStore', 'languageUtils', 'pluralResolver', 'interpolator', 'backendConnector', 'i18nFormat', 'utils'], services, this);\n    this.options = options;\n    if (this.options.keySeparator === undefined) {\n      this.options.keySeparator = '.';\n    }\n    this.logger = baseLogger.create('translator');\n  }\n  changeLanguage(lng) {\n    if (lng) this.language = lng;\n  }\n  exists(key, o = {\n    interpolation: {}\n  }) {\n    const opt = {\n      ...o\n    };\n    if (key == null) return false;\n    const resolved = this.resolve(key, opt);\n    if (resolved?.res === undefined) return false;\n    const isObject = shouldHandleAsObject(resolved.res);\n    if (opt.returnObjects === false && isObject) {\n      return false;\n    }\n    return true;\n  }\n  extractFromKey(key, opt) {\n    let nsSeparator = opt.nsSeparator !== undefined ? opt.nsSeparator : this.options.nsSeparator;\n    if (nsSeparator === undefined) nsSeparator = ':';\n    const keySeparator = opt.keySeparator !== undefined ? opt.keySeparator : this.options.keySeparator;\n    let namespaces = opt.ns || this.options.defaultNS || [];\n    const wouldCheckForNsInKey = nsSeparator && key.indexOf(nsSeparator) > -1;\n    const seemsNaturalLanguage = !this.options.userDefinedKeySeparator && !opt.keySeparator && !this.options.userDefinedNsSeparator && !opt.nsSeparator && !looksLikeObjectPath(key, nsSeparator, keySeparator);\n    if (wouldCheckForNsInKey && !seemsNaturalLanguage) {\n      const m = key.match(this.interpolator.nestingRegexp);\n      if (m && m.length > 0) {\n        return {\n          key,\n          namespaces: isString(namespaces) ? [namespaces] : namespaces\n        };\n      }\n      const parts = key.split(nsSeparator);\n      if (nsSeparator !== keySeparator || nsSeparator === keySeparator && this.options.ns.indexOf(parts[0]) > -1) namespaces = parts.shift();\n      key = parts.join(keySeparator);\n    }\n    return {\n      key,\n      namespaces: isString(namespaces) ? [namespaces] : namespaces\n    };\n  }\n  translate(keys, o, lastKey) {\n    let opt = typeof o === 'object' ? {\n      ...o\n    } : o;\n    if (typeof opt !== 'object' && this.options.overloadTranslationOptionHandler) {\n      opt = this.options.overloadTranslationOptionHandler(arguments);\n    }\n    if (typeof opt === 'object') opt = {\n      ...opt\n    };\n    if (!opt) opt = {};\n    if (keys == null) return '';\n    if (typeof keys === 'function') keys = keysFromSelector(keys, {\n      ...this.options,\n      ...opt\n    });\n    if (!Array.isArray(keys)) keys = [String(keys)];\n    const returnDetails = opt.returnDetails !== undefined ? opt.returnDetails : this.options.returnDetails;\n    const keySeparator = opt.keySeparator !== undefined ? opt.keySeparator : this.options.keySeparator;\n    const {\n      key,\n      namespaces\n    } = this.extractFromKey(keys[keys.length - 1], opt);\n    const namespace = namespaces[namespaces.length - 1];\n    let nsSeparator = opt.nsSeparator !== undefined ? opt.nsSeparator : this.options.nsSeparator;\n    if (nsSeparator === undefined) nsSeparator = ':';\n    const lng = opt.lng || this.language;\n    const appendNamespaceToCIMode = opt.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;\n    if (lng?.toLowerCase() === 'cimode') {\n      if (appendNamespaceToCIMode) {\n        if (returnDetails) {\n          return {\n            res: `${namespace}${nsSeparator}${key}`,\n            usedKey: key,\n            exactUsedKey: key,\n            usedLng: lng,\n            usedNS: namespace,\n            usedParams: this.getUsedParamsDetails(opt)\n          };\n        }\n        return `${namespace}${nsSeparator}${key}`;\n      }\n      if (returnDetails) {\n        return {\n          res: key,\n          usedKey: key,\n          exactUsedKey: key,\n          usedLng: lng,\n          usedNS: namespace,\n          usedParams: this.getUsedParamsDetails(opt)\n        };\n      }\n      return key;\n    }\n    const resolved = this.resolve(keys, opt);\n    let res = resolved?.res;\n    const resUsedKey = resolved?.usedKey || key;\n    const resExactUsedKey = resolved?.exactUsedKey || key;\n    const noObject = ['[object Number]', '[object Function]', '[object RegExp]'];\n    const joinArrays = opt.joinArrays !== undefined ? opt.joinArrays : this.options.joinArrays;\n    const handleAsObjectInI18nFormat = !this.i18nFormat || this.i18nFormat.handleAsObject;\n    const needsPluralHandling = opt.count !== undefined && !isString(opt.count);\n    const hasDefaultValue = Translator.hasDefaultValue(opt);\n    const defaultValueSuffix = needsPluralHandling ? this.pluralResolver.getSuffix(lng, opt.count, opt) : '';\n    const defaultValueSuffixOrdinalFallback = opt.ordinal && needsPluralHandling ? this.pluralResolver.getSuffix(lng, opt.count, {\n      ordinal: false\n    }) : '';\n    const needsZeroSuffixLookup = needsPluralHandling && !opt.ordinal && opt.count === 0;\n    const defaultValue = needsZeroSuffixLookup && opt[`defaultValue${this.options.pluralSeparator}zero`] || opt[`defaultValue${defaultValueSuffix}`] || opt[`defaultValue${defaultValueSuffixOrdinalFallback}`] || opt.defaultValue;\n    let resForObjHndl = res;\n    if (handleAsObjectInI18nFormat && !res && hasDefaultValue) {\n      resForObjHndl = defaultValue;\n    }\n    const handleAsObject = shouldHandleAsObject(resForObjHndl);\n    const resType = Object.prototype.toString.apply(resForObjHndl);\n    if (handleAsObjectInI18nFormat && resForObjHndl && handleAsObject && noObject.indexOf(resType) < 0 && !(isString(joinArrays) && Array.isArray(resForObjHndl))) {\n      if (!opt.returnObjects && !this.options.returnObjects) {\n        if (!this.options.returnedObjectHandler) {\n          this.logger.warn('accessing an object - but returnObjects options is not enabled!');\n        }\n        const r = this.options.returnedObjectHandler ? this.options.returnedObjectHandler(resUsedKey, resForObjHndl, {\n          ...opt,\n          ns: namespaces\n        }) : `key '${key} (${this.language})' returned an object instead of string.`;\n        if (returnDetails) {\n          resolved.res = r;\n          resolved.usedParams = this.getUsedParamsDetails(opt);\n          return resolved;\n        }\n        return r;\n      }\n      if (keySeparator) {\n        const resTypeIsArray = Array.isArray(resForObjHndl);\n        const copy = resTypeIsArray ? [] : {};\n        const newKeyToUse = resTypeIsArray ? resExactUsedKey : resUsedKey;\n        for (const m in resForObjHndl) {\n          if (Object.prototype.hasOwnProperty.call(resForObjHndl, m)) {\n            const deepKey = `${newKeyToUse}${keySeparator}${m}`;\n            if (hasDefaultValue && !res) {\n              copy[m] = this.translate(deepKey, {\n                ...opt,\n                defaultValue: shouldHandleAsObject(defaultValue) ? defaultValue[m] : undefined,\n                ...{\n                  joinArrays: false,\n                  ns: namespaces\n                }\n              });\n            } else {\n              copy[m] = this.translate(deepKey, {\n                ...opt,\n                ...{\n                  joinArrays: false,\n                  ns: namespaces\n                }\n              });\n            }\n            if (copy[m] === deepKey) copy[m] = resForObjHndl[m];\n          }\n        }\n        res = copy;\n      }\n    } else if (handleAsObjectInI18nFormat && isString(joinArrays) && Array.isArray(res)) {\n      res = res.join(joinArrays);\n      if (res) res = this.extendTranslation(res, keys, opt, lastKey);\n    } else {\n      let usedDefault = false;\n      let usedKey = false;\n      if (!this.isValidLookup(res) && hasDefaultValue) {\n        usedDefault = true;\n        res = defaultValue;\n      }\n      if (!this.isValidLookup(res)) {\n        usedKey = true;\n        res = key;\n      }\n      const missingKeyNoValueFallbackToKey = opt.missingKeyNoValueFallbackToKey || this.options.missingKeyNoValueFallbackToKey;\n      const resForMissing = missingKeyNoValueFallbackToKey && usedKey ? undefined : res;\n      const updateMissing = hasDefaultValue && defaultValue !== res && this.options.updateMissing;\n      if (usedKey || usedDefault || updateMissing) {\n        this.logger.log(updateMissing ? 'updateKey' : 'missingKey', lng, namespace, key, updateMissing ? defaultValue : res);\n        if (keySeparator) {\n          const fk = this.resolve(key, {\n            ...opt,\n            keySeparator: false\n          });\n          if (fk && fk.res) this.logger.warn('Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.');\n        }\n        let lngs = [];\n        const fallbackLngs = this.languageUtils.getFallbackCodes(this.options.fallbackLng, opt.lng || this.language);\n        if (this.options.saveMissingTo === 'fallback' && fallbackLngs && fallbackLngs[0]) {\n          for (let i = 0; i < fallbackLngs.length; i++) {\n            lngs.push(fallbackLngs[i]);\n          }\n        } else if (this.options.saveMissingTo === 'all') {\n          lngs = this.languageUtils.toResolveHierarchy(opt.lng || this.language);\n        } else {\n          lngs.push(opt.lng || this.language);\n        }\n        const send = (l, k, specificDefaultValue) => {\n          const defaultForMissing = hasDefaultValue && specificDefaultValue !== res ? specificDefaultValue : resForMissing;\n          if (this.options.missingKeyHandler) {\n            this.options.missingKeyHandler(l, namespace, k, defaultForMissing, updateMissing, opt);\n          } else if (this.backendConnector?.saveMissing) {\n            this.backendConnector.saveMissing(l, namespace, k, defaultForMissing, updateMissing, opt);\n          }\n          this.emit('missingKey', l, namespace, k, res);\n        };\n        if (this.options.saveMissing) {\n          if (this.options.saveMissingPlurals && needsPluralHandling) {\n            lngs.forEach(language => {\n              const suffixes = this.pluralResolver.getSuffixes(language, opt);\n              if (needsZeroSuffixLookup && opt[`defaultValue${this.options.pluralSeparator}zero`] && suffixes.indexOf(`${this.options.pluralSeparator}zero`) < 0) {\n                suffixes.push(`${this.options.pluralSeparator}zero`);\n              }\n              suffixes.forEach(suffix => {\n                send([language], key + suffix, opt[`defaultValue${suffix}`] || defaultValue);\n              });\n            });\n          } else {\n            send(lngs, key, defaultValue);\n          }\n        }\n      }\n      res = this.extendTranslation(res, keys, opt, resolved, lastKey);\n      if (usedKey && res === key && this.options.appendNamespaceToMissingKey) {\n        res = `${namespace}${nsSeparator}${key}`;\n      }\n      if ((usedKey || usedDefault) && this.options.parseMissingKeyHandler) {\n        res = this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey ? `${namespace}${nsSeparator}${key}` : key, usedDefault ? res : undefined, opt);\n      }\n    }\n    if (returnDetails) {\n      resolved.res = res;\n      resolved.usedParams = this.getUsedParamsDetails(opt);\n      return resolved;\n    }\n    return res;\n  }\n  extendTranslation(res, key, opt, resolved, lastKey) {\n    if (this.i18nFormat?.parse) {\n      res = this.i18nFormat.parse(res, {\n        ...this.options.interpolation.defaultVariables,\n        ...opt\n      }, opt.lng || this.language || resolved.usedLng, resolved.usedNS, resolved.usedKey, {\n        resolved\n      });\n    } else if (!opt.skipInterpolation) {\n      if (opt.interpolation) this.interpolator.init({\n        ...opt,\n        ...{\n          interpolation: {\n            ...this.options.interpolation,\n            ...opt.interpolation\n          }\n        }\n      });\n      const skipOnVariables = isString(res) && (opt?.interpolation?.skipOnVariables !== undefined ? opt.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables);\n      let nestBef;\n      if (skipOnVariables) {\n        const nb = res.match(this.interpolator.nestingRegexp);\n        nestBef = nb && nb.length;\n      }\n      let data = opt.replace && !isString(opt.replace) ? opt.replace : opt;\n      if (this.options.interpolation.defaultVariables) data = {\n        ...this.options.interpolation.defaultVariables,\n        ...data\n      };\n      res = this.interpolator.interpolate(res, data, opt.lng || this.language || resolved.usedLng, opt);\n      if (skipOnVariables) {\n        const na = res.match(this.interpolator.nestingRegexp);\n        const nestAft = na && na.length;\n        if (nestBef < nestAft) opt.nest = false;\n      }\n      if (!opt.lng && resolved && resolved.res) opt.lng = this.language || resolved.usedLng;\n      if (opt.nest !== false) res = this.interpolator.nest(res, (...args) => {\n        if (lastKey?.[0] === args[0] && !opt.context) {\n          this.logger.warn(`It seems you are nesting recursively key: ${args[0]} in key: ${key[0]}`);\n          return null;\n        }\n        return this.translate(...args, key);\n      }, opt);\n      if (opt.interpolation) this.interpolator.reset();\n    }\n    const postProcess = opt.postProcess || this.options.postProcess;\n    const postProcessorNames = isString(postProcess) ? [postProcess] : postProcess;\n    if (res != null && postProcessorNames?.length && opt.applyPostProcessor !== false) {\n      res = postProcessor.handle(postProcessorNames, res, key, this.options && this.options.postProcessPassResolved ? {\n        i18nResolved: {\n          ...resolved,\n          usedParams: this.getUsedParamsDetails(opt)\n        },\n        ...opt\n      } : opt, this);\n    }\n    return res;\n  }\n  resolve(keys, opt = {}) {\n    let found;\n    let usedKey;\n    let exactUsedKey;\n    let usedLng;\n    let usedNS;\n    if (isString(keys)) keys = [keys];\n    keys.forEach(k => {\n      if (this.isValidLookup(found)) return;\n      const extracted = this.extractFromKey(k, opt);\n      const key = extracted.key;\n      usedKey = key;\n      let namespaces = extracted.namespaces;\n      if (this.options.fallbackNS) namespaces = namespaces.concat(this.options.fallbackNS);\n      const needsPluralHandling = opt.count !== undefined && !isString(opt.count);\n      const needsZeroSuffixLookup = needsPluralHandling && !opt.ordinal && opt.count === 0;\n      const needsContextHandling = opt.context !== undefined && (isString(opt.context) || typeof opt.context === 'number') && opt.context !== '';\n      const codes = opt.lngs ? opt.lngs : this.languageUtils.toResolveHierarchy(opt.lng || this.language, opt.fallbackLng);\n      namespaces.forEach(ns => {\n        if (this.isValidLookup(found)) return;\n        usedNS = ns;\n        if (!checkedLoadedFor[`${codes[0]}-${ns}`] && this.utils?.hasLoadedNamespace && !this.utils?.hasLoadedNamespace(usedNS)) {\n          checkedLoadedFor[`${codes[0]}-${ns}`] = true;\n          this.logger.warn(`key \"${usedKey}\" for languages \"${codes.join(', ')}\" won't get resolved as namespace \"${usedNS}\" was not yet loaded`, 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n        }\n        codes.forEach(code => {\n          if (this.isValidLookup(found)) return;\n          usedLng = code;\n          const finalKeys = [key];\n          if (this.i18nFormat?.addLookupKeys) {\n            this.i18nFormat.addLookupKeys(finalKeys, key, code, ns, opt);\n          } else {\n            let pluralSuffix;\n            if (needsPluralHandling) pluralSuffix = this.pluralResolver.getSuffix(code, opt.count, opt);\n            const zeroSuffix = `${this.options.pluralSeparator}zero`;\n            const ordinalPrefix = `${this.options.pluralSeparator}ordinal${this.options.pluralSeparator}`;\n            if (needsPluralHandling) {\n              if (opt.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                finalKeys.push(key + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n              }\n              finalKeys.push(key + pluralSuffix);\n              if (needsZeroSuffixLookup) {\n                finalKeys.push(key + zeroSuffix);\n              }\n            }\n            if (needsContextHandling) {\n              const contextKey = `${key}${this.options.contextSeparator || '_'}${opt.context}`;\n              finalKeys.push(contextKey);\n              if (needsPluralHandling) {\n                if (opt.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                  finalKeys.push(contextKey + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n                }\n                finalKeys.push(contextKey + pluralSuffix);\n                if (needsZeroSuffixLookup) {\n                  finalKeys.push(contextKey + zeroSuffix);\n                }\n              }\n            }\n          }\n          let possibleKey;\n          while (possibleKey = finalKeys.pop()) {\n            if (!this.isValidLookup(found)) {\n              exactUsedKey = possibleKey;\n              found = this.getResource(code, ns, possibleKey, opt);\n            }\n          }\n        });\n      });\n    });\n    return {\n      res: found,\n      usedKey,\n      exactUsedKey,\n      usedLng,\n      usedNS\n    };\n  }\n  isValidLookup(res) {\n    return res !== undefined && !(!this.options.returnNull && res === null) && !(!this.options.returnEmptyString && res === '');\n  }\n  getResource(code, ns, key, options = {}) {\n    if (this.i18nFormat?.getResource) return this.i18nFormat.getResource(code, ns, key, options);\n    return this.resourceStore.getResource(code, ns, key, options);\n  }\n  getUsedParamsDetails(options = {}) {\n    const optionsKeys = ['defaultValue', 'ordinal', 'context', 'replace', 'lng', 'lngs', 'fallbackLng', 'ns', 'keySeparator', 'nsSeparator', 'returnObjects', 'returnDetails', 'joinArrays', 'postProcess', 'interpolation'];\n    const useOptionsReplaceForData = options.replace && !isString(options.replace);\n    let data = useOptionsReplaceForData ? options.replace : options;\n    if (useOptionsReplaceForData && typeof options.count !== 'undefined') {\n      data.count = options.count;\n    }\n    if (this.options.interpolation.defaultVariables) {\n      data = {\n        ...this.options.interpolation.defaultVariables,\n        ...data\n      };\n    }\n    if (!useOptionsReplaceForData) {\n      data = {\n        ...data\n      };\n      for (const key of optionsKeys) {\n        delete data[key];\n      }\n    }\n    return data;\n  }\n  static hasDefaultValue(options) {\n    const prefix = 'defaultValue';\n    for (const option in options) {\n      if (Object.prototype.hasOwnProperty.call(options, option) && prefix === option.substring(0, prefix.length) && undefined !== options[option]) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\nclass LanguageUtil {\n  constructor(options) {\n    this.options = options;\n    this.supportedLngs = this.options.supportedLngs || false;\n    this.logger = baseLogger.create('languageUtils');\n  }\n  getScriptPartFromCode(code) {\n    code = getCleanedCode(code);\n    if (!code || code.indexOf('-') < 0) return null;\n    const p = code.split('-');\n    if (p.length === 2) return null;\n    p.pop();\n    if (p[p.length - 1].toLowerCase() === 'x') return null;\n    return this.formatLanguageCode(p.join('-'));\n  }\n  getLanguagePartFromCode(code) {\n    code = getCleanedCode(code);\n    if (!code || code.indexOf('-') < 0) return code;\n    const p = code.split('-');\n    return this.formatLanguageCode(p[0]);\n  }\n  formatLanguageCode(code) {\n    if (isString(code) && code.indexOf('-') > -1) {\n      let formattedCode;\n      try {\n        formattedCode = Intl.getCanonicalLocales(code)[0];\n      } catch (e) {}\n      if (formattedCode && this.options.lowerCaseLng) {\n        formattedCode = formattedCode.toLowerCase();\n      }\n      if (formattedCode) return formattedCode;\n      if (this.options.lowerCaseLng) {\n        return code.toLowerCase();\n      }\n      return code;\n    }\n    return this.options.cleanCode || this.options.lowerCaseLng ? code.toLowerCase() : code;\n  }\n  isSupportedCode(code) {\n    if (this.options.load === 'languageOnly' || this.options.nonExplicitSupportedLngs) {\n      code = this.getLanguagePartFromCode(code);\n    }\n    return !this.supportedLngs || !this.supportedLngs.length || this.supportedLngs.indexOf(code) > -1;\n  }\n  getBestMatchFromCodes(codes) {\n    if (!codes) return null;\n    let found;\n    codes.forEach(code => {\n      if (found) return;\n      const cleanedLng = this.formatLanguageCode(code);\n      if (!this.options.supportedLngs || this.isSupportedCode(cleanedLng)) found = cleanedLng;\n    });\n    if (!found && this.options.supportedLngs) {\n      codes.forEach(code => {\n        if (found) return;\n        const lngScOnly = this.getScriptPartFromCode(code);\n        if (this.isSupportedCode(lngScOnly)) return found = lngScOnly;\n        const lngOnly = this.getLanguagePartFromCode(code);\n        if (this.isSupportedCode(lngOnly)) return found = lngOnly;\n        found = this.options.supportedLngs.find(supportedLng => {\n          if (supportedLng === lngOnly) return supportedLng;\n          if (supportedLng.indexOf('-') < 0 && lngOnly.indexOf('-') < 0) return;\n          if (supportedLng.indexOf('-') > 0 && lngOnly.indexOf('-') < 0 && supportedLng.substring(0, supportedLng.indexOf('-')) === lngOnly) return supportedLng;\n          if (supportedLng.indexOf(lngOnly) === 0 && lngOnly.length > 1) return supportedLng;\n        });\n      });\n    }\n    if (!found) found = this.getFallbackCodes(this.options.fallbackLng)[0];\n    return found;\n  }\n  getFallbackCodes(fallbacks, code) {\n    if (!fallbacks) return [];\n    if (typeof fallbacks === 'function') fallbacks = fallbacks(code);\n    if (isString(fallbacks)) fallbacks = [fallbacks];\n    if (Array.isArray(fallbacks)) return fallbacks;\n    if (!code) return fallbacks.default || [];\n    let found = fallbacks[code];\n    if (!found) found = fallbacks[this.getScriptPartFromCode(code)];\n    if (!found) found = fallbacks[this.formatLanguageCode(code)];\n    if (!found) found = fallbacks[this.getLanguagePartFromCode(code)];\n    if (!found) found = fallbacks.default;\n    return found || [];\n  }\n  toResolveHierarchy(code, fallbackCode) {\n    const fallbackCodes = this.getFallbackCodes((fallbackCode === false ? [] : fallbackCode) || this.options.fallbackLng || [], code);\n    const codes = [];\n    const addCode = c => {\n      if (!c) return;\n      if (this.isSupportedCode(c)) {\n        codes.push(c);\n      } else {\n        this.logger.warn(`rejecting language code not found in supportedLngs: ${c}`);\n      }\n    };\n    if (isString(code) && (code.indexOf('-') > -1 || code.indexOf('_') > -1)) {\n      if (this.options.load !== 'languageOnly') addCode(this.formatLanguageCode(code));\n      if (this.options.load !== 'languageOnly' && this.options.load !== 'currentOnly') addCode(this.getScriptPartFromCode(code));\n      if (this.options.load !== 'currentOnly') addCode(this.getLanguagePartFromCode(code));\n    } else if (isString(code)) {\n      addCode(this.formatLanguageCode(code));\n    }\n    fallbackCodes.forEach(fc => {\n      if (codes.indexOf(fc) < 0) addCode(this.formatLanguageCode(fc));\n    });\n    return codes;\n  }\n}\nconst suffixesOrder = {\n  zero: 0,\n  one: 1,\n  two: 2,\n  few: 3,\n  many: 4,\n  other: 5\n};\nconst dummyRule = {\n  select: count => count === 1 ? 'one' : 'other',\n  resolvedOptions: () => ({\n    pluralCategories: ['one', 'other']\n  })\n};\nclass PluralResolver {\n  constructor(languageUtils, options = {}) {\n    this.languageUtils = languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('pluralResolver');\n    this.pluralRulesCache = {};\n  }\n  addRule(lng, obj) {\n    this.rules[lng] = obj;\n  }\n  clearCache() {\n    this.pluralRulesCache = {};\n  }\n  getRule(code, options = {}) {\n    const cleanedCode = getCleanedCode(code === 'dev' ? 'en' : code);\n    const type = options.ordinal ? 'ordinal' : 'cardinal';\n    const cacheKey = JSON.stringify({\n      cleanedCode,\n      type\n    });\n    if (cacheKey in this.pluralRulesCache) {\n      return this.pluralRulesCache[cacheKey];\n    }\n    let rule;\n    try {\n      rule = new Intl.PluralRules(cleanedCode, {\n        type\n      });\n    } catch (err) {\n      if (!Intl) {\n        this.logger.error('No Intl support, please use an Intl polyfill!');\n        return dummyRule;\n      }\n      if (!code.match(/-|_/)) return dummyRule;\n      const lngPart = this.languageUtils.getLanguagePartFromCode(code);\n      rule = this.getRule(lngPart, options);\n    }\n    this.pluralRulesCache[cacheKey] = rule;\n    return rule;\n  }\n  needsPlural(code, options = {}) {\n    let rule = this.getRule(code, options);\n    if (!rule) rule = this.getRule('dev', options);\n    return rule?.resolvedOptions().pluralCategories.length > 1;\n  }\n  getPluralFormsOfKey(code, key, options = {}) {\n    return this.getSuffixes(code, options).map(suffix => `${key}${suffix}`);\n  }\n  getSuffixes(code, options = {}) {\n    let rule = this.getRule(code, options);\n    if (!rule) rule = this.getRule('dev', options);\n    if (!rule) return [];\n    return rule.resolvedOptions().pluralCategories.sort((pluralCategory1, pluralCategory2) => suffixesOrder[pluralCategory1] - suffixesOrder[pluralCategory2]).map(pluralCategory => `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${pluralCategory}`);\n  }\n  getSuffix(code, count, options = {}) {\n    const rule = this.getRule(code, options);\n    if (rule) {\n      return `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${rule.select(count)}`;\n    }\n    this.logger.warn(`no plural rule found for: ${code}`);\n    return this.getSuffix('dev', count, options);\n  }\n}\nconst deepFindWithDefaults = (data, defaultData, key, keySeparator = '.', ignoreJSONStructure = true) => {\n  let path = getPathWithDefaults(data, defaultData, key);\n  if (!path && ignoreJSONStructure && isString(key)) {\n    path = deepFind(data, key, keySeparator);\n    if (path === undefined) path = deepFind(defaultData, key, keySeparator);\n  }\n  return path;\n};\nconst regexSafe = val => val.replace(/\\$/g, '$$$$');\nclass Interpolator {\n  constructor(options = {}) {\n    this.logger = baseLogger.create('interpolator');\n    this.options = options;\n    this.format = options?.interpolation?.format || (value => value);\n    this.init(options);\n  }\n  init(options = {}) {\n    if (!options.interpolation) options.interpolation = {\n      escapeValue: true\n    };\n    const {\n      escape: escape$1,\n      escapeValue,\n      useRawValueToEscape,\n      prefix,\n      prefixEscaped,\n      suffix,\n      suffixEscaped,\n      formatSeparator,\n      unescapeSuffix,\n      unescapePrefix,\n      nestingPrefix,\n      nestingPrefixEscaped,\n      nestingSuffix,\n      nestingSuffixEscaped,\n      nestingOptionsSeparator,\n      maxReplaces,\n      alwaysFormat\n    } = options.interpolation;\n    this.escape = escape$1 !== undefined ? escape$1 : escape;\n    this.escapeValue = escapeValue !== undefined ? escapeValue : true;\n    this.useRawValueToEscape = useRawValueToEscape !== undefined ? useRawValueToEscape : false;\n    this.prefix = prefix ? regexEscape(prefix) : prefixEscaped || '{{';\n    this.suffix = suffix ? regexEscape(suffix) : suffixEscaped || '}}';\n    this.formatSeparator = formatSeparator || ',';\n    this.unescapePrefix = unescapeSuffix ? '' : unescapePrefix || '-';\n    this.unescapeSuffix = this.unescapePrefix ? '' : unescapeSuffix || '';\n    this.nestingPrefix = nestingPrefix ? regexEscape(nestingPrefix) : nestingPrefixEscaped || regexEscape('$t(');\n    this.nestingSuffix = nestingSuffix ? regexEscape(nestingSuffix) : nestingSuffixEscaped || regexEscape(')');\n    this.nestingOptionsSeparator = nestingOptionsSeparator || ',';\n    this.maxReplaces = maxReplaces || 1000;\n    this.alwaysFormat = alwaysFormat !== undefined ? alwaysFormat : false;\n    this.resetRegExp();\n  }\n  reset() {\n    if (this.options) this.init(this.options);\n  }\n  resetRegExp() {\n    const getOrResetRegExp = (existingRegExp, pattern) => {\n      if (existingRegExp?.source === pattern) {\n        existingRegExp.lastIndex = 0;\n        return existingRegExp;\n      }\n      return new RegExp(pattern, 'g');\n    };\n    this.regexp = getOrResetRegExp(this.regexp, `${this.prefix}(.+?)${this.suffix}`);\n    this.regexpUnescape = getOrResetRegExp(this.regexpUnescape, `${this.prefix}${this.unescapePrefix}(.+?)${this.unescapeSuffix}${this.suffix}`);\n    this.nestingRegexp = getOrResetRegExp(this.nestingRegexp, `${this.nestingPrefix}((?:[^()\"']+|\"[^\"]*\"|'[^']*'|\\\\((?:[^()]|\"[^\"]*\"|'[^']*')*\\\\))*?)${this.nestingSuffix}`);\n  }\n  interpolate(str, data, lng, options) {\n    let match;\n    let value;\n    let replaces;\n    const defaultData = this.options && this.options.interpolation && this.options.interpolation.defaultVariables || {};\n    const handleFormat = key => {\n      if (key.indexOf(this.formatSeparator) < 0) {\n        const path = deepFindWithDefaults(data, defaultData, key, this.options.keySeparator, this.options.ignoreJSONStructure);\n        return this.alwaysFormat ? this.format(path, undefined, lng, {\n          ...options,\n          ...data,\n          interpolationkey: key\n        }) : path;\n      }\n      const p = key.split(this.formatSeparator);\n      const k = p.shift().trim();\n      const f = p.join(this.formatSeparator).trim();\n      return this.format(deepFindWithDefaults(data, defaultData, k, this.options.keySeparator, this.options.ignoreJSONStructure), f, lng, {\n        ...options,\n        ...data,\n        interpolationkey: k\n      });\n    };\n    this.resetRegExp();\n    const missingInterpolationHandler = options?.missingInterpolationHandler || this.options.missingInterpolationHandler;\n    const skipOnVariables = options?.interpolation?.skipOnVariables !== undefined ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables;\n    const todos = [{\n      regex: this.regexpUnescape,\n      safeValue: val => regexSafe(val)\n    }, {\n      regex: this.regexp,\n      safeValue: val => this.escapeValue ? regexSafe(this.escape(val)) : regexSafe(val)\n    }];\n    todos.forEach(todo => {\n      replaces = 0;\n      while (match = todo.regex.exec(str)) {\n        const matchedVar = match[1].trim();\n        value = handleFormat(matchedVar);\n        if (value === undefined) {\n          if (typeof missingInterpolationHandler === 'function') {\n            const temp = missingInterpolationHandler(str, match, options);\n            value = isString(temp) ? temp : '';\n          } else if (options && Object.prototype.hasOwnProperty.call(options, matchedVar)) {\n            value = '';\n          } else if (skipOnVariables) {\n            value = match[0];\n            continue;\n          } else {\n            this.logger.warn(`missed to pass in variable ${matchedVar} for interpolating ${str}`);\n            value = '';\n          }\n        } else if (!isString(value) && !this.useRawValueToEscape) {\n          value = makeString(value);\n        }\n        const safeValue = todo.safeValue(value);\n        str = str.replace(match[0], safeValue);\n        if (skipOnVariables) {\n          todo.regex.lastIndex += value.length;\n          todo.regex.lastIndex -= match[0].length;\n        } else {\n          todo.regex.lastIndex = 0;\n        }\n        replaces++;\n        if (replaces >= this.maxReplaces) {\n          break;\n        }\n      }\n    });\n    return str;\n  }\n  nest(str, fc, options = {}) {\n    let match;\n    let value;\n    let clonedOptions;\n    const handleHasOptions = (key, inheritedOptions) => {\n      const sep = this.nestingOptionsSeparator;\n      if (key.indexOf(sep) < 0) return key;\n      const c = key.split(new RegExp(`${sep}[ ]*{`));\n      let optionsString = `{${c[1]}`;\n      key = c[0];\n      optionsString = this.interpolate(optionsString, clonedOptions);\n      const matchedSingleQuotes = optionsString.match(/'/g);\n      const matchedDoubleQuotes = optionsString.match(/\"/g);\n      if ((matchedSingleQuotes?.length ?? 0) % 2 === 0 && !matchedDoubleQuotes || matchedDoubleQuotes.length % 2 !== 0) {\n        optionsString = optionsString.replace(/'/g, '\"');\n      }\n      try {\n        clonedOptions = JSON.parse(optionsString);\n        if (inheritedOptions) clonedOptions = {\n          ...inheritedOptions,\n          ...clonedOptions\n        };\n      } catch (e) {\n        this.logger.warn(`failed parsing options string in nesting for key ${key}`, e);\n        return `${key}${sep}${optionsString}`;\n      }\n      if (clonedOptions.defaultValue && clonedOptions.defaultValue.indexOf(this.prefix) > -1) delete clonedOptions.defaultValue;\n      return key;\n    };\n    while (match = this.nestingRegexp.exec(str)) {\n      let formatters = [];\n      clonedOptions = {\n        ...options\n      };\n      clonedOptions = clonedOptions.replace && !isString(clonedOptions.replace) ? clonedOptions.replace : clonedOptions;\n      clonedOptions.applyPostProcessor = false;\n      delete clonedOptions.defaultValue;\n      const keyEndIndex = /{.*}/.test(match[1]) ? match[1].lastIndexOf('}') + 1 : match[1].indexOf(this.formatSeparator);\n      if (keyEndIndex !== -1) {\n        formatters = match[1].slice(keyEndIndex).split(this.formatSeparator).map(elem => elem.trim()).filter(Boolean);\n        match[1] = match[1].slice(0, keyEndIndex);\n      }\n      value = fc(handleHasOptions.call(this, match[1].trim(), clonedOptions), clonedOptions);\n      if (value && match[0] === str && !isString(value)) return value;\n      if (!isString(value)) value = makeString(value);\n      if (!value) {\n        this.logger.warn(`missed to resolve ${match[1]} for nesting ${str}`);\n        value = '';\n      }\n      if (formatters.length) {\n        value = formatters.reduce((v, f) => this.format(v, f, options.lng, {\n          ...options,\n          interpolationkey: match[1].trim()\n        }), value.trim());\n      }\n      str = str.replace(match[0], value);\n      this.regexp.lastIndex = 0;\n    }\n    return str;\n  }\n}\nconst parseFormatStr = formatStr => {\n  let formatName = formatStr.toLowerCase().trim();\n  const formatOptions = {};\n  if (formatStr.indexOf('(') > -1) {\n    const p = formatStr.split('(');\n    formatName = p[0].toLowerCase().trim();\n    const optStr = p[1].substring(0, p[1].length - 1);\n    if (formatName === 'currency' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.currency) formatOptions.currency = optStr.trim();\n    } else if (formatName === 'relativetime' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.range) formatOptions.range = optStr.trim();\n    } else {\n      const opts = optStr.split(';');\n      opts.forEach(opt => {\n        if (opt) {\n          const [key, ...rest] = opt.split(':');\n          const val = rest.join(':').trim().replace(/^'+|'+$/g, '');\n          const trimmedKey = key.trim();\n          if (!formatOptions[trimmedKey]) formatOptions[trimmedKey] = val;\n          if (val === 'false') formatOptions[trimmedKey] = false;\n          if (val === 'true') formatOptions[trimmedKey] = true;\n          if (!isNaN(val)) formatOptions[trimmedKey] = parseInt(val, 10);\n        }\n      });\n    }\n  }\n  return {\n    formatName,\n    formatOptions\n  };\n};\nconst createCachedFormatter = fn => {\n  const cache = {};\n  return (v, l, o) => {\n    let optForCache = o;\n    if (o && o.interpolationkey && o.formatParams && o.formatParams[o.interpolationkey] && o[o.interpolationkey]) {\n      optForCache = {\n        ...optForCache,\n        [o.interpolationkey]: undefined\n      };\n    }\n    const key = l + JSON.stringify(optForCache);\n    let frm = cache[key];\n    if (!frm) {\n      frm = fn(getCleanedCode(l), o);\n      cache[key] = frm;\n    }\n    return frm(v);\n  };\n};\nconst createNonCachedFormatter = fn => (v, l, o) => fn(getCleanedCode(l), o)(v);\nclass Formatter {\n  constructor(options = {}) {\n    this.logger = baseLogger.create('formatter');\n    this.options = options;\n    this.init(options);\n  }\n  init(services, options = {\n    interpolation: {}\n  }) {\n    this.formatSeparator = options.interpolation.formatSeparator || ',';\n    const cf = options.cacheInBuiltFormats ? createCachedFormatter : createNonCachedFormatter;\n    this.formats = {\n      number: cf((lng, opt) => {\n        const formatter = new Intl.NumberFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      }),\n      currency: cf((lng, opt) => {\n        const formatter = new Intl.NumberFormat(lng, {\n          ...opt,\n          style: 'currency'\n        });\n        return val => formatter.format(val);\n      }),\n      datetime: cf((lng, opt) => {\n        const formatter = new Intl.DateTimeFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      }),\n      relativetime: cf((lng, opt) => {\n        const formatter = new Intl.RelativeTimeFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val, opt.range || 'day');\n      }),\n      list: cf((lng, opt) => {\n        const formatter = new Intl.ListFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      })\n    };\n  }\n  add(name, fc) {\n    this.formats[name.toLowerCase().trim()] = fc;\n  }\n  addCached(name, fc) {\n    this.formats[name.toLowerCase().trim()] = createCachedFormatter(fc);\n  }\n  format(value, format, lng, options = {}) {\n    const formats = format.split(this.formatSeparator);\n    if (formats.length > 1 && formats[0].indexOf('(') > 1 && formats[0].indexOf(')') < 0 && formats.find(f => f.indexOf(')') > -1)) {\n      const lastIndex = formats.findIndex(f => f.indexOf(')') > -1);\n      formats[0] = [formats[0], ...formats.splice(1, lastIndex)].join(this.formatSeparator);\n    }\n    const result = formats.reduce((mem, f) => {\n      const {\n        formatName,\n        formatOptions\n      } = parseFormatStr(f);\n      if (this.formats[formatName]) {\n        let formatted = mem;\n        try {\n          const valOptions = options?.formatParams?.[options.interpolationkey] || {};\n          const l = valOptions.locale || valOptions.lng || options.locale || options.lng || lng;\n          formatted = this.formats[formatName](mem, l, {\n            ...formatOptions,\n            ...options,\n            ...valOptions\n          });\n        } catch (error) {\n          this.logger.warn(error);\n        }\n        return formatted;\n      } else {\n        this.logger.warn(`there was no format function for ${formatName}`);\n      }\n      return mem;\n    }, value);\n    return result;\n  }\n}\nconst removePending = (q, name) => {\n  if (q.pending[name] !== undefined) {\n    delete q.pending[name];\n    q.pendingCount--;\n  }\n};\nclass Connector extends EventEmitter {\n  constructor(backend, store, services, options = {}) {\n    super();\n    this.backend = backend;\n    this.store = store;\n    this.services = services;\n    this.languageUtils = services.languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('backendConnector');\n    this.waitingReads = [];\n    this.maxParallelReads = options.maxParallelReads || 10;\n    this.readingCalls = 0;\n    this.maxRetries = options.maxRetries >= 0 ? options.maxRetries : 5;\n    this.retryTimeout = options.retryTimeout >= 1 ? options.retryTimeout : 350;\n    this.state = {};\n    this.queue = [];\n    this.backend?.init?.(services, options.backend, options);\n  }\n  queueLoad(languages, namespaces, options, callback) {\n    const toLoad = {};\n    const pending = {};\n    const toLoadLanguages = {};\n    const toLoadNamespaces = {};\n    languages.forEach(lng => {\n      let hasAllNamespaces = true;\n      namespaces.forEach(ns => {\n        const name = `${lng}|${ns}`;\n        if (!options.reload && this.store.hasResourceBundle(lng, ns)) {\n          this.state[name] = 2;\n        } else if (this.state[name] < 0) ;else if (this.state[name] === 1) {\n          if (pending[name] === undefined) pending[name] = true;\n        } else {\n          this.state[name] = 1;\n          hasAllNamespaces = false;\n          if (pending[name] === undefined) pending[name] = true;\n          if (toLoad[name] === undefined) toLoad[name] = true;\n          if (toLoadNamespaces[ns] === undefined) toLoadNamespaces[ns] = true;\n        }\n      });\n      if (!hasAllNamespaces) toLoadLanguages[lng] = true;\n    });\n    if (Object.keys(toLoad).length || Object.keys(pending).length) {\n      this.queue.push({\n        pending,\n        pendingCount: Object.keys(pending).length,\n        loaded: {},\n        errors: [],\n        callback\n      });\n    }\n    return {\n      toLoad: Object.keys(toLoad),\n      pending: Object.keys(pending),\n      toLoadLanguages: Object.keys(toLoadLanguages),\n      toLoadNamespaces: Object.keys(toLoadNamespaces)\n    };\n  }\n  loaded(name, err, data) {\n    const s = name.split('|');\n    const lng = s[0];\n    const ns = s[1];\n    if (err) this.emit('failedLoading', lng, ns, err);\n    if (!err && data) {\n      this.store.addResourceBundle(lng, ns, data, undefined, undefined, {\n        skipCopy: true\n      });\n    }\n    this.state[name] = err ? -1 : 2;\n    if (err && data) this.state[name] = 0;\n    const loaded = {};\n    this.queue.forEach(q => {\n      pushPath(q.loaded, [lng], ns);\n      removePending(q, name);\n      if (err) q.errors.push(err);\n      if (q.pendingCount === 0 && !q.done) {\n        Object.keys(q.loaded).forEach(l => {\n          if (!loaded[l]) loaded[l] = {};\n          const loadedKeys = q.loaded[l];\n          if (loadedKeys.length) {\n            loadedKeys.forEach(n => {\n              if (loaded[l][n] === undefined) loaded[l][n] = true;\n            });\n          }\n        });\n        q.done = true;\n        if (q.errors.length) {\n          q.callback(q.errors);\n        } else {\n          q.callback();\n        }\n      }\n    });\n    this.emit('loaded', loaded);\n    this.queue = this.queue.filter(q => !q.done);\n  }\n  read(lng, ns, fcName, tried = 0, wait = this.retryTimeout, callback) {\n    if (!lng.length) return callback(null, {});\n    if (this.readingCalls >= this.maxParallelReads) {\n      this.waitingReads.push({\n        lng,\n        ns,\n        fcName,\n        tried,\n        wait,\n        callback\n      });\n      return;\n    }\n    this.readingCalls++;\n    const resolver = (err, data) => {\n      this.readingCalls--;\n      if (this.waitingReads.length > 0) {\n        const next = this.waitingReads.shift();\n        this.read(next.lng, next.ns, next.fcName, next.tried, next.wait, next.callback);\n      }\n      if (err && data && tried < this.maxRetries) {\n        setTimeout(() => {\n          this.read.call(this, lng, ns, fcName, tried + 1, wait * 2, callback);\n        }, wait);\n        return;\n      }\n      callback(err, data);\n    };\n    const fc = this.backend[fcName].bind(this.backend);\n    if (fc.length === 2) {\n      try {\n        const r = fc(lng, ns);\n        if (r && typeof r.then === 'function') {\n          r.then(data => resolver(null, data)).catch(resolver);\n        } else {\n          resolver(null, r);\n        }\n      } catch (err) {\n        resolver(err);\n      }\n      return;\n    }\n    return fc(lng, ns, resolver);\n  }\n  prepareLoading(languages, namespaces, options = {}, callback) {\n    if (!this.backend) {\n      this.logger.warn('No backend was added via i18next.use. Will not load resources.');\n      return callback && callback();\n    }\n    if (isString(languages)) languages = this.languageUtils.toResolveHierarchy(languages);\n    if (isString(namespaces)) namespaces = [namespaces];\n    const toLoad = this.queueLoad(languages, namespaces, options, callback);\n    if (!toLoad.toLoad.length) {\n      if (!toLoad.pending.length) callback();\n      return null;\n    }\n    toLoad.toLoad.forEach(name => {\n      this.loadOne(name);\n    });\n  }\n  load(languages, namespaces, callback) {\n    this.prepareLoading(languages, namespaces, {}, callback);\n  }\n  reload(languages, namespaces, callback) {\n    this.prepareLoading(languages, namespaces, {\n      reload: true\n    }, callback);\n  }\n  loadOne(name, prefix = '') {\n    const s = name.split('|');\n    const lng = s[0];\n    const ns = s[1];\n    this.read(lng, ns, 'read', undefined, undefined, (err, data) => {\n      if (err) this.logger.warn(`${prefix}loading namespace ${ns} for language ${lng} failed`, err);\n      if (!err && data) this.logger.log(`${prefix}loaded namespace ${ns} for language ${lng}`, data);\n      this.loaded(name, err, data);\n    });\n  }\n  saveMissing(languages, namespace, key, fallbackValue, isUpdate, options = {}, clb = () => {}) {\n    if (this.services?.utils?.hasLoadedNamespace && !this.services?.utils?.hasLoadedNamespace(namespace)) {\n      this.logger.warn(`did not save key \"${key}\" as the namespace \"${namespace}\" was not yet loaded`, 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n      return;\n    }\n    if (key === undefined || key === null || key === '') return;\n    if (this.backend?.create) {\n      const opts = {\n        ...options,\n        isUpdate\n      };\n      const fc = this.backend.create.bind(this.backend);\n      if (fc.length < 6) {\n        try {\n          let r;\n          if (fc.length === 5) {\n            r = fc(languages, namespace, key, fallbackValue, opts);\n          } else {\n            r = fc(languages, namespace, key, fallbackValue);\n          }\n          if (r && typeof r.then === 'function') {\n            r.then(data => clb(null, data)).catch(clb);\n          } else {\n            clb(null, r);\n          }\n        } catch (err) {\n          clb(err);\n        }\n      } else {\n        fc(languages, namespace, key, fallbackValue, clb, opts);\n      }\n    }\n    if (!languages || !languages[0]) return;\n    this.store.addResource(languages[0], namespace, key, fallbackValue);\n  }\n}\nconst get = () => ({\n  debug: false,\n  initAsync: true,\n  ns: ['translation'],\n  defaultNS: ['translation'],\n  fallbackLng: ['dev'],\n  fallbackNS: false,\n  supportedLngs: false,\n  nonExplicitSupportedLngs: false,\n  load: 'all',\n  preload: false,\n  simplifyPluralSuffix: true,\n  keySeparator: '.',\n  nsSeparator: ':',\n  pluralSeparator: '_',\n  contextSeparator: '_',\n  partialBundledLanguages: false,\n  saveMissing: false,\n  updateMissing: false,\n  saveMissingTo: 'fallback',\n  saveMissingPlurals: true,\n  missingKeyHandler: false,\n  missingInterpolationHandler: false,\n  postProcess: false,\n  postProcessPassResolved: false,\n  returnNull: false,\n  returnEmptyString: true,\n  returnObjects: false,\n  joinArrays: false,\n  returnedObjectHandler: false,\n  parseMissingKeyHandler: false,\n  appendNamespaceToMissingKey: false,\n  appendNamespaceToCIMode: false,\n  overloadTranslationOptionHandler: args => {\n    let ret = {};\n    if (typeof args[1] === 'object') ret = args[1];\n    if (isString(args[1])) ret.defaultValue = args[1];\n    if (isString(args[2])) ret.tDescription = args[2];\n    if (typeof args[2] === 'object' || typeof args[3] === 'object') {\n      const options = args[3] || args[2];\n      Object.keys(options).forEach(key => {\n        ret[key] = options[key];\n      });\n    }\n    return ret;\n  },\n  interpolation: {\n    escapeValue: true,\n    format: value => value,\n    prefix: '{{',\n    suffix: '}}',\n    formatSeparator: ',',\n    unescapePrefix: '-',\n    nestingPrefix: '$t(',\n    nestingSuffix: ')',\n    nestingOptionsSeparator: ',',\n    maxReplaces: 1000,\n    skipOnVariables: true\n  },\n  cacheInBuiltFormats: true\n});\nconst transformOptions = options => {\n  if (isString(options.ns)) options.ns = [options.ns];\n  if (isString(options.fallbackLng)) options.fallbackLng = [options.fallbackLng];\n  if (isString(options.fallbackNS)) options.fallbackNS = [options.fallbackNS];\n  if (options.supportedLngs?.indexOf?.('cimode') < 0) {\n    options.supportedLngs = options.supportedLngs.concat(['cimode']);\n  }\n  if (typeof options.initImmediate === 'boolean') options.initAsync = options.initImmediate;\n  return options;\n};\nconst noop = () => {};\nconst bindMemberFunctions = inst => {\n  const mems = Object.getOwnPropertyNames(Object.getPrototypeOf(inst));\n  mems.forEach(mem => {\n    if (typeof inst[mem] === 'function') {\n      inst[mem] = inst[mem].bind(inst);\n    }\n  });\n};\nclass I18n extends EventEmitter {\n  constructor(options = {}, callback) {\n    super();\n    this.options = transformOptions(options);\n    this.services = {};\n    this.logger = baseLogger;\n    this.modules = {\n      external: []\n    };\n    bindMemberFunctions(this);\n    if (callback && !this.isInitialized && !options.isClone) {\n      if (!this.options.initAsync) {\n        this.init(options, callback);\n        return this;\n      }\n      setTimeout(() => {\n        this.init(options, callback);\n      }, 0);\n    }\n  }\n  init(options = {}, callback) {\n    this.isInitializing = true;\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    if (options.defaultNS == null && options.ns) {\n      if (isString(options.ns)) {\n        options.defaultNS = options.ns;\n      } else if (options.ns.indexOf('translation') < 0) {\n        options.defaultNS = options.ns[0];\n      }\n    }\n    const defOpts = get();\n    this.options = {\n      ...defOpts,\n      ...this.options,\n      ...transformOptions(options)\n    };\n    this.options.interpolation = {\n      ...defOpts.interpolation,\n      ...this.options.interpolation\n    };\n    if (options.keySeparator !== undefined) {\n      this.options.userDefinedKeySeparator = options.keySeparator;\n    }\n    if (options.nsSeparator !== undefined) {\n      this.options.userDefinedNsSeparator = options.nsSeparator;\n    }\n    const createClassOnDemand = ClassOrObject => {\n      if (!ClassOrObject) return null;\n      if (typeof ClassOrObject === 'function') return new ClassOrObject();\n      return ClassOrObject;\n    };\n    if (!this.options.isClone) {\n      if (this.modules.logger) {\n        baseLogger.init(createClassOnDemand(this.modules.logger), this.options);\n      } else {\n        baseLogger.init(null, this.options);\n      }\n      let formatter;\n      if (this.modules.formatter) {\n        formatter = this.modules.formatter;\n      } else {\n        formatter = Formatter;\n      }\n      const lu = new LanguageUtil(this.options);\n      this.store = new ResourceStore(this.options.resources, this.options);\n      const s = this.services;\n      s.logger = baseLogger;\n      s.resourceStore = this.store;\n      s.languageUtils = lu;\n      s.pluralResolver = new PluralResolver(lu, {\n        prepend: this.options.pluralSeparator,\n        simplifyPluralSuffix: this.options.simplifyPluralSuffix\n      });\n      const usingLegacyFormatFunction = this.options.interpolation.format && this.options.interpolation.format !== defOpts.interpolation.format;\n      if (usingLegacyFormatFunction) {\n        this.logger.deprecate(`init: you are still using the legacy format function, please use the new approach: https://www.i18next.com/translation-function/formatting`);\n      }\n      if (formatter && (!this.options.interpolation.format || this.options.interpolation.format === defOpts.interpolation.format)) {\n        s.formatter = createClassOnDemand(formatter);\n        if (s.formatter.init) s.formatter.init(s, this.options);\n        this.options.interpolation.format = s.formatter.format.bind(s.formatter);\n      }\n      s.interpolator = new Interpolator(this.options);\n      s.utils = {\n        hasLoadedNamespace: this.hasLoadedNamespace.bind(this)\n      };\n      s.backendConnector = new Connector(createClassOnDemand(this.modules.backend), s.resourceStore, s, this.options);\n      s.backendConnector.on('*', (event, ...args) => {\n        this.emit(event, ...args);\n      });\n      if (this.modules.languageDetector) {\n        s.languageDetector = createClassOnDemand(this.modules.languageDetector);\n        if (s.languageDetector.init) s.languageDetector.init(s, this.options.detection, this.options);\n      }\n      if (this.modules.i18nFormat) {\n        s.i18nFormat = createClassOnDemand(this.modules.i18nFormat);\n        if (s.i18nFormat.init) s.i18nFormat.init(this);\n      }\n      this.translator = new Translator(this.services, this.options);\n      this.translator.on('*', (event, ...args) => {\n        this.emit(event, ...args);\n      });\n      this.modules.external.forEach(m => {\n        if (m.init) m.init(this);\n      });\n    }\n    this.format = this.options.interpolation.format;\n    if (!callback) callback = noop;\n    if (this.options.fallbackLng && !this.services.languageDetector && !this.options.lng) {\n      const codes = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n      if (codes.length > 0 && codes[0] !== 'dev') this.options.lng = codes[0];\n    }\n    if (!this.services.languageDetector && !this.options.lng) {\n      this.logger.warn('init: no languageDetector is used and no lng is defined');\n    }\n    const storeApi = ['getResource', 'hasResourceBundle', 'getResourceBundle', 'getDataByLanguage'];\n    storeApi.forEach(fcName => {\n      this[fcName] = (...args) => this.store[fcName](...args);\n    });\n    const storeApiChained = ['addResource', 'addResources', 'addResourceBundle', 'removeResourceBundle'];\n    storeApiChained.forEach(fcName => {\n      this[fcName] = (...args) => {\n        this.store[fcName](...args);\n        return this;\n      };\n    });\n    const deferred = defer();\n    const load = () => {\n      const finish = (err, t) => {\n        this.isInitializing = false;\n        if (this.isInitialized && !this.initializedStoreOnce) this.logger.warn('init: i18next is already initialized. You should call init just once!');\n        this.isInitialized = true;\n        if (!this.options.isClone) this.logger.log('initialized', this.options);\n        this.emit('initialized', this.options);\n        deferred.resolve(t);\n        callback(err, t);\n      };\n      if (this.languages && !this.isInitialized) return finish(null, this.t.bind(this));\n      this.changeLanguage(this.options.lng, finish);\n    };\n    if (this.options.resources || !this.options.initAsync) {\n      load();\n    } else {\n      setTimeout(load, 0);\n    }\n    return deferred;\n  }\n  loadResources(language, callback = noop) {\n    let usedCallback = callback;\n    const usedLng = isString(language) ? language : this.language;\n    if (typeof language === 'function') usedCallback = language;\n    if (!this.options.resources || this.options.partialBundledLanguages) {\n      if (usedLng?.toLowerCase() === 'cimode' && (!this.options.preload || this.options.preload.length === 0)) return usedCallback();\n      const toLoad = [];\n      const append = lng => {\n        if (!lng) return;\n        if (lng === 'cimode') return;\n        const lngs = this.services.languageUtils.toResolveHierarchy(lng);\n        lngs.forEach(l => {\n          if (l === 'cimode') return;\n          if (toLoad.indexOf(l) < 0) toLoad.push(l);\n        });\n      };\n      if (!usedLng) {\n        const fallbacks = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n        fallbacks.forEach(l => append(l));\n      } else {\n        append(usedLng);\n      }\n      this.options.preload?.forEach?.(l => append(l));\n      this.services.backendConnector.load(toLoad, this.options.ns, e => {\n        if (!e && !this.resolvedLanguage && this.language) this.setResolvedLanguage(this.language);\n        usedCallback(e);\n      });\n    } else {\n      usedCallback(null);\n    }\n  }\n  reloadResources(lngs, ns, callback) {\n    const deferred = defer();\n    if (typeof lngs === 'function') {\n      callback = lngs;\n      lngs = undefined;\n    }\n    if (typeof ns === 'function') {\n      callback = ns;\n      ns = undefined;\n    }\n    if (!lngs) lngs = this.languages;\n    if (!ns) ns = this.options.ns;\n    if (!callback) callback = noop;\n    this.services.backendConnector.reload(lngs, ns, err => {\n      deferred.resolve();\n      callback(err);\n    });\n    return deferred;\n  }\n  use(module) {\n    if (!module) throw new Error('You are passing an undefined module! Please check the object you are passing to i18next.use()');\n    if (!module.type) throw new Error('You are passing a wrong module! Please check the object you are passing to i18next.use()');\n    if (module.type === 'backend') {\n      this.modules.backend = module;\n    }\n    if (module.type === 'logger' || module.log && module.warn && module.error) {\n      this.modules.logger = module;\n    }\n    if (module.type === 'languageDetector') {\n      this.modules.languageDetector = module;\n    }\n    if (module.type === 'i18nFormat') {\n      this.modules.i18nFormat = module;\n    }\n    if (module.type === 'postProcessor') {\n      postProcessor.addPostProcessor(module);\n    }\n    if (module.type === 'formatter') {\n      this.modules.formatter = module;\n    }\n    if (module.type === '3rdParty') {\n      this.modules.external.push(module);\n    }\n    return this;\n  }\n  setResolvedLanguage(l) {\n    if (!l || !this.languages) return;\n    if (['cimode', 'dev'].indexOf(l) > -1) return;\n    for (let li = 0; li < this.languages.length; li++) {\n      const lngInLngs = this.languages[li];\n      if (['cimode', 'dev'].indexOf(lngInLngs) > -1) continue;\n      if (this.store.hasLanguageSomeTranslations(lngInLngs)) {\n        this.resolvedLanguage = lngInLngs;\n        break;\n      }\n    }\n    if (!this.resolvedLanguage && this.languages.indexOf(l) < 0 && this.store.hasLanguageSomeTranslations(l)) {\n      this.resolvedLanguage = l;\n      this.languages.unshift(l);\n    }\n  }\n  changeLanguage(lng, callback) {\n    this.isLanguageChangingTo = lng;\n    const deferred = defer();\n    this.emit('languageChanging', lng);\n    const setLngProps = l => {\n      this.language = l;\n      this.languages = this.services.languageUtils.toResolveHierarchy(l);\n      this.resolvedLanguage = undefined;\n      this.setResolvedLanguage(l);\n    };\n    const done = (err, l) => {\n      if (l) {\n        if (this.isLanguageChangingTo === lng) {\n          setLngProps(l);\n          this.translator.changeLanguage(l);\n          this.isLanguageChangingTo = undefined;\n          this.emit('languageChanged', l);\n          this.logger.log('languageChanged', l);\n        }\n      } else {\n        this.isLanguageChangingTo = undefined;\n      }\n      deferred.resolve((...args) => this.t(...args));\n      if (callback) callback(err, (...args) => this.t(...args));\n    };\n    const setLng = lngs => {\n      if (!lng && !lngs && this.services.languageDetector) lngs = [];\n      const fl = isString(lngs) ? lngs : lngs && lngs[0];\n      const l = this.store.hasLanguageSomeTranslations(fl) ? fl : this.services.languageUtils.getBestMatchFromCodes(isString(lngs) ? [lngs] : lngs);\n      if (l) {\n        if (!this.language) {\n          setLngProps(l);\n        }\n        if (!this.translator.language) this.translator.changeLanguage(l);\n        this.services.languageDetector?.cacheUserLanguage?.(l);\n      }\n      this.loadResources(l, err => {\n        done(err, l);\n      });\n    };\n    if (!lng && this.services.languageDetector && !this.services.languageDetector.async) {\n      setLng(this.services.languageDetector.detect());\n    } else if (!lng && this.services.languageDetector && this.services.languageDetector.async) {\n      if (this.services.languageDetector.detect.length === 0) {\n        this.services.languageDetector.detect().then(setLng);\n      } else {\n        this.services.languageDetector.detect(setLng);\n      }\n    } else {\n      setLng(lng);\n    }\n    return deferred;\n  }\n  getFixedT(lng, ns, keyPrefix) {\n    const fixedT = (key, opts, ...rest) => {\n      let o;\n      if (typeof opts !== 'object') {\n        o = this.options.overloadTranslationOptionHandler([key, opts].concat(rest));\n      } else {\n        o = {\n          ...opts\n        };\n      }\n      o.lng = o.lng || fixedT.lng;\n      o.lngs = o.lngs || fixedT.lngs;\n      o.ns = o.ns || fixedT.ns;\n      if (o.keyPrefix !== '') o.keyPrefix = o.keyPrefix || keyPrefix || fixedT.keyPrefix;\n      const keySeparator = this.options.keySeparator || '.';\n      let resultKey;\n      if (o.keyPrefix && Array.isArray(key)) {\n        resultKey = key.map(k => {\n          if (typeof k === 'function') k = keysFromSelector(k, {\n            ...this.options,\n            ...opts\n          });\n          return `${o.keyPrefix}${keySeparator}${k}`;\n        });\n      } else {\n        if (typeof key === 'function') key = keysFromSelector(key, {\n          ...this.options,\n          ...opts\n        });\n        resultKey = o.keyPrefix ? `${o.keyPrefix}${keySeparator}${key}` : key;\n      }\n      return this.t(resultKey, o);\n    };\n    if (isString(lng)) {\n      fixedT.lng = lng;\n    } else {\n      fixedT.lngs = lng;\n    }\n    fixedT.ns = ns;\n    fixedT.keyPrefix = keyPrefix;\n    return fixedT;\n  }\n  t(...args) {\n    return this.translator?.translate(...args);\n  }\n  exists(...args) {\n    return this.translator?.exists(...args);\n  }\n  setDefaultNamespace(ns) {\n    this.options.defaultNS = ns;\n  }\n  hasLoadedNamespace(ns, options = {}) {\n    if (!this.isInitialized) {\n      this.logger.warn('hasLoadedNamespace: i18next was not initialized', this.languages);\n      return false;\n    }\n    if (!this.languages || !this.languages.length) {\n      this.logger.warn('hasLoadedNamespace: i18n.languages were undefined or empty', this.languages);\n      return false;\n    }\n    const lng = options.lng || this.resolvedLanguage || this.languages[0];\n    const fallbackLng = this.options ? this.options.fallbackLng : false;\n    const lastLng = this.languages[this.languages.length - 1];\n    if (lng.toLowerCase() === 'cimode') return true;\n    const loadNotPending = (l, n) => {\n      const loadState = this.services.backendConnector.state[`${l}|${n}`];\n      return loadState === -1 || loadState === 0 || loadState === 2;\n    };\n    if (options.precheck) {\n      const preResult = options.precheck(this, loadNotPending);\n      if (preResult !== undefined) return preResult;\n    }\n    if (this.hasResourceBundle(lng, ns)) return true;\n    if (!this.services.backendConnector.backend || this.options.resources && !this.options.partialBundledLanguages) return true;\n    if (loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns))) return true;\n    return false;\n  }\n  loadNamespaces(ns, callback) {\n    const deferred = defer();\n    if (!this.options.ns) {\n      if (callback) callback();\n      return Promise.resolve();\n    }\n    if (isString(ns)) ns = [ns];\n    ns.forEach(n => {\n      if (this.options.ns.indexOf(n) < 0) this.options.ns.push(n);\n    });\n    this.loadResources(err => {\n      deferred.resolve();\n      if (callback) callback(err);\n    });\n    return deferred;\n  }\n  loadLanguages(lngs, callback) {\n    const deferred = defer();\n    if (isString(lngs)) lngs = [lngs];\n    const preloaded = this.options.preload || [];\n    const newLngs = lngs.filter(lng => preloaded.indexOf(lng) < 0 && this.services.languageUtils.isSupportedCode(lng));\n    if (!newLngs.length) {\n      if (callback) callback();\n      return Promise.resolve();\n    }\n    this.options.preload = preloaded.concat(newLngs);\n    this.loadResources(err => {\n      deferred.resolve();\n      if (callback) callback(err);\n    });\n    return deferred;\n  }\n  dir(lng) {\n    if (!lng) lng = this.resolvedLanguage || (this.languages?.length > 0 ? this.languages[0] : this.language);\n    if (!lng) return 'rtl';\n    try {\n      const l = new Intl.Locale(lng);\n      if (l && l.getTextInfo) {\n        const ti = l.getTextInfo();\n        if (ti && ti.direction) return ti.direction;\n      }\n    } catch (e) {}\n    const rtlLngs = ['ar', 'shu', 'sqr', 'ssh', 'xaa', 'yhd', 'yud', 'aao', 'abh', 'abv', 'acm', 'acq', 'acw', 'acx', 'acy', 'adf', 'ads', 'aeb', 'aec', 'afb', 'ajp', 'apc', 'apd', 'arb', 'arq', 'ars', 'ary', 'arz', 'auz', 'avl', 'ayh', 'ayl', 'ayn', 'ayp', 'bbz', 'pga', 'he', 'iw', 'ps', 'pbt', 'pbu', 'pst', 'prp', 'prd', 'ug', 'ur', 'ydd', 'yds', 'yih', 'ji', 'yi', 'hbo', 'men', 'xmn', 'fa', 'jpr', 'peo', 'pes', 'prs', 'dv', 'sam', 'ckb'];\n    const languageUtils = this.services?.languageUtils || new LanguageUtil(get());\n    if (lng.toLowerCase().indexOf('-latn') > 1) return 'ltr';\n    return rtlLngs.indexOf(languageUtils.getLanguagePartFromCode(lng)) > -1 || lng.toLowerCase().indexOf('-arab') > 1 ? 'rtl' : 'ltr';\n  }\n  static createInstance(options = {}, callback) {\n    return new I18n(options, callback);\n  }\n  cloneInstance(options = {}, callback = noop) {\n    const forkResourceStore = options.forkResourceStore;\n    if (forkResourceStore) delete options.forkResourceStore;\n    const mergedOptions = {\n      ...this.options,\n      ...options,\n      ...{\n        isClone: true\n      }\n    };\n    const clone = new I18n(mergedOptions);\n    if (options.debug !== undefined || options.prefix !== undefined) {\n      clone.logger = clone.logger.clone(options);\n    }\n    const membersToCopy = ['store', 'services', 'language'];\n    membersToCopy.forEach(m => {\n      clone[m] = this[m];\n    });\n    clone.services = {\n      ...this.services\n    };\n    clone.services.utils = {\n      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n    };\n    if (forkResourceStore) {\n      const clonedData = Object.keys(this.store.data).reduce((prev, l) => {\n        prev[l] = {\n          ...this.store.data[l]\n        };\n        prev[l] = Object.keys(prev[l]).reduce((acc, n) => {\n          acc[n] = {\n            ...prev[l][n]\n          };\n          return acc;\n        }, prev[l]);\n        return prev;\n      }, {});\n      clone.store = new ResourceStore(clonedData, mergedOptions);\n      clone.services.resourceStore = clone.store;\n    }\n    clone.translator = new Translator(clone.services, mergedOptions);\n    clone.translator.on('*', (event, ...args) => {\n      clone.emit(event, ...args);\n    });\n    clone.init(mergedOptions, callback);\n    clone.translator.options = mergedOptions;\n    clone.translator.backendConnector.services.utils = {\n      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n    };\n    return clone;\n  }\n  toJSON() {\n    return {\n      options: this.options,\n      store: this.store,\n      language: this.language,\n      languages: this.languages,\n      resolvedLanguage: this.resolvedLanguage\n    };\n  }\n}\nconst instance = I18n.createInstance();\ninstance.createInstance = I18n.createInstance;\nconst createInstance = instance.createInstance;\nconst dir = instance.dir;\nconst init = instance.init;\nconst loadResources = instance.loadResources;\nconst reloadResources = instance.reloadResources;\nconst use = instance.use;\nconst changeLanguage = instance.changeLanguage;\nconst getFixedT = instance.getFixedT;\nconst t = instance.t;\nconst exists = instance.exists;\nconst setDefaultNamespace = instance.setDefaultNamespace;\nconst hasLoadedNamespace = instance.hasLoadedNamespace;\nconst loadNamespaces = instance.loadNamespaces;\nconst loadLanguages = instance.loadLanguages;\nexport { changeLanguage, createInstance, instance as default, dir, exists, getFixedT, hasLoadedNamespace, init, keysFromSelector as keyFromSelector, loadLanguages, loadNamespaces, loadResources, reloadResources, setDefaultNamespace, t, use };","map":{"version":3,"names":["isString","obj","defer","res","rej","promise","Promise","resolve","reject","makeString","object","copy","a","s","t","forEach","m","lastOfPathSeparatorRegExp","cleanKey","key","indexOf","replace","canNotTraverseDeeper","getLastOfPath","path","Empty","stack","split","stackIndex","length","Object","prototype","hasOwnProperty","call","k","setPath","newValue","undefined","e","p","slice","last","pushPath","concat","push","getPath","getPathWithDefaults","data","defaultData","value","deepExtend","target","source","overwrite","prop","String","regexEscape","str","_entityMap","escape","RegExpCache","constructor","capacity","regExpMap","Map","regExpQueue","getRegExp","pattern","regExpFromCache","get","regExpNew","RegExp","delete","shift","set","chars","looksLikeObjectPathRegExpCache","looksLikeObjectPath","nsSeparator","keySeparator","possibleChars","filter","c","r","map","join","matched","test","ki","substring","deepFind","tokens","current","i","next","nextPath","j","getCleanedCode","code","consoleLogger","type","log","args","output","warn","error","console","apply","Logger","concreteLogger","options","init","prefix","logger","debug","forward","deprecate","lvl","debugOnly","create","moduleName","clone","baseLogger","EventEmitter","observers","on","events","listener","event","numListeners","off","emit","cloned","Array","from","entries","observer","numTimesAdded","ResourceStore","ns","defaultNS","ignoreJSONStructure","addNamespaces","removeNamespaces","index","splice","getResource","lng","isArray","result","addResource","silent","addResources","resources","addResourceBundle","deep","skipCopy","pack","JSON","parse","stringify","removeResourceBundle","hasResourceBundle","getResourceBundle","getDataByLanguage","hasLanguageSomeTranslations","n","keys","find","v","toJSON","postProcessor","processors","addPostProcessor","module","name","handle","translator","processor","process","PATH_KEY","Symbol","createProxy","state","handler","proxy","revoke","Proxy","revocable","keysFromSelector","selector","opts","checkedLoadedFor","shouldHandleAsObject","Translator","services","changeLanguage","language","exists","o","interpolation","opt","resolved","isObject","returnObjects","extractFromKey","namespaces","wouldCheckForNsInKey","seemsNaturalLanguage","userDefinedKeySeparator","userDefinedNsSeparator","match","interpolator","nestingRegexp","parts","translate","lastKey","overloadTranslationOptionHandler","arguments","returnDetails","namespace","appendNamespaceToCIMode","toLowerCase","usedKey","exactUsedKey","usedLng","usedNS","usedParams","getUsedParamsDetails","resUsedKey","resExactUsedKey","noObject","joinArrays","handleAsObjectInI18nFormat","i18nFormat","handleAsObject","needsPluralHandling","count","hasDefaultValue","defaultValueSuffix","pluralResolver","getSuffix","defaultValueSuffixOrdinalFallback","ordinal","needsZeroSuffixLookup","defaultValue","pluralSeparator","resForObjHndl","resType","toString","returnedObjectHandler","resTypeIsArray","newKeyToUse","deepKey","extendTranslation","usedDefault","isValidLookup","missingKeyNoValueFallbackToKey","resForMissing","updateMissing","fk","lngs","fallbackLngs","languageUtils","getFallbackCodes","fallbackLng","saveMissingTo","toResolveHierarchy","send","l","specificDefaultValue","defaultForMissing","missingKeyHandler","backendConnector","saveMissing","saveMissingPlurals","suffixes","getSuffixes","suffix","appendNamespaceToMissingKey","parseMissingKeyHandler","defaultVariables","skipInterpolation","skipOnVariables","nestBef","nb","interpolate","na","nestAft","nest","context","reset","postProcess","postProcessorNames","applyPostProcessor","postProcessPassResolved","i18nResolved","found","extracted","fallbackNS","needsContextHandling","codes","utils","hasLoadedNamespace","finalKeys","addLookupKeys","pluralSuffix","zeroSuffix","ordinalPrefix","contextKey","contextSeparator","possibleKey","pop","returnNull","returnEmptyString","resourceStore","optionsKeys","useOptionsReplaceForData","option","LanguageUtil","supportedLngs","getScriptPartFromCode","formatLanguageCode","getLanguagePartFromCode","formattedCode","Intl","getCanonicalLocales","lowerCaseLng","cleanCode","isSupportedCode","load","nonExplicitSupportedLngs","getBestMatchFromCodes","cleanedLng","lngScOnly","lngOnly","supportedLng","fallbacks","default","fallbackCode","fallbackCodes","addCode","fc","suffixesOrder","zero","one","two","few","many","other","dummyRule","select","resolvedOptions","pluralCategories","PluralResolver","pluralRulesCache","addRule","rules","clearCache","getRule","cleanedCode","cacheKey","rule","PluralRules","err","lngPart","needsPlural","getPluralFormsOfKey","sort","pluralCategory1","pluralCategory2","pluralCategory","prepend","deepFindWithDefaults","regexSafe","val","Interpolator","format","escapeValue","escape$1","useRawValueToEscape","prefixEscaped","suffixEscaped","formatSeparator","unescapeSuffix","unescapePrefix","nestingPrefix","nestingPrefixEscaped","nestingSuffix","nestingSuffixEscaped","nestingOptionsSeparator","maxReplaces","alwaysFormat","resetRegExp","getOrResetRegExp","existingRegExp","lastIndex","regexp","regexpUnescape","replaces","handleFormat","interpolationkey","trim","f","missingInterpolationHandler","todos","regex","safeValue","todo","exec","matchedVar","temp","clonedOptions","handleHasOptions","inheritedOptions","sep","optionsString","matchedSingleQuotes","matchedDoubleQuotes","formatters","keyEndIndex","lastIndexOf","elem","Boolean","reduce","parseFormatStr","formatStr","formatName","formatOptions","optStr","currency","range","rest","trimmedKey","isNaN","parseInt","createCachedFormatter","fn","cache","optForCache","formatParams","frm","createNonCachedFormatter","Formatter","cf","cacheInBuiltFormats","formats","number","formatter","NumberFormat","style","datetime","DateTimeFormat","relativetime","RelativeTimeFormat","list","ListFormat","add","addCached","findIndex","mem","formatted","valOptions","locale","removePending","q","pending","pendingCount","Connector","backend","store","waitingReads","maxParallelReads","readingCalls","maxRetries","retryTimeout","queue","queueLoad","languages","callback","toLoad","toLoadLanguages","toLoadNamespaces","hasAllNamespaces","reload","loaded","errors","done","loadedKeys","read","fcName","tried","wait","resolver","setTimeout","bind","then","catch","prepareLoading","loadOne","fallbackValue","isUpdate","clb","initAsync","preload","simplifyPluralSuffix","partialBundledLanguages","ret","tDescription","transformOptions","initImmediate","noop","bindMemberFunctions","inst","mems","getOwnPropertyNames","getPrototypeOf","I18n","modules","external","isInitialized","isClone","isInitializing","defOpts","createClassOnDemand","ClassOrObject","lu","usingLegacyFormatFunction","languageDetector","detection","storeApi","storeApiChained","deferred","finish","initializedStoreOnce","loadResources","usedCallback","append","resolvedLanguage","setResolvedLanguage","reloadResources","use","Error","li","lngInLngs","unshift","isLanguageChangingTo","setLngProps","setLng","fl","cacheUserLanguage","async","detect","getFixedT","keyPrefix","fixedT","resultKey","setDefaultNamespace","lastLng","loadNotPending","loadState","precheck","preResult","loadNamespaces","loadLanguages","preloaded","newLngs","dir","Locale","getTextInfo","ti","direction","rtlLngs","createInstance","cloneInstance","forkResourceStore","mergedOptions","membersToCopy","clonedData","prev","acc","instance","keyFromSelector"],"sources":["C:/Users/komun/booking-app/frontend/node_modules/i18next/dist/esm/i18next.js"],"sourcesContent":["const isString = obj => typeof obj === 'string';\nconst defer = () => {\n  let res;\n  let rej;\n  const promise = new Promise((resolve, reject) => {\n    res = resolve;\n    rej = reject;\n  });\n  promise.resolve = res;\n  promise.reject = rej;\n  return promise;\n};\nconst makeString = object => {\n  if (object == null) return '';\n  return '' + object;\n};\nconst copy = (a, s, t) => {\n  a.forEach(m => {\n    if (s[m]) t[m] = s[m];\n  });\n};\nconst lastOfPathSeparatorRegExp = /###/g;\nconst cleanKey = key => key && key.indexOf('###') > -1 ? key.replace(lastOfPathSeparatorRegExp, '.') : key;\nconst canNotTraverseDeeper = object => !object || isString(object);\nconst getLastOfPath = (object, path, Empty) => {\n  const stack = !isString(path) ? path : path.split('.');\n  let stackIndex = 0;\n  while (stackIndex < stack.length - 1) {\n    if (canNotTraverseDeeper(object)) return {};\n    const key = cleanKey(stack[stackIndex]);\n    if (!object[key] && Empty) object[key] = new Empty();\n    if (Object.prototype.hasOwnProperty.call(object, key)) {\n      object = object[key];\n    } else {\n      object = {};\n    }\n    ++stackIndex;\n  }\n  if (canNotTraverseDeeper(object)) return {};\n  return {\n    obj: object,\n    k: cleanKey(stack[stackIndex])\n  };\n};\nconst setPath = (object, path, newValue) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path, Object);\n  if (obj !== undefined || path.length === 1) {\n    obj[k] = newValue;\n    return;\n  }\n  let e = path[path.length - 1];\n  let p = path.slice(0, path.length - 1);\n  let last = getLastOfPath(object, p, Object);\n  while (last.obj === undefined && p.length) {\n    e = `${p[p.length - 1]}.${e}`;\n    p = p.slice(0, p.length - 1);\n    last = getLastOfPath(object, p, Object);\n    if (last?.obj && typeof last.obj[`${last.k}.${e}`] !== 'undefined') {\n      last.obj = undefined;\n    }\n  }\n  last.obj[`${last.k}.${e}`] = newValue;\n};\nconst pushPath = (object, path, newValue, concat) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path, Object);\n  obj[k] = obj[k] || [];\n  obj[k].push(newValue);\n};\nconst getPath = (object, path) => {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path);\n  if (!obj) return undefined;\n  if (!Object.prototype.hasOwnProperty.call(obj, k)) return undefined;\n  return obj[k];\n};\nconst getPathWithDefaults = (data, defaultData, key) => {\n  const value = getPath(data, key);\n  if (value !== undefined) {\n    return value;\n  }\n  return getPath(defaultData, key);\n};\nconst deepExtend = (target, source, overwrite) => {\n  for (const prop in source) {\n    if (prop !== '__proto__' && prop !== 'constructor') {\n      if (prop in target) {\n        if (isString(target[prop]) || target[prop] instanceof String || isString(source[prop]) || source[prop] instanceof String) {\n          if (overwrite) target[prop] = source[prop];\n        } else {\n          deepExtend(target[prop], source[prop], overwrite);\n        }\n      } else {\n        target[prop] = source[prop];\n      }\n    }\n  }\n  return target;\n};\nconst regexEscape = str => str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\nvar _entityMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '/': '&#x2F;'\n};\nconst escape = data => {\n  if (isString(data)) {\n    return data.replace(/[&<>\"'\\/]/g, s => _entityMap[s]);\n  }\n  return data;\n};\nclass RegExpCache {\n  constructor(capacity) {\n    this.capacity = capacity;\n    this.regExpMap = new Map();\n    this.regExpQueue = [];\n  }\n  getRegExp(pattern) {\n    const regExpFromCache = this.regExpMap.get(pattern);\n    if (regExpFromCache !== undefined) {\n      return regExpFromCache;\n    }\n    const regExpNew = new RegExp(pattern);\n    if (this.regExpQueue.length === this.capacity) {\n      this.regExpMap.delete(this.regExpQueue.shift());\n    }\n    this.regExpMap.set(pattern, regExpNew);\n    this.regExpQueue.push(pattern);\n    return regExpNew;\n  }\n}\nconst chars = [' ', ',', '?', '!', ';'];\nconst looksLikeObjectPathRegExpCache = new RegExpCache(20);\nconst looksLikeObjectPath = (key, nsSeparator, keySeparator) => {\n  nsSeparator = nsSeparator || '';\n  keySeparator = keySeparator || '';\n  const possibleChars = chars.filter(c => nsSeparator.indexOf(c) < 0 && keySeparator.indexOf(c) < 0);\n  if (possibleChars.length === 0) return true;\n  const r = looksLikeObjectPathRegExpCache.getRegExp(`(${possibleChars.map(c => c === '?' ? '\\\\?' : c).join('|')})`);\n  let matched = !r.test(key);\n  if (!matched) {\n    const ki = key.indexOf(keySeparator);\n    if (ki > 0 && !r.test(key.substring(0, ki))) {\n      matched = true;\n    }\n  }\n  return matched;\n};\nconst deepFind = (obj, path, keySeparator = '.') => {\n  if (!obj) return undefined;\n  if (obj[path]) {\n    if (!Object.prototype.hasOwnProperty.call(obj, path)) return undefined;\n    return obj[path];\n  }\n  const tokens = path.split(keySeparator);\n  let current = obj;\n  for (let i = 0; i < tokens.length;) {\n    if (!current || typeof current !== 'object') {\n      return undefined;\n    }\n    let next;\n    let nextPath = '';\n    for (let j = i; j < tokens.length; ++j) {\n      if (j !== i) {\n        nextPath += keySeparator;\n      }\n      nextPath += tokens[j];\n      next = current[nextPath];\n      if (next !== undefined) {\n        if (['string', 'number', 'boolean'].indexOf(typeof next) > -1 && j < tokens.length - 1) {\n          continue;\n        }\n        i += j - i + 1;\n        break;\n      }\n    }\n    current = next;\n  }\n  return current;\n};\nconst getCleanedCode = code => code?.replace('_', '-');\n\nconst consoleLogger = {\n  type: 'logger',\n  log(args) {\n    this.output('log', args);\n  },\n  warn(args) {\n    this.output('warn', args);\n  },\n  error(args) {\n    this.output('error', args);\n  },\n  output(type, args) {\n    console?.[type]?.apply?.(console, args);\n  }\n};\nclass Logger {\n  constructor(concreteLogger, options = {}) {\n    this.init(concreteLogger, options);\n  }\n  init(concreteLogger, options = {}) {\n    this.prefix = options.prefix || 'i18next:';\n    this.logger = concreteLogger || consoleLogger;\n    this.options = options;\n    this.debug = options.debug;\n  }\n  log(...args) {\n    return this.forward(args, 'log', '', true);\n  }\n  warn(...args) {\n    return this.forward(args, 'warn', '', true);\n  }\n  error(...args) {\n    return this.forward(args, 'error', '');\n  }\n  deprecate(...args) {\n    return this.forward(args, 'warn', 'WARNING DEPRECATED: ', true);\n  }\n  forward(args, lvl, prefix, debugOnly) {\n    if (debugOnly && !this.debug) return null;\n    if (isString(args[0])) args[0] = `${prefix}${this.prefix} ${args[0]}`;\n    return this.logger[lvl](args);\n  }\n  create(moduleName) {\n    return new Logger(this.logger, {\n      ...{\n        prefix: `${this.prefix}:${moduleName}:`\n      },\n      ...this.options\n    });\n  }\n  clone(options) {\n    options = options || this.options;\n    options.prefix = options.prefix || this.prefix;\n    return new Logger(this.logger, options);\n  }\n}\nvar baseLogger = new Logger();\n\nclass EventEmitter {\n  constructor() {\n    this.observers = {};\n  }\n  on(events, listener) {\n    events.split(' ').forEach(event => {\n      if (!this.observers[event]) this.observers[event] = new Map();\n      const numListeners = this.observers[event].get(listener) || 0;\n      this.observers[event].set(listener, numListeners + 1);\n    });\n    return this;\n  }\n  off(event, listener) {\n    if (!this.observers[event]) return;\n    if (!listener) {\n      delete this.observers[event];\n      return;\n    }\n    this.observers[event].delete(listener);\n  }\n  emit(event, ...args) {\n    if (this.observers[event]) {\n      const cloned = Array.from(this.observers[event].entries());\n      cloned.forEach(([observer, numTimesAdded]) => {\n        for (let i = 0; i < numTimesAdded; i++) {\n          observer(...args);\n        }\n      });\n    }\n    if (this.observers['*']) {\n      const cloned = Array.from(this.observers['*'].entries());\n      cloned.forEach(([observer, numTimesAdded]) => {\n        for (let i = 0; i < numTimesAdded; i++) {\n          observer.apply(observer, [event, ...args]);\n        }\n      });\n    }\n  }\n}\n\nclass ResourceStore extends EventEmitter {\n  constructor(data, options = {\n    ns: ['translation'],\n    defaultNS: 'translation'\n  }) {\n    super();\n    this.data = data || {};\n    this.options = options;\n    if (this.options.keySeparator === undefined) {\n      this.options.keySeparator = '.';\n    }\n    if (this.options.ignoreJSONStructure === undefined) {\n      this.options.ignoreJSONStructure = true;\n    }\n  }\n  addNamespaces(ns) {\n    if (this.options.ns.indexOf(ns) < 0) {\n      this.options.ns.push(ns);\n    }\n  }\n  removeNamespaces(ns) {\n    const index = this.options.ns.indexOf(ns);\n    if (index > -1) {\n      this.options.ns.splice(index, 1);\n    }\n  }\n  getResource(lng, ns, key, options = {}) {\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    const ignoreJSONStructure = options.ignoreJSONStructure !== undefined ? options.ignoreJSONStructure : this.options.ignoreJSONStructure;\n    let path;\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n    } else {\n      path = [lng, ns];\n      if (key) {\n        if (Array.isArray(key)) {\n          path.push(...key);\n        } else if (isString(key) && keySeparator) {\n          path.push(...key.split(keySeparator));\n        } else {\n          path.push(key);\n        }\n      }\n    }\n    const result = getPath(this.data, path);\n    if (!result && !ns && !key && lng.indexOf('.') > -1) {\n      lng = path[0];\n      ns = path[1];\n      key = path.slice(2).join('.');\n    }\n    if (result || !ignoreJSONStructure || !isString(key)) return result;\n    return deepFind(this.data?.[lng]?.[ns], key, keySeparator);\n  }\n  addResource(lng, ns, key, value, options = {\n    silent: false\n  }) {\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    let path = [lng, ns];\n    if (key) path = path.concat(keySeparator ? key.split(keySeparator) : key);\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      value = ns;\n      ns = path[1];\n    }\n    this.addNamespaces(ns);\n    setPath(this.data, path, value);\n    if (!options.silent) this.emit('added', lng, ns, key, value);\n  }\n  addResources(lng, ns, resources, options = {\n    silent: false\n  }) {\n    for (const m in resources) {\n      if (isString(resources[m]) || Array.isArray(resources[m])) this.addResource(lng, ns, m, resources[m], {\n        silent: true\n      });\n    }\n    if (!options.silent) this.emit('added', lng, ns, resources);\n  }\n  addResourceBundle(lng, ns, resources, deep, overwrite, options = {\n    silent: false,\n    skipCopy: false\n  }) {\n    let path = [lng, ns];\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      deep = resources;\n      resources = ns;\n      ns = path[1];\n    }\n    this.addNamespaces(ns);\n    let pack = getPath(this.data, path) || {};\n    if (!options.skipCopy) resources = JSON.parse(JSON.stringify(resources));\n    if (deep) {\n      deepExtend(pack, resources, overwrite);\n    } else {\n      pack = {\n        ...pack,\n        ...resources\n      };\n    }\n    setPath(this.data, path, pack);\n    if (!options.silent) this.emit('added', lng, ns, resources);\n  }\n  removeResourceBundle(lng, ns) {\n    if (this.hasResourceBundle(lng, ns)) {\n      delete this.data[lng][ns];\n    }\n    this.removeNamespaces(ns);\n    this.emit('removed', lng, ns);\n  }\n  hasResourceBundle(lng, ns) {\n    return this.getResource(lng, ns) !== undefined;\n  }\n  getResourceBundle(lng, ns) {\n    if (!ns) ns = this.options.defaultNS;\n    return this.getResource(lng, ns);\n  }\n  getDataByLanguage(lng) {\n    return this.data[lng];\n  }\n  hasLanguageSomeTranslations(lng) {\n    const data = this.getDataByLanguage(lng);\n    const n = data && Object.keys(data) || [];\n    return !!n.find(v => data[v] && Object.keys(data[v]).length > 0);\n  }\n  toJSON() {\n    return this.data;\n  }\n}\n\nvar postProcessor = {\n  processors: {},\n  addPostProcessor(module) {\n    this.processors[module.name] = module;\n  },\n  handle(processors, value, key, options, translator) {\n    processors.forEach(processor => {\n      value = this.processors[processor]?.process(value, key, options, translator) ?? value;\n    });\n    return value;\n  }\n};\n\nconst PATH_KEY = Symbol('i18next/PATH_KEY');\nfunction createProxy() {\n  const state = [];\n  const handler = Object.create(null);\n  let proxy;\n  handler.get = (target, key) => {\n    proxy?.revoke?.();\n    if (key === PATH_KEY) return state;\n    state.push(key);\n    proxy = Proxy.revocable(target, handler);\n    return proxy.proxy;\n  };\n  return Proxy.revocable(Object.create(null), handler).proxy;\n}\nfunction keysFromSelector(selector, opts) {\n  const {\n    [PATH_KEY]: path\n  } = selector(createProxy());\n  return path.join(opts?.keySeparator ?? '.');\n}\n\nconst checkedLoadedFor = {};\nconst shouldHandleAsObject = res => !isString(res) && typeof res !== 'boolean' && typeof res !== 'number';\nclass Translator extends EventEmitter {\n  constructor(services, options = {}) {\n    super();\n    copy(['resourceStore', 'languageUtils', 'pluralResolver', 'interpolator', 'backendConnector', 'i18nFormat', 'utils'], services, this);\n    this.options = options;\n    if (this.options.keySeparator === undefined) {\n      this.options.keySeparator = '.';\n    }\n    this.logger = baseLogger.create('translator');\n  }\n  changeLanguage(lng) {\n    if (lng) this.language = lng;\n  }\n  exists(key, o = {\n    interpolation: {}\n  }) {\n    const opt = {\n      ...o\n    };\n    if (key == null) return false;\n    const resolved = this.resolve(key, opt);\n    if (resolved?.res === undefined) return false;\n    const isObject = shouldHandleAsObject(resolved.res);\n    if (opt.returnObjects === false && isObject) {\n      return false;\n    }\n    return true;\n  }\n  extractFromKey(key, opt) {\n    let nsSeparator = opt.nsSeparator !== undefined ? opt.nsSeparator : this.options.nsSeparator;\n    if (nsSeparator === undefined) nsSeparator = ':';\n    const keySeparator = opt.keySeparator !== undefined ? opt.keySeparator : this.options.keySeparator;\n    let namespaces = opt.ns || this.options.defaultNS || [];\n    const wouldCheckForNsInKey = nsSeparator && key.indexOf(nsSeparator) > -1;\n    const seemsNaturalLanguage = !this.options.userDefinedKeySeparator && !opt.keySeparator && !this.options.userDefinedNsSeparator && !opt.nsSeparator && !looksLikeObjectPath(key, nsSeparator, keySeparator);\n    if (wouldCheckForNsInKey && !seemsNaturalLanguage) {\n      const m = key.match(this.interpolator.nestingRegexp);\n      if (m && m.length > 0) {\n        return {\n          key,\n          namespaces: isString(namespaces) ? [namespaces] : namespaces\n        };\n      }\n      const parts = key.split(nsSeparator);\n      if (nsSeparator !== keySeparator || nsSeparator === keySeparator && this.options.ns.indexOf(parts[0]) > -1) namespaces = parts.shift();\n      key = parts.join(keySeparator);\n    }\n    return {\n      key,\n      namespaces: isString(namespaces) ? [namespaces] : namespaces\n    };\n  }\n  translate(keys, o, lastKey) {\n    let opt = typeof o === 'object' ? {\n      ...o\n    } : o;\n    if (typeof opt !== 'object' && this.options.overloadTranslationOptionHandler) {\n      opt = this.options.overloadTranslationOptionHandler(arguments);\n    }\n    if (typeof opt === 'object') opt = {\n      ...opt\n    };\n    if (!opt) opt = {};\n    if (keys == null) return '';\n    if (typeof keys === 'function') keys = keysFromSelector(keys, {\n      ...this.options,\n      ...opt\n    });\n    if (!Array.isArray(keys)) keys = [String(keys)];\n    const returnDetails = opt.returnDetails !== undefined ? opt.returnDetails : this.options.returnDetails;\n    const keySeparator = opt.keySeparator !== undefined ? opt.keySeparator : this.options.keySeparator;\n    const {\n      key,\n      namespaces\n    } = this.extractFromKey(keys[keys.length - 1], opt);\n    const namespace = namespaces[namespaces.length - 1];\n    let nsSeparator = opt.nsSeparator !== undefined ? opt.nsSeparator : this.options.nsSeparator;\n    if (nsSeparator === undefined) nsSeparator = ':';\n    const lng = opt.lng || this.language;\n    const appendNamespaceToCIMode = opt.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;\n    if (lng?.toLowerCase() === 'cimode') {\n      if (appendNamespaceToCIMode) {\n        if (returnDetails) {\n          return {\n            res: `${namespace}${nsSeparator}${key}`,\n            usedKey: key,\n            exactUsedKey: key,\n            usedLng: lng,\n            usedNS: namespace,\n            usedParams: this.getUsedParamsDetails(opt)\n          };\n        }\n        return `${namespace}${nsSeparator}${key}`;\n      }\n      if (returnDetails) {\n        return {\n          res: key,\n          usedKey: key,\n          exactUsedKey: key,\n          usedLng: lng,\n          usedNS: namespace,\n          usedParams: this.getUsedParamsDetails(opt)\n        };\n      }\n      return key;\n    }\n    const resolved = this.resolve(keys, opt);\n    let res = resolved?.res;\n    const resUsedKey = resolved?.usedKey || key;\n    const resExactUsedKey = resolved?.exactUsedKey || key;\n    const noObject = ['[object Number]', '[object Function]', '[object RegExp]'];\n    const joinArrays = opt.joinArrays !== undefined ? opt.joinArrays : this.options.joinArrays;\n    const handleAsObjectInI18nFormat = !this.i18nFormat || this.i18nFormat.handleAsObject;\n    const needsPluralHandling = opt.count !== undefined && !isString(opt.count);\n    const hasDefaultValue = Translator.hasDefaultValue(opt);\n    const defaultValueSuffix = needsPluralHandling ? this.pluralResolver.getSuffix(lng, opt.count, opt) : '';\n    const defaultValueSuffixOrdinalFallback = opt.ordinal && needsPluralHandling ? this.pluralResolver.getSuffix(lng, opt.count, {\n      ordinal: false\n    }) : '';\n    const needsZeroSuffixLookup = needsPluralHandling && !opt.ordinal && opt.count === 0;\n    const defaultValue = needsZeroSuffixLookup && opt[`defaultValue${this.options.pluralSeparator}zero`] || opt[`defaultValue${defaultValueSuffix}`] || opt[`defaultValue${defaultValueSuffixOrdinalFallback}`] || opt.defaultValue;\n    let resForObjHndl = res;\n    if (handleAsObjectInI18nFormat && !res && hasDefaultValue) {\n      resForObjHndl = defaultValue;\n    }\n    const handleAsObject = shouldHandleAsObject(resForObjHndl);\n    const resType = Object.prototype.toString.apply(resForObjHndl);\n    if (handleAsObjectInI18nFormat && resForObjHndl && handleAsObject && noObject.indexOf(resType) < 0 && !(isString(joinArrays) && Array.isArray(resForObjHndl))) {\n      if (!opt.returnObjects && !this.options.returnObjects) {\n        if (!this.options.returnedObjectHandler) {\n          this.logger.warn('accessing an object - but returnObjects options is not enabled!');\n        }\n        const r = this.options.returnedObjectHandler ? this.options.returnedObjectHandler(resUsedKey, resForObjHndl, {\n          ...opt,\n          ns: namespaces\n        }) : `key '${key} (${this.language})' returned an object instead of string.`;\n        if (returnDetails) {\n          resolved.res = r;\n          resolved.usedParams = this.getUsedParamsDetails(opt);\n          return resolved;\n        }\n        return r;\n      }\n      if (keySeparator) {\n        const resTypeIsArray = Array.isArray(resForObjHndl);\n        const copy = resTypeIsArray ? [] : {};\n        const newKeyToUse = resTypeIsArray ? resExactUsedKey : resUsedKey;\n        for (const m in resForObjHndl) {\n          if (Object.prototype.hasOwnProperty.call(resForObjHndl, m)) {\n            const deepKey = `${newKeyToUse}${keySeparator}${m}`;\n            if (hasDefaultValue && !res) {\n              copy[m] = this.translate(deepKey, {\n                ...opt,\n                defaultValue: shouldHandleAsObject(defaultValue) ? defaultValue[m] : undefined,\n                ...{\n                  joinArrays: false,\n                  ns: namespaces\n                }\n              });\n            } else {\n              copy[m] = this.translate(deepKey, {\n                ...opt,\n                ...{\n                  joinArrays: false,\n                  ns: namespaces\n                }\n              });\n            }\n            if (copy[m] === deepKey) copy[m] = resForObjHndl[m];\n          }\n        }\n        res = copy;\n      }\n    } else if (handleAsObjectInI18nFormat && isString(joinArrays) && Array.isArray(res)) {\n      res = res.join(joinArrays);\n      if (res) res = this.extendTranslation(res, keys, opt, lastKey);\n    } else {\n      let usedDefault = false;\n      let usedKey = false;\n      if (!this.isValidLookup(res) && hasDefaultValue) {\n        usedDefault = true;\n        res = defaultValue;\n      }\n      if (!this.isValidLookup(res)) {\n        usedKey = true;\n        res = key;\n      }\n      const missingKeyNoValueFallbackToKey = opt.missingKeyNoValueFallbackToKey || this.options.missingKeyNoValueFallbackToKey;\n      const resForMissing = missingKeyNoValueFallbackToKey && usedKey ? undefined : res;\n      const updateMissing = hasDefaultValue && defaultValue !== res && this.options.updateMissing;\n      if (usedKey || usedDefault || updateMissing) {\n        this.logger.log(updateMissing ? 'updateKey' : 'missingKey', lng, namespace, key, updateMissing ? defaultValue : res);\n        if (keySeparator) {\n          const fk = this.resolve(key, {\n            ...opt,\n            keySeparator: false\n          });\n          if (fk && fk.res) this.logger.warn('Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.');\n        }\n        let lngs = [];\n        const fallbackLngs = this.languageUtils.getFallbackCodes(this.options.fallbackLng, opt.lng || this.language);\n        if (this.options.saveMissingTo === 'fallback' && fallbackLngs && fallbackLngs[0]) {\n          for (let i = 0; i < fallbackLngs.length; i++) {\n            lngs.push(fallbackLngs[i]);\n          }\n        } else if (this.options.saveMissingTo === 'all') {\n          lngs = this.languageUtils.toResolveHierarchy(opt.lng || this.language);\n        } else {\n          lngs.push(opt.lng || this.language);\n        }\n        const send = (l, k, specificDefaultValue) => {\n          const defaultForMissing = hasDefaultValue && specificDefaultValue !== res ? specificDefaultValue : resForMissing;\n          if (this.options.missingKeyHandler) {\n            this.options.missingKeyHandler(l, namespace, k, defaultForMissing, updateMissing, opt);\n          } else if (this.backendConnector?.saveMissing) {\n            this.backendConnector.saveMissing(l, namespace, k, defaultForMissing, updateMissing, opt);\n          }\n          this.emit('missingKey', l, namespace, k, res);\n        };\n        if (this.options.saveMissing) {\n          if (this.options.saveMissingPlurals && needsPluralHandling) {\n            lngs.forEach(language => {\n              const suffixes = this.pluralResolver.getSuffixes(language, opt);\n              if (needsZeroSuffixLookup && opt[`defaultValue${this.options.pluralSeparator}zero`] && suffixes.indexOf(`${this.options.pluralSeparator}zero`) < 0) {\n                suffixes.push(`${this.options.pluralSeparator}zero`);\n              }\n              suffixes.forEach(suffix => {\n                send([language], key + suffix, opt[`defaultValue${suffix}`] || defaultValue);\n              });\n            });\n          } else {\n            send(lngs, key, defaultValue);\n          }\n        }\n      }\n      res = this.extendTranslation(res, keys, opt, resolved, lastKey);\n      if (usedKey && res === key && this.options.appendNamespaceToMissingKey) {\n        res = `${namespace}${nsSeparator}${key}`;\n      }\n      if ((usedKey || usedDefault) && this.options.parseMissingKeyHandler) {\n        res = this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey ? `${namespace}${nsSeparator}${key}` : key, usedDefault ? res : undefined, opt);\n      }\n    }\n    if (returnDetails) {\n      resolved.res = res;\n      resolved.usedParams = this.getUsedParamsDetails(opt);\n      return resolved;\n    }\n    return res;\n  }\n  extendTranslation(res, key, opt, resolved, lastKey) {\n    if (this.i18nFormat?.parse) {\n      res = this.i18nFormat.parse(res, {\n        ...this.options.interpolation.defaultVariables,\n        ...opt\n      }, opt.lng || this.language || resolved.usedLng, resolved.usedNS, resolved.usedKey, {\n        resolved\n      });\n    } else if (!opt.skipInterpolation) {\n      if (opt.interpolation) this.interpolator.init({\n        ...opt,\n        ...{\n          interpolation: {\n            ...this.options.interpolation,\n            ...opt.interpolation\n          }\n        }\n      });\n      const skipOnVariables = isString(res) && (opt?.interpolation?.skipOnVariables !== undefined ? opt.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables);\n      let nestBef;\n      if (skipOnVariables) {\n        const nb = res.match(this.interpolator.nestingRegexp);\n        nestBef = nb && nb.length;\n      }\n      let data = opt.replace && !isString(opt.replace) ? opt.replace : opt;\n      if (this.options.interpolation.defaultVariables) data = {\n        ...this.options.interpolation.defaultVariables,\n        ...data\n      };\n      res = this.interpolator.interpolate(res, data, opt.lng || this.language || resolved.usedLng, opt);\n      if (skipOnVariables) {\n        const na = res.match(this.interpolator.nestingRegexp);\n        const nestAft = na && na.length;\n        if (nestBef < nestAft) opt.nest = false;\n      }\n      if (!opt.lng && resolved && resolved.res) opt.lng = this.language || resolved.usedLng;\n      if (opt.nest !== false) res = this.interpolator.nest(res, (...args) => {\n        if (lastKey?.[0] === args[0] && !opt.context) {\n          this.logger.warn(`It seems you are nesting recursively key: ${args[0]} in key: ${key[0]}`);\n          return null;\n        }\n        return this.translate(...args, key);\n      }, opt);\n      if (opt.interpolation) this.interpolator.reset();\n    }\n    const postProcess = opt.postProcess || this.options.postProcess;\n    const postProcessorNames = isString(postProcess) ? [postProcess] : postProcess;\n    if (res != null && postProcessorNames?.length && opt.applyPostProcessor !== false) {\n      res = postProcessor.handle(postProcessorNames, res, key, this.options && this.options.postProcessPassResolved ? {\n        i18nResolved: {\n          ...resolved,\n          usedParams: this.getUsedParamsDetails(opt)\n        },\n        ...opt\n      } : opt, this);\n    }\n    return res;\n  }\n  resolve(keys, opt = {}) {\n    let found;\n    let usedKey;\n    let exactUsedKey;\n    let usedLng;\n    let usedNS;\n    if (isString(keys)) keys = [keys];\n    keys.forEach(k => {\n      if (this.isValidLookup(found)) return;\n      const extracted = this.extractFromKey(k, opt);\n      const key = extracted.key;\n      usedKey = key;\n      let namespaces = extracted.namespaces;\n      if (this.options.fallbackNS) namespaces = namespaces.concat(this.options.fallbackNS);\n      const needsPluralHandling = opt.count !== undefined && !isString(opt.count);\n      const needsZeroSuffixLookup = needsPluralHandling && !opt.ordinal && opt.count === 0;\n      const needsContextHandling = opt.context !== undefined && (isString(opt.context) || typeof opt.context === 'number') && opt.context !== '';\n      const codes = opt.lngs ? opt.lngs : this.languageUtils.toResolveHierarchy(opt.lng || this.language, opt.fallbackLng);\n      namespaces.forEach(ns => {\n        if (this.isValidLookup(found)) return;\n        usedNS = ns;\n        if (!checkedLoadedFor[`${codes[0]}-${ns}`] && this.utils?.hasLoadedNamespace && !this.utils?.hasLoadedNamespace(usedNS)) {\n          checkedLoadedFor[`${codes[0]}-${ns}`] = true;\n          this.logger.warn(`key \"${usedKey}\" for languages \"${codes.join(', ')}\" won't get resolved as namespace \"${usedNS}\" was not yet loaded`, 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n        }\n        codes.forEach(code => {\n          if (this.isValidLookup(found)) return;\n          usedLng = code;\n          const finalKeys = [key];\n          if (this.i18nFormat?.addLookupKeys) {\n            this.i18nFormat.addLookupKeys(finalKeys, key, code, ns, opt);\n          } else {\n            let pluralSuffix;\n            if (needsPluralHandling) pluralSuffix = this.pluralResolver.getSuffix(code, opt.count, opt);\n            const zeroSuffix = `${this.options.pluralSeparator}zero`;\n            const ordinalPrefix = `${this.options.pluralSeparator}ordinal${this.options.pluralSeparator}`;\n            if (needsPluralHandling) {\n              if (opt.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                finalKeys.push(key + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n              }\n              finalKeys.push(key + pluralSuffix);\n              if (needsZeroSuffixLookup) {\n                finalKeys.push(key + zeroSuffix);\n              }\n            }\n            if (needsContextHandling) {\n              const contextKey = `${key}${this.options.contextSeparator || '_'}${opt.context}`;\n              finalKeys.push(contextKey);\n              if (needsPluralHandling) {\n                if (opt.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                  finalKeys.push(contextKey + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n                }\n                finalKeys.push(contextKey + pluralSuffix);\n                if (needsZeroSuffixLookup) {\n                  finalKeys.push(contextKey + zeroSuffix);\n                }\n              }\n            }\n          }\n          let possibleKey;\n          while (possibleKey = finalKeys.pop()) {\n            if (!this.isValidLookup(found)) {\n              exactUsedKey = possibleKey;\n              found = this.getResource(code, ns, possibleKey, opt);\n            }\n          }\n        });\n      });\n    });\n    return {\n      res: found,\n      usedKey,\n      exactUsedKey,\n      usedLng,\n      usedNS\n    };\n  }\n  isValidLookup(res) {\n    return res !== undefined && !(!this.options.returnNull && res === null) && !(!this.options.returnEmptyString && res === '');\n  }\n  getResource(code, ns, key, options = {}) {\n    if (this.i18nFormat?.getResource) return this.i18nFormat.getResource(code, ns, key, options);\n    return this.resourceStore.getResource(code, ns, key, options);\n  }\n  getUsedParamsDetails(options = {}) {\n    const optionsKeys = ['defaultValue', 'ordinal', 'context', 'replace', 'lng', 'lngs', 'fallbackLng', 'ns', 'keySeparator', 'nsSeparator', 'returnObjects', 'returnDetails', 'joinArrays', 'postProcess', 'interpolation'];\n    const useOptionsReplaceForData = options.replace && !isString(options.replace);\n    let data = useOptionsReplaceForData ? options.replace : options;\n    if (useOptionsReplaceForData && typeof options.count !== 'undefined') {\n      data.count = options.count;\n    }\n    if (this.options.interpolation.defaultVariables) {\n      data = {\n        ...this.options.interpolation.defaultVariables,\n        ...data\n      };\n    }\n    if (!useOptionsReplaceForData) {\n      data = {\n        ...data\n      };\n      for (const key of optionsKeys) {\n        delete data[key];\n      }\n    }\n    return data;\n  }\n  static hasDefaultValue(options) {\n    const prefix = 'defaultValue';\n    for (const option in options) {\n      if (Object.prototype.hasOwnProperty.call(options, option) && prefix === option.substring(0, prefix.length) && undefined !== options[option]) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nclass LanguageUtil {\n  constructor(options) {\n    this.options = options;\n    this.supportedLngs = this.options.supportedLngs || false;\n    this.logger = baseLogger.create('languageUtils');\n  }\n  getScriptPartFromCode(code) {\n    code = getCleanedCode(code);\n    if (!code || code.indexOf('-') < 0) return null;\n    const p = code.split('-');\n    if (p.length === 2) return null;\n    p.pop();\n    if (p[p.length - 1].toLowerCase() === 'x') return null;\n    return this.formatLanguageCode(p.join('-'));\n  }\n  getLanguagePartFromCode(code) {\n    code = getCleanedCode(code);\n    if (!code || code.indexOf('-') < 0) return code;\n    const p = code.split('-');\n    return this.formatLanguageCode(p[0]);\n  }\n  formatLanguageCode(code) {\n    if (isString(code) && code.indexOf('-') > -1) {\n      let formattedCode;\n      try {\n        formattedCode = Intl.getCanonicalLocales(code)[0];\n      } catch (e) {}\n      if (formattedCode && this.options.lowerCaseLng) {\n        formattedCode = formattedCode.toLowerCase();\n      }\n      if (formattedCode) return formattedCode;\n      if (this.options.lowerCaseLng) {\n        return code.toLowerCase();\n      }\n      return code;\n    }\n    return this.options.cleanCode || this.options.lowerCaseLng ? code.toLowerCase() : code;\n  }\n  isSupportedCode(code) {\n    if (this.options.load === 'languageOnly' || this.options.nonExplicitSupportedLngs) {\n      code = this.getLanguagePartFromCode(code);\n    }\n    return !this.supportedLngs || !this.supportedLngs.length || this.supportedLngs.indexOf(code) > -1;\n  }\n  getBestMatchFromCodes(codes) {\n    if (!codes) return null;\n    let found;\n    codes.forEach(code => {\n      if (found) return;\n      const cleanedLng = this.formatLanguageCode(code);\n      if (!this.options.supportedLngs || this.isSupportedCode(cleanedLng)) found = cleanedLng;\n    });\n    if (!found && this.options.supportedLngs) {\n      codes.forEach(code => {\n        if (found) return;\n        const lngScOnly = this.getScriptPartFromCode(code);\n        if (this.isSupportedCode(lngScOnly)) return found = lngScOnly;\n        const lngOnly = this.getLanguagePartFromCode(code);\n        if (this.isSupportedCode(lngOnly)) return found = lngOnly;\n        found = this.options.supportedLngs.find(supportedLng => {\n          if (supportedLng === lngOnly) return supportedLng;\n          if (supportedLng.indexOf('-') < 0 && lngOnly.indexOf('-') < 0) return;\n          if (supportedLng.indexOf('-') > 0 && lngOnly.indexOf('-') < 0 && supportedLng.substring(0, supportedLng.indexOf('-')) === lngOnly) return supportedLng;\n          if (supportedLng.indexOf(lngOnly) === 0 && lngOnly.length > 1) return supportedLng;\n        });\n      });\n    }\n    if (!found) found = this.getFallbackCodes(this.options.fallbackLng)[0];\n    return found;\n  }\n  getFallbackCodes(fallbacks, code) {\n    if (!fallbacks) return [];\n    if (typeof fallbacks === 'function') fallbacks = fallbacks(code);\n    if (isString(fallbacks)) fallbacks = [fallbacks];\n    if (Array.isArray(fallbacks)) return fallbacks;\n    if (!code) return fallbacks.default || [];\n    let found = fallbacks[code];\n    if (!found) found = fallbacks[this.getScriptPartFromCode(code)];\n    if (!found) found = fallbacks[this.formatLanguageCode(code)];\n    if (!found) found = fallbacks[this.getLanguagePartFromCode(code)];\n    if (!found) found = fallbacks.default;\n    return found || [];\n  }\n  toResolveHierarchy(code, fallbackCode) {\n    const fallbackCodes = this.getFallbackCodes((fallbackCode === false ? [] : fallbackCode) || this.options.fallbackLng || [], code);\n    const codes = [];\n    const addCode = c => {\n      if (!c) return;\n      if (this.isSupportedCode(c)) {\n        codes.push(c);\n      } else {\n        this.logger.warn(`rejecting language code not found in supportedLngs: ${c}`);\n      }\n    };\n    if (isString(code) && (code.indexOf('-') > -1 || code.indexOf('_') > -1)) {\n      if (this.options.load !== 'languageOnly') addCode(this.formatLanguageCode(code));\n      if (this.options.load !== 'languageOnly' && this.options.load !== 'currentOnly') addCode(this.getScriptPartFromCode(code));\n      if (this.options.load !== 'currentOnly') addCode(this.getLanguagePartFromCode(code));\n    } else if (isString(code)) {\n      addCode(this.formatLanguageCode(code));\n    }\n    fallbackCodes.forEach(fc => {\n      if (codes.indexOf(fc) < 0) addCode(this.formatLanguageCode(fc));\n    });\n    return codes;\n  }\n}\n\nconst suffixesOrder = {\n  zero: 0,\n  one: 1,\n  two: 2,\n  few: 3,\n  many: 4,\n  other: 5\n};\nconst dummyRule = {\n  select: count => count === 1 ? 'one' : 'other',\n  resolvedOptions: () => ({\n    pluralCategories: ['one', 'other']\n  })\n};\nclass PluralResolver {\n  constructor(languageUtils, options = {}) {\n    this.languageUtils = languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('pluralResolver');\n    this.pluralRulesCache = {};\n  }\n  addRule(lng, obj) {\n    this.rules[lng] = obj;\n  }\n  clearCache() {\n    this.pluralRulesCache = {};\n  }\n  getRule(code, options = {}) {\n    const cleanedCode = getCleanedCode(code === 'dev' ? 'en' : code);\n    const type = options.ordinal ? 'ordinal' : 'cardinal';\n    const cacheKey = JSON.stringify({\n      cleanedCode,\n      type\n    });\n    if (cacheKey in this.pluralRulesCache) {\n      return this.pluralRulesCache[cacheKey];\n    }\n    let rule;\n    try {\n      rule = new Intl.PluralRules(cleanedCode, {\n        type\n      });\n    } catch (err) {\n      if (!Intl) {\n        this.logger.error('No Intl support, please use an Intl polyfill!');\n        return dummyRule;\n      }\n      if (!code.match(/-|_/)) return dummyRule;\n      const lngPart = this.languageUtils.getLanguagePartFromCode(code);\n      rule = this.getRule(lngPart, options);\n    }\n    this.pluralRulesCache[cacheKey] = rule;\n    return rule;\n  }\n  needsPlural(code, options = {}) {\n    let rule = this.getRule(code, options);\n    if (!rule) rule = this.getRule('dev', options);\n    return rule?.resolvedOptions().pluralCategories.length > 1;\n  }\n  getPluralFormsOfKey(code, key, options = {}) {\n    return this.getSuffixes(code, options).map(suffix => `${key}${suffix}`);\n  }\n  getSuffixes(code, options = {}) {\n    let rule = this.getRule(code, options);\n    if (!rule) rule = this.getRule('dev', options);\n    if (!rule) return [];\n    return rule.resolvedOptions().pluralCategories.sort((pluralCategory1, pluralCategory2) => suffixesOrder[pluralCategory1] - suffixesOrder[pluralCategory2]).map(pluralCategory => `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${pluralCategory}`);\n  }\n  getSuffix(code, count, options = {}) {\n    const rule = this.getRule(code, options);\n    if (rule) {\n      return `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${rule.select(count)}`;\n    }\n    this.logger.warn(`no plural rule found for: ${code}`);\n    return this.getSuffix('dev', count, options);\n  }\n}\n\nconst deepFindWithDefaults = (data, defaultData, key, keySeparator = '.', ignoreJSONStructure = true) => {\n  let path = getPathWithDefaults(data, defaultData, key);\n  if (!path && ignoreJSONStructure && isString(key)) {\n    path = deepFind(data, key, keySeparator);\n    if (path === undefined) path = deepFind(defaultData, key, keySeparator);\n  }\n  return path;\n};\nconst regexSafe = val => val.replace(/\\$/g, '$$$$');\nclass Interpolator {\n  constructor(options = {}) {\n    this.logger = baseLogger.create('interpolator');\n    this.options = options;\n    this.format = options?.interpolation?.format || (value => value);\n    this.init(options);\n  }\n  init(options = {}) {\n    if (!options.interpolation) options.interpolation = {\n      escapeValue: true\n    };\n    const {\n      escape: escape$1,\n      escapeValue,\n      useRawValueToEscape,\n      prefix,\n      prefixEscaped,\n      suffix,\n      suffixEscaped,\n      formatSeparator,\n      unescapeSuffix,\n      unescapePrefix,\n      nestingPrefix,\n      nestingPrefixEscaped,\n      nestingSuffix,\n      nestingSuffixEscaped,\n      nestingOptionsSeparator,\n      maxReplaces,\n      alwaysFormat\n    } = options.interpolation;\n    this.escape = escape$1 !== undefined ? escape$1 : escape;\n    this.escapeValue = escapeValue !== undefined ? escapeValue : true;\n    this.useRawValueToEscape = useRawValueToEscape !== undefined ? useRawValueToEscape : false;\n    this.prefix = prefix ? regexEscape(prefix) : prefixEscaped || '{{';\n    this.suffix = suffix ? regexEscape(suffix) : suffixEscaped || '}}';\n    this.formatSeparator = formatSeparator || ',';\n    this.unescapePrefix = unescapeSuffix ? '' : unescapePrefix || '-';\n    this.unescapeSuffix = this.unescapePrefix ? '' : unescapeSuffix || '';\n    this.nestingPrefix = nestingPrefix ? regexEscape(nestingPrefix) : nestingPrefixEscaped || regexEscape('$t(');\n    this.nestingSuffix = nestingSuffix ? regexEscape(nestingSuffix) : nestingSuffixEscaped || regexEscape(')');\n    this.nestingOptionsSeparator = nestingOptionsSeparator || ',';\n    this.maxReplaces = maxReplaces || 1000;\n    this.alwaysFormat = alwaysFormat !== undefined ? alwaysFormat : false;\n    this.resetRegExp();\n  }\n  reset() {\n    if (this.options) this.init(this.options);\n  }\n  resetRegExp() {\n    const getOrResetRegExp = (existingRegExp, pattern) => {\n      if (existingRegExp?.source === pattern) {\n        existingRegExp.lastIndex = 0;\n        return existingRegExp;\n      }\n      return new RegExp(pattern, 'g');\n    };\n    this.regexp = getOrResetRegExp(this.regexp, `${this.prefix}(.+?)${this.suffix}`);\n    this.regexpUnescape = getOrResetRegExp(this.regexpUnescape, `${this.prefix}${this.unescapePrefix}(.+?)${this.unescapeSuffix}${this.suffix}`);\n    this.nestingRegexp = getOrResetRegExp(this.nestingRegexp, `${this.nestingPrefix}((?:[^()\"']+|\"[^\"]*\"|'[^']*'|\\\\((?:[^()]|\"[^\"]*\"|'[^']*')*\\\\))*?)${this.nestingSuffix}`);\n  }\n  interpolate(str, data, lng, options) {\n    let match;\n    let value;\n    let replaces;\n    const defaultData = this.options && this.options.interpolation && this.options.interpolation.defaultVariables || {};\n    const handleFormat = key => {\n      if (key.indexOf(this.formatSeparator) < 0) {\n        const path = deepFindWithDefaults(data, defaultData, key, this.options.keySeparator, this.options.ignoreJSONStructure);\n        return this.alwaysFormat ? this.format(path, undefined, lng, {\n          ...options,\n          ...data,\n          interpolationkey: key\n        }) : path;\n      }\n      const p = key.split(this.formatSeparator);\n      const k = p.shift().trim();\n      const f = p.join(this.formatSeparator).trim();\n      return this.format(deepFindWithDefaults(data, defaultData, k, this.options.keySeparator, this.options.ignoreJSONStructure), f, lng, {\n        ...options,\n        ...data,\n        interpolationkey: k\n      });\n    };\n    this.resetRegExp();\n    const missingInterpolationHandler = options?.missingInterpolationHandler || this.options.missingInterpolationHandler;\n    const skipOnVariables = options?.interpolation?.skipOnVariables !== undefined ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables;\n    const todos = [{\n      regex: this.regexpUnescape,\n      safeValue: val => regexSafe(val)\n    }, {\n      regex: this.regexp,\n      safeValue: val => this.escapeValue ? regexSafe(this.escape(val)) : regexSafe(val)\n    }];\n    todos.forEach(todo => {\n      replaces = 0;\n      while (match = todo.regex.exec(str)) {\n        const matchedVar = match[1].trim();\n        value = handleFormat(matchedVar);\n        if (value === undefined) {\n          if (typeof missingInterpolationHandler === 'function') {\n            const temp = missingInterpolationHandler(str, match, options);\n            value = isString(temp) ? temp : '';\n          } else if (options && Object.prototype.hasOwnProperty.call(options, matchedVar)) {\n            value = '';\n          } else if (skipOnVariables) {\n            value = match[0];\n            continue;\n          } else {\n            this.logger.warn(`missed to pass in variable ${matchedVar} for interpolating ${str}`);\n            value = '';\n          }\n        } else if (!isString(value) && !this.useRawValueToEscape) {\n          value = makeString(value);\n        }\n        const safeValue = todo.safeValue(value);\n        str = str.replace(match[0], safeValue);\n        if (skipOnVariables) {\n          todo.regex.lastIndex += value.length;\n          todo.regex.lastIndex -= match[0].length;\n        } else {\n          todo.regex.lastIndex = 0;\n        }\n        replaces++;\n        if (replaces >= this.maxReplaces) {\n          break;\n        }\n      }\n    });\n    return str;\n  }\n  nest(str, fc, options = {}) {\n    let match;\n    let value;\n    let clonedOptions;\n    const handleHasOptions = (key, inheritedOptions) => {\n      const sep = this.nestingOptionsSeparator;\n      if (key.indexOf(sep) < 0) return key;\n      const c = key.split(new RegExp(`${sep}[ ]*{`));\n      let optionsString = `{${c[1]}`;\n      key = c[0];\n      optionsString = this.interpolate(optionsString, clonedOptions);\n      const matchedSingleQuotes = optionsString.match(/'/g);\n      const matchedDoubleQuotes = optionsString.match(/\"/g);\n      if ((matchedSingleQuotes?.length ?? 0) % 2 === 0 && !matchedDoubleQuotes || matchedDoubleQuotes.length % 2 !== 0) {\n        optionsString = optionsString.replace(/'/g, '\"');\n      }\n      try {\n        clonedOptions = JSON.parse(optionsString);\n        if (inheritedOptions) clonedOptions = {\n          ...inheritedOptions,\n          ...clonedOptions\n        };\n      } catch (e) {\n        this.logger.warn(`failed parsing options string in nesting for key ${key}`, e);\n        return `${key}${sep}${optionsString}`;\n      }\n      if (clonedOptions.defaultValue && clonedOptions.defaultValue.indexOf(this.prefix) > -1) delete clonedOptions.defaultValue;\n      return key;\n    };\n    while (match = this.nestingRegexp.exec(str)) {\n      let formatters = [];\n      clonedOptions = {\n        ...options\n      };\n      clonedOptions = clonedOptions.replace && !isString(clonedOptions.replace) ? clonedOptions.replace : clonedOptions;\n      clonedOptions.applyPostProcessor = false;\n      delete clonedOptions.defaultValue;\n      const keyEndIndex = /{.*}/.test(match[1]) ? match[1].lastIndexOf('}') + 1 : match[1].indexOf(this.formatSeparator);\n      if (keyEndIndex !== -1) {\n        formatters = match[1].slice(keyEndIndex).split(this.formatSeparator).map(elem => elem.trim()).filter(Boolean);\n        match[1] = match[1].slice(0, keyEndIndex);\n      }\n      value = fc(handleHasOptions.call(this, match[1].trim(), clonedOptions), clonedOptions);\n      if (value && match[0] === str && !isString(value)) return value;\n      if (!isString(value)) value = makeString(value);\n      if (!value) {\n        this.logger.warn(`missed to resolve ${match[1]} for nesting ${str}`);\n        value = '';\n      }\n      if (formatters.length) {\n        value = formatters.reduce((v, f) => this.format(v, f, options.lng, {\n          ...options,\n          interpolationkey: match[1].trim()\n        }), value.trim());\n      }\n      str = str.replace(match[0], value);\n      this.regexp.lastIndex = 0;\n    }\n    return str;\n  }\n}\n\nconst parseFormatStr = formatStr => {\n  let formatName = formatStr.toLowerCase().trim();\n  const formatOptions = {};\n  if (formatStr.indexOf('(') > -1) {\n    const p = formatStr.split('(');\n    formatName = p[0].toLowerCase().trim();\n    const optStr = p[1].substring(0, p[1].length - 1);\n    if (formatName === 'currency' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.currency) formatOptions.currency = optStr.trim();\n    } else if (formatName === 'relativetime' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.range) formatOptions.range = optStr.trim();\n    } else {\n      const opts = optStr.split(';');\n      opts.forEach(opt => {\n        if (opt) {\n          const [key, ...rest] = opt.split(':');\n          const val = rest.join(':').trim().replace(/^'+|'+$/g, '');\n          const trimmedKey = key.trim();\n          if (!formatOptions[trimmedKey]) formatOptions[trimmedKey] = val;\n          if (val === 'false') formatOptions[trimmedKey] = false;\n          if (val === 'true') formatOptions[trimmedKey] = true;\n          if (!isNaN(val)) formatOptions[trimmedKey] = parseInt(val, 10);\n        }\n      });\n    }\n  }\n  return {\n    formatName,\n    formatOptions\n  };\n};\nconst createCachedFormatter = fn => {\n  const cache = {};\n  return (v, l, o) => {\n    let optForCache = o;\n    if (o && o.interpolationkey && o.formatParams && o.formatParams[o.interpolationkey] && o[o.interpolationkey]) {\n      optForCache = {\n        ...optForCache,\n        [o.interpolationkey]: undefined\n      };\n    }\n    const key = l + JSON.stringify(optForCache);\n    let frm = cache[key];\n    if (!frm) {\n      frm = fn(getCleanedCode(l), o);\n      cache[key] = frm;\n    }\n    return frm(v);\n  };\n};\nconst createNonCachedFormatter = fn => (v, l, o) => fn(getCleanedCode(l), o)(v);\nclass Formatter {\n  constructor(options = {}) {\n    this.logger = baseLogger.create('formatter');\n    this.options = options;\n    this.init(options);\n  }\n  init(services, options = {\n    interpolation: {}\n  }) {\n    this.formatSeparator = options.interpolation.formatSeparator || ',';\n    const cf = options.cacheInBuiltFormats ? createCachedFormatter : createNonCachedFormatter;\n    this.formats = {\n      number: cf((lng, opt) => {\n        const formatter = new Intl.NumberFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      }),\n      currency: cf((lng, opt) => {\n        const formatter = new Intl.NumberFormat(lng, {\n          ...opt,\n          style: 'currency'\n        });\n        return val => formatter.format(val);\n      }),\n      datetime: cf((lng, opt) => {\n        const formatter = new Intl.DateTimeFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      }),\n      relativetime: cf((lng, opt) => {\n        const formatter = new Intl.RelativeTimeFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val, opt.range || 'day');\n      }),\n      list: cf((lng, opt) => {\n        const formatter = new Intl.ListFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      })\n    };\n  }\n  add(name, fc) {\n    this.formats[name.toLowerCase().trim()] = fc;\n  }\n  addCached(name, fc) {\n    this.formats[name.toLowerCase().trim()] = createCachedFormatter(fc);\n  }\n  format(value, format, lng, options = {}) {\n    const formats = format.split(this.formatSeparator);\n    if (formats.length > 1 && formats[0].indexOf('(') > 1 && formats[0].indexOf(')') < 0 && formats.find(f => f.indexOf(')') > -1)) {\n      const lastIndex = formats.findIndex(f => f.indexOf(')') > -1);\n      formats[0] = [formats[0], ...formats.splice(1, lastIndex)].join(this.formatSeparator);\n    }\n    const result = formats.reduce((mem, f) => {\n      const {\n        formatName,\n        formatOptions\n      } = parseFormatStr(f);\n      if (this.formats[formatName]) {\n        let formatted = mem;\n        try {\n          const valOptions = options?.formatParams?.[options.interpolationkey] || {};\n          const l = valOptions.locale || valOptions.lng || options.locale || options.lng || lng;\n          formatted = this.formats[formatName](mem, l, {\n            ...formatOptions,\n            ...options,\n            ...valOptions\n          });\n        } catch (error) {\n          this.logger.warn(error);\n        }\n        return formatted;\n      } else {\n        this.logger.warn(`there was no format function for ${formatName}`);\n      }\n      return mem;\n    }, value);\n    return result;\n  }\n}\n\nconst removePending = (q, name) => {\n  if (q.pending[name] !== undefined) {\n    delete q.pending[name];\n    q.pendingCount--;\n  }\n};\nclass Connector extends EventEmitter {\n  constructor(backend, store, services, options = {}) {\n    super();\n    this.backend = backend;\n    this.store = store;\n    this.services = services;\n    this.languageUtils = services.languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('backendConnector');\n    this.waitingReads = [];\n    this.maxParallelReads = options.maxParallelReads || 10;\n    this.readingCalls = 0;\n    this.maxRetries = options.maxRetries >= 0 ? options.maxRetries : 5;\n    this.retryTimeout = options.retryTimeout >= 1 ? options.retryTimeout : 350;\n    this.state = {};\n    this.queue = [];\n    this.backend?.init?.(services, options.backend, options);\n  }\n  queueLoad(languages, namespaces, options, callback) {\n    const toLoad = {};\n    const pending = {};\n    const toLoadLanguages = {};\n    const toLoadNamespaces = {};\n    languages.forEach(lng => {\n      let hasAllNamespaces = true;\n      namespaces.forEach(ns => {\n        const name = `${lng}|${ns}`;\n        if (!options.reload && this.store.hasResourceBundle(lng, ns)) {\n          this.state[name] = 2;\n        } else if (this.state[name] < 0) ; else if (this.state[name] === 1) {\n          if (pending[name] === undefined) pending[name] = true;\n        } else {\n          this.state[name] = 1;\n          hasAllNamespaces = false;\n          if (pending[name] === undefined) pending[name] = true;\n          if (toLoad[name] === undefined) toLoad[name] = true;\n          if (toLoadNamespaces[ns] === undefined) toLoadNamespaces[ns] = true;\n        }\n      });\n      if (!hasAllNamespaces) toLoadLanguages[lng] = true;\n    });\n    if (Object.keys(toLoad).length || Object.keys(pending).length) {\n      this.queue.push({\n        pending,\n        pendingCount: Object.keys(pending).length,\n        loaded: {},\n        errors: [],\n        callback\n      });\n    }\n    return {\n      toLoad: Object.keys(toLoad),\n      pending: Object.keys(pending),\n      toLoadLanguages: Object.keys(toLoadLanguages),\n      toLoadNamespaces: Object.keys(toLoadNamespaces)\n    };\n  }\n  loaded(name, err, data) {\n    const s = name.split('|');\n    const lng = s[0];\n    const ns = s[1];\n    if (err) this.emit('failedLoading', lng, ns, err);\n    if (!err && data) {\n      this.store.addResourceBundle(lng, ns, data, undefined, undefined, {\n        skipCopy: true\n      });\n    }\n    this.state[name] = err ? -1 : 2;\n    if (err && data) this.state[name] = 0;\n    const loaded = {};\n    this.queue.forEach(q => {\n      pushPath(q.loaded, [lng], ns);\n      removePending(q, name);\n      if (err) q.errors.push(err);\n      if (q.pendingCount === 0 && !q.done) {\n        Object.keys(q.loaded).forEach(l => {\n          if (!loaded[l]) loaded[l] = {};\n          const loadedKeys = q.loaded[l];\n          if (loadedKeys.length) {\n            loadedKeys.forEach(n => {\n              if (loaded[l][n] === undefined) loaded[l][n] = true;\n            });\n          }\n        });\n        q.done = true;\n        if (q.errors.length) {\n          q.callback(q.errors);\n        } else {\n          q.callback();\n        }\n      }\n    });\n    this.emit('loaded', loaded);\n    this.queue = this.queue.filter(q => !q.done);\n  }\n  read(lng, ns, fcName, tried = 0, wait = this.retryTimeout, callback) {\n    if (!lng.length) return callback(null, {});\n    if (this.readingCalls >= this.maxParallelReads) {\n      this.waitingReads.push({\n        lng,\n        ns,\n        fcName,\n        tried,\n        wait,\n        callback\n      });\n      return;\n    }\n    this.readingCalls++;\n    const resolver = (err, data) => {\n      this.readingCalls--;\n      if (this.waitingReads.length > 0) {\n        const next = this.waitingReads.shift();\n        this.read(next.lng, next.ns, next.fcName, next.tried, next.wait, next.callback);\n      }\n      if (err && data && tried < this.maxRetries) {\n        setTimeout(() => {\n          this.read.call(this, lng, ns, fcName, tried + 1, wait * 2, callback);\n        }, wait);\n        return;\n      }\n      callback(err, data);\n    };\n    const fc = this.backend[fcName].bind(this.backend);\n    if (fc.length === 2) {\n      try {\n        const r = fc(lng, ns);\n        if (r && typeof r.then === 'function') {\n          r.then(data => resolver(null, data)).catch(resolver);\n        } else {\n          resolver(null, r);\n        }\n      } catch (err) {\n        resolver(err);\n      }\n      return;\n    }\n    return fc(lng, ns, resolver);\n  }\n  prepareLoading(languages, namespaces, options = {}, callback) {\n    if (!this.backend) {\n      this.logger.warn('No backend was added via i18next.use. Will not load resources.');\n      return callback && callback();\n    }\n    if (isString(languages)) languages = this.languageUtils.toResolveHierarchy(languages);\n    if (isString(namespaces)) namespaces = [namespaces];\n    const toLoad = this.queueLoad(languages, namespaces, options, callback);\n    if (!toLoad.toLoad.length) {\n      if (!toLoad.pending.length) callback();\n      return null;\n    }\n    toLoad.toLoad.forEach(name => {\n      this.loadOne(name);\n    });\n  }\n  load(languages, namespaces, callback) {\n    this.prepareLoading(languages, namespaces, {}, callback);\n  }\n  reload(languages, namespaces, callback) {\n    this.prepareLoading(languages, namespaces, {\n      reload: true\n    }, callback);\n  }\n  loadOne(name, prefix = '') {\n    const s = name.split('|');\n    const lng = s[0];\n    const ns = s[1];\n    this.read(lng, ns, 'read', undefined, undefined, (err, data) => {\n      if (err) this.logger.warn(`${prefix}loading namespace ${ns} for language ${lng} failed`, err);\n      if (!err && data) this.logger.log(`${prefix}loaded namespace ${ns} for language ${lng}`, data);\n      this.loaded(name, err, data);\n    });\n  }\n  saveMissing(languages, namespace, key, fallbackValue, isUpdate, options = {}, clb = () => {}) {\n    if (this.services?.utils?.hasLoadedNamespace && !this.services?.utils?.hasLoadedNamespace(namespace)) {\n      this.logger.warn(`did not save key \"${key}\" as the namespace \"${namespace}\" was not yet loaded`, 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n      return;\n    }\n    if (key === undefined || key === null || key === '') return;\n    if (this.backend?.create) {\n      const opts = {\n        ...options,\n        isUpdate\n      };\n      const fc = this.backend.create.bind(this.backend);\n      if (fc.length < 6) {\n        try {\n          let r;\n          if (fc.length === 5) {\n            r = fc(languages, namespace, key, fallbackValue, opts);\n          } else {\n            r = fc(languages, namespace, key, fallbackValue);\n          }\n          if (r && typeof r.then === 'function') {\n            r.then(data => clb(null, data)).catch(clb);\n          } else {\n            clb(null, r);\n          }\n        } catch (err) {\n          clb(err);\n        }\n      } else {\n        fc(languages, namespace, key, fallbackValue, clb, opts);\n      }\n    }\n    if (!languages || !languages[0]) return;\n    this.store.addResource(languages[0], namespace, key, fallbackValue);\n  }\n}\n\nconst get = () => ({\n  debug: false,\n  initAsync: true,\n  ns: ['translation'],\n  defaultNS: ['translation'],\n  fallbackLng: ['dev'],\n  fallbackNS: false,\n  supportedLngs: false,\n  nonExplicitSupportedLngs: false,\n  load: 'all',\n  preload: false,\n  simplifyPluralSuffix: true,\n  keySeparator: '.',\n  nsSeparator: ':',\n  pluralSeparator: '_',\n  contextSeparator: '_',\n  partialBundledLanguages: false,\n  saveMissing: false,\n  updateMissing: false,\n  saveMissingTo: 'fallback',\n  saveMissingPlurals: true,\n  missingKeyHandler: false,\n  missingInterpolationHandler: false,\n  postProcess: false,\n  postProcessPassResolved: false,\n  returnNull: false,\n  returnEmptyString: true,\n  returnObjects: false,\n  joinArrays: false,\n  returnedObjectHandler: false,\n  parseMissingKeyHandler: false,\n  appendNamespaceToMissingKey: false,\n  appendNamespaceToCIMode: false,\n  overloadTranslationOptionHandler: args => {\n    let ret = {};\n    if (typeof args[1] === 'object') ret = args[1];\n    if (isString(args[1])) ret.defaultValue = args[1];\n    if (isString(args[2])) ret.tDescription = args[2];\n    if (typeof args[2] === 'object' || typeof args[3] === 'object') {\n      const options = args[3] || args[2];\n      Object.keys(options).forEach(key => {\n        ret[key] = options[key];\n      });\n    }\n    return ret;\n  },\n  interpolation: {\n    escapeValue: true,\n    format: value => value,\n    prefix: '{{',\n    suffix: '}}',\n    formatSeparator: ',',\n    unescapePrefix: '-',\n    nestingPrefix: '$t(',\n    nestingSuffix: ')',\n    nestingOptionsSeparator: ',',\n    maxReplaces: 1000,\n    skipOnVariables: true\n  },\n  cacheInBuiltFormats: true\n});\nconst transformOptions = options => {\n  if (isString(options.ns)) options.ns = [options.ns];\n  if (isString(options.fallbackLng)) options.fallbackLng = [options.fallbackLng];\n  if (isString(options.fallbackNS)) options.fallbackNS = [options.fallbackNS];\n  if (options.supportedLngs?.indexOf?.('cimode') < 0) {\n    options.supportedLngs = options.supportedLngs.concat(['cimode']);\n  }\n  if (typeof options.initImmediate === 'boolean') options.initAsync = options.initImmediate;\n  return options;\n};\n\nconst noop = () => {};\nconst bindMemberFunctions = inst => {\n  const mems = Object.getOwnPropertyNames(Object.getPrototypeOf(inst));\n  mems.forEach(mem => {\n    if (typeof inst[mem] === 'function') {\n      inst[mem] = inst[mem].bind(inst);\n    }\n  });\n};\nclass I18n extends EventEmitter {\n  constructor(options = {}, callback) {\n    super();\n    this.options = transformOptions(options);\n    this.services = {};\n    this.logger = baseLogger;\n    this.modules = {\n      external: []\n    };\n    bindMemberFunctions(this);\n    if (callback && !this.isInitialized && !options.isClone) {\n      if (!this.options.initAsync) {\n        this.init(options, callback);\n        return this;\n      }\n      setTimeout(() => {\n        this.init(options, callback);\n      }, 0);\n    }\n  }\n  init(options = {}, callback) {\n    this.isInitializing = true;\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    if (options.defaultNS == null && options.ns) {\n      if (isString(options.ns)) {\n        options.defaultNS = options.ns;\n      } else if (options.ns.indexOf('translation') < 0) {\n        options.defaultNS = options.ns[0];\n      }\n    }\n    const defOpts = get();\n    this.options = {\n      ...defOpts,\n      ...this.options,\n      ...transformOptions(options)\n    };\n    this.options.interpolation = {\n      ...defOpts.interpolation,\n      ...this.options.interpolation\n    };\n    if (options.keySeparator !== undefined) {\n      this.options.userDefinedKeySeparator = options.keySeparator;\n    }\n    if (options.nsSeparator !== undefined) {\n      this.options.userDefinedNsSeparator = options.nsSeparator;\n    }\n    const createClassOnDemand = ClassOrObject => {\n      if (!ClassOrObject) return null;\n      if (typeof ClassOrObject === 'function') return new ClassOrObject();\n      return ClassOrObject;\n    };\n    if (!this.options.isClone) {\n      if (this.modules.logger) {\n        baseLogger.init(createClassOnDemand(this.modules.logger), this.options);\n      } else {\n        baseLogger.init(null, this.options);\n      }\n      let formatter;\n      if (this.modules.formatter) {\n        formatter = this.modules.formatter;\n      } else {\n        formatter = Formatter;\n      }\n      const lu = new LanguageUtil(this.options);\n      this.store = new ResourceStore(this.options.resources, this.options);\n      const s = this.services;\n      s.logger = baseLogger;\n      s.resourceStore = this.store;\n      s.languageUtils = lu;\n      s.pluralResolver = new PluralResolver(lu, {\n        prepend: this.options.pluralSeparator,\n        simplifyPluralSuffix: this.options.simplifyPluralSuffix\n      });\n      const usingLegacyFormatFunction = this.options.interpolation.format && this.options.interpolation.format !== defOpts.interpolation.format;\n      if (usingLegacyFormatFunction) {\n        this.logger.deprecate(`init: you are still using the legacy format function, please use the new approach: https://www.i18next.com/translation-function/formatting`);\n      }\n      if (formatter && (!this.options.interpolation.format || this.options.interpolation.format === defOpts.interpolation.format)) {\n        s.formatter = createClassOnDemand(formatter);\n        if (s.formatter.init) s.formatter.init(s, this.options);\n        this.options.interpolation.format = s.formatter.format.bind(s.formatter);\n      }\n      s.interpolator = new Interpolator(this.options);\n      s.utils = {\n        hasLoadedNamespace: this.hasLoadedNamespace.bind(this)\n      };\n      s.backendConnector = new Connector(createClassOnDemand(this.modules.backend), s.resourceStore, s, this.options);\n      s.backendConnector.on('*', (event, ...args) => {\n        this.emit(event, ...args);\n      });\n      if (this.modules.languageDetector) {\n        s.languageDetector = createClassOnDemand(this.modules.languageDetector);\n        if (s.languageDetector.init) s.languageDetector.init(s, this.options.detection, this.options);\n      }\n      if (this.modules.i18nFormat) {\n        s.i18nFormat = createClassOnDemand(this.modules.i18nFormat);\n        if (s.i18nFormat.init) s.i18nFormat.init(this);\n      }\n      this.translator = new Translator(this.services, this.options);\n      this.translator.on('*', (event, ...args) => {\n        this.emit(event, ...args);\n      });\n      this.modules.external.forEach(m => {\n        if (m.init) m.init(this);\n      });\n    }\n    this.format = this.options.interpolation.format;\n    if (!callback) callback = noop;\n    if (this.options.fallbackLng && !this.services.languageDetector && !this.options.lng) {\n      const codes = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n      if (codes.length > 0 && codes[0] !== 'dev') this.options.lng = codes[0];\n    }\n    if (!this.services.languageDetector && !this.options.lng) {\n      this.logger.warn('init: no languageDetector is used and no lng is defined');\n    }\n    const storeApi = ['getResource', 'hasResourceBundle', 'getResourceBundle', 'getDataByLanguage'];\n    storeApi.forEach(fcName => {\n      this[fcName] = (...args) => this.store[fcName](...args);\n    });\n    const storeApiChained = ['addResource', 'addResources', 'addResourceBundle', 'removeResourceBundle'];\n    storeApiChained.forEach(fcName => {\n      this[fcName] = (...args) => {\n        this.store[fcName](...args);\n        return this;\n      };\n    });\n    const deferred = defer();\n    const load = () => {\n      const finish = (err, t) => {\n        this.isInitializing = false;\n        if (this.isInitialized && !this.initializedStoreOnce) this.logger.warn('init: i18next is already initialized. You should call init just once!');\n        this.isInitialized = true;\n        if (!this.options.isClone) this.logger.log('initialized', this.options);\n        this.emit('initialized', this.options);\n        deferred.resolve(t);\n        callback(err, t);\n      };\n      if (this.languages && !this.isInitialized) return finish(null, this.t.bind(this));\n      this.changeLanguage(this.options.lng, finish);\n    };\n    if (this.options.resources || !this.options.initAsync) {\n      load();\n    } else {\n      setTimeout(load, 0);\n    }\n    return deferred;\n  }\n  loadResources(language, callback = noop) {\n    let usedCallback = callback;\n    const usedLng = isString(language) ? language : this.language;\n    if (typeof language === 'function') usedCallback = language;\n    if (!this.options.resources || this.options.partialBundledLanguages) {\n      if (usedLng?.toLowerCase() === 'cimode' && (!this.options.preload || this.options.preload.length === 0)) return usedCallback();\n      const toLoad = [];\n      const append = lng => {\n        if (!lng) return;\n        if (lng === 'cimode') return;\n        const lngs = this.services.languageUtils.toResolveHierarchy(lng);\n        lngs.forEach(l => {\n          if (l === 'cimode') return;\n          if (toLoad.indexOf(l) < 0) toLoad.push(l);\n        });\n      };\n      if (!usedLng) {\n        const fallbacks = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n        fallbacks.forEach(l => append(l));\n      } else {\n        append(usedLng);\n      }\n      this.options.preload?.forEach?.(l => append(l));\n      this.services.backendConnector.load(toLoad, this.options.ns, e => {\n        if (!e && !this.resolvedLanguage && this.language) this.setResolvedLanguage(this.language);\n        usedCallback(e);\n      });\n    } else {\n      usedCallback(null);\n    }\n  }\n  reloadResources(lngs, ns, callback) {\n    const deferred = defer();\n    if (typeof lngs === 'function') {\n      callback = lngs;\n      lngs = undefined;\n    }\n    if (typeof ns === 'function') {\n      callback = ns;\n      ns = undefined;\n    }\n    if (!lngs) lngs = this.languages;\n    if (!ns) ns = this.options.ns;\n    if (!callback) callback = noop;\n    this.services.backendConnector.reload(lngs, ns, err => {\n      deferred.resolve();\n      callback(err);\n    });\n    return deferred;\n  }\n  use(module) {\n    if (!module) throw new Error('You are passing an undefined module! Please check the object you are passing to i18next.use()');\n    if (!module.type) throw new Error('You are passing a wrong module! Please check the object you are passing to i18next.use()');\n    if (module.type === 'backend') {\n      this.modules.backend = module;\n    }\n    if (module.type === 'logger' || module.log && module.warn && module.error) {\n      this.modules.logger = module;\n    }\n    if (module.type === 'languageDetector') {\n      this.modules.languageDetector = module;\n    }\n    if (module.type === 'i18nFormat') {\n      this.modules.i18nFormat = module;\n    }\n    if (module.type === 'postProcessor') {\n      postProcessor.addPostProcessor(module);\n    }\n    if (module.type === 'formatter') {\n      this.modules.formatter = module;\n    }\n    if (module.type === '3rdParty') {\n      this.modules.external.push(module);\n    }\n    return this;\n  }\n  setResolvedLanguage(l) {\n    if (!l || !this.languages) return;\n    if (['cimode', 'dev'].indexOf(l) > -1) return;\n    for (let li = 0; li < this.languages.length; li++) {\n      const lngInLngs = this.languages[li];\n      if (['cimode', 'dev'].indexOf(lngInLngs) > -1) continue;\n      if (this.store.hasLanguageSomeTranslations(lngInLngs)) {\n        this.resolvedLanguage = lngInLngs;\n        break;\n      }\n    }\n    if (!this.resolvedLanguage && this.languages.indexOf(l) < 0 && this.store.hasLanguageSomeTranslations(l)) {\n      this.resolvedLanguage = l;\n      this.languages.unshift(l);\n    }\n  }\n  changeLanguage(lng, callback) {\n    this.isLanguageChangingTo = lng;\n    const deferred = defer();\n    this.emit('languageChanging', lng);\n    const setLngProps = l => {\n      this.language = l;\n      this.languages = this.services.languageUtils.toResolveHierarchy(l);\n      this.resolvedLanguage = undefined;\n      this.setResolvedLanguage(l);\n    };\n    const done = (err, l) => {\n      if (l) {\n        if (this.isLanguageChangingTo === lng) {\n          setLngProps(l);\n          this.translator.changeLanguage(l);\n          this.isLanguageChangingTo = undefined;\n          this.emit('languageChanged', l);\n          this.logger.log('languageChanged', l);\n        }\n      } else {\n        this.isLanguageChangingTo = undefined;\n      }\n      deferred.resolve((...args) => this.t(...args));\n      if (callback) callback(err, (...args) => this.t(...args));\n    };\n    const setLng = lngs => {\n      if (!lng && !lngs && this.services.languageDetector) lngs = [];\n      const fl = isString(lngs) ? lngs : lngs && lngs[0];\n      const l = this.store.hasLanguageSomeTranslations(fl) ? fl : this.services.languageUtils.getBestMatchFromCodes(isString(lngs) ? [lngs] : lngs);\n      if (l) {\n        if (!this.language) {\n          setLngProps(l);\n        }\n        if (!this.translator.language) this.translator.changeLanguage(l);\n        this.services.languageDetector?.cacheUserLanguage?.(l);\n      }\n      this.loadResources(l, err => {\n        done(err, l);\n      });\n    };\n    if (!lng && this.services.languageDetector && !this.services.languageDetector.async) {\n      setLng(this.services.languageDetector.detect());\n    } else if (!lng && this.services.languageDetector && this.services.languageDetector.async) {\n      if (this.services.languageDetector.detect.length === 0) {\n        this.services.languageDetector.detect().then(setLng);\n      } else {\n        this.services.languageDetector.detect(setLng);\n      }\n    } else {\n      setLng(lng);\n    }\n    return deferred;\n  }\n  getFixedT(lng, ns, keyPrefix) {\n    const fixedT = (key, opts, ...rest) => {\n      let o;\n      if (typeof opts !== 'object') {\n        o = this.options.overloadTranslationOptionHandler([key, opts].concat(rest));\n      } else {\n        o = {\n          ...opts\n        };\n      }\n      o.lng = o.lng || fixedT.lng;\n      o.lngs = o.lngs || fixedT.lngs;\n      o.ns = o.ns || fixedT.ns;\n      if (o.keyPrefix !== '') o.keyPrefix = o.keyPrefix || keyPrefix || fixedT.keyPrefix;\n      const keySeparator = this.options.keySeparator || '.';\n      let resultKey;\n      if (o.keyPrefix && Array.isArray(key)) {\n        resultKey = key.map(k => {\n          if (typeof k === 'function') k = keysFromSelector(k, {\n            ...this.options,\n            ...opts\n          });\n          return `${o.keyPrefix}${keySeparator}${k}`;\n        });\n      } else {\n        if (typeof key === 'function') key = keysFromSelector(key, {\n          ...this.options,\n          ...opts\n        });\n        resultKey = o.keyPrefix ? `${o.keyPrefix}${keySeparator}${key}` : key;\n      }\n      return this.t(resultKey, o);\n    };\n    if (isString(lng)) {\n      fixedT.lng = lng;\n    } else {\n      fixedT.lngs = lng;\n    }\n    fixedT.ns = ns;\n    fixedT.keyPrefix = keyPrefix;\n    return fixedT;\n  }\n  t(...args) {\n    return this.translator?.translate(...args);\n  }\n  exists(...args) {\n    return this.translator?.exists(...args);\n  }\n  setDefaultNamespace(ns) {\n    this.options.defaultNS = ns;\n  }\n  hasLoadedNamespace(ns, options = {}) {\n    if (!this.isInitialized) {\n      this.logger.warn('hasLoadedNamespace: i18next was not initialized', this.languages);\n      return false;\n    }\n    if (!this.languages || !this.languages.length) {\n      this.logger.warn('hasLoadedNamespace: i18n.languages were undefined or empty', this.languages);\n      return false;\n    }\n    const lng = options.lng || this.resolvedLanguage || this.languages[0];\n    const fallbackLng = this.options ? this.options.fallbackLng : false;\n    const lastLng = this.languages[this.languages.length - 1];\n    if (lng.toLowerCase() === 'cimode') return true;\n    const loadNotPending = (l, n) => {\n      const loadState = this.services.backendConnector.state[`${l}|${n}`];\n      return loadState === -1 || loadState === 0 || loadState === 2;\n    };\n    if (options.precheck) {\n      const preResult = options.precheck(this, loadNotPending);\n      if (preResult !== undefined) return preResult;\n    }\n    if (this.hasResourceBundle(lng, ns)) return true;\n    if (!this.services.backendConnector.backend || this.options.resources && !this.options.partialBundledLanguages) return true;\n    if (loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns))) return true;\n    return false;\n  }\n  loadNamespaces(ns, callback) {\n    const deferred = defer();\n    if (!this.options.ns) {\n      if (callback) callback();\n      return Promise.resolve();\n    }\n    if (isString(ns)) ns = [ns];\n    ns.forEach(n => {\n      if (this.options.ns.indexOf(n) < 0) this.options.ns.push(n);\n    });\n    this.loadResources(err => {\n      deferred.resolve();\n      if (callback) callback(err);\n    });\n    return deferred;\n  }\n  loadLanguages(lngs, callback) {\n    const deferred = defer();\n    if (isString(lngs)) lngs = [lngs];\n    const preloaded = this.options.preload || [];\n    const newLngs = lngs.filter(lng => preloaded.indexOf(lng) < 0 && this.services.languageUtils.isSupportedCode(lng));\n    if (!newLngs.length) {\n      if (callback) callback();\n      return Promise.resolve();\n    }\n    this.options.preload = preloaded.concat(newLngs);\n    this.loadResources(err => {\n      deferred.resolve();\n      if (callback) callback(err);\n    });\n    return deferred;\n  }\n  dir(lng) {\n    if (!lng) lng = this.resolvedLanguage || (this.languages?.length > 0 ? this.languages[0] : this.language);\n    if (!lng) return 'rtl';\n    try {\n      const l = new Intl.Locale(lng);\n      if (l && l.getTextInfo) {\n        const ti = l.getTextInfo();\n        if (ti && ti.direction) return ti.direction;\n      }\n    } catch (e) {}\n    const rtlLngs = ['ar', 'shu', 'sqr', 'ssh', 'xaa', 'yhd', 'yud', 'aao', 'abh', 'abv', 'acm', 'acq', 'acw', 'acx', 'acy', 'adf', 'ads', 'aeb', 'aec', 'afb', 'ajp', 'apc', 'apd', 'arb', 'arq', 'ars', 'ary', 'arz', 'auz', 'avl', 'ayh', 'ayl', 'ayn', 'ayp', 'bbz', 'pga', 'he', 'iw', 'ps', 'pbt', 'pbu', 'pst', 'prp', 'prd', 'ug', 'ur', 'ydd', 'yds', 'yih', 'ji', 'yi', 'hbo', 'men', 'xmn', 'fa', 'jpr', 'peo', 'pes', 'prs', 'dv', 'sam', 'ckb'];\n    const languageUtils = this.services?.languageUtils || new LanguageUtil(get());\n    if (lng.toLowerCase().indexOf('-latn') > 1) return 'ltr';\n    return rtlLngs.indexOf(languageUtils.getLanguagePartFromCode(lng)) > -1 || lng.toLowerCase().indexOf('-arab') > 1 ? 'rtl' : 'ltr';\n  }\n  static createInstance(options = {}, callback) {\n    return new I18n(options, callback);\n  }\n  cloneInstance(options = {}, callback = noop) {\n    const forkResourceStore = options.forkResourceStore;\n    if (forkResourceStore) delete options.forkResourceStore;\n    const mergedOptions = {\n      ...this.options,\n      ...options,\n      ...{\n        isClone: true\n      }\n    };\n    const clone = new I18n(mergedOptions);\n    if (options.debug !== undefined || options.prefix !== undefined) {\n      clone.logger = clone.logger.clone(options);\n    }\n    const membersToCopy = ['store', 'services', 'language'];\n    membersToCopy.forEach(m => {\n      clone[m] = this[m];\n    });\n    clone.services = {\n      ...this.services\n    };\n    clone.services.utils = {\n      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n    };\n    if (forkResourceStore) {\n      const clonedData = Object.keys(this.store.data).reduce((prev, l) => {\n        prev[l] = {\n          ...this.store.data[l]\n        };\n        prev[l] = Object.keys(prev[l]).reduce((acc, n) => {\n          acc[n] = {\n            ...prev[l][n]\n          };\n          return acc;\n        }, prev[l]);\n        return prev;\n      }, {});\n      clone.store = new ResourceStore(clonedData, mergedOptions);\n      clone.services.resourceStore = clone.store;\n    }\n    clone.translator = new Translator(clone.services, mergedOptions);\n    clone.translator.on('*', (event, ...args) => {\n      clone.emit(event, ...args);\n    });\n    clone.init(mergedOptions, callback);\n    clone.translator.options = mergedOptions;\n    clone.translator.backendConnector.services.utils = {\n      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n    };\n    return clone;\n  }\n  toJSON() {\n    return {\n      options: this.options,\n      store: this.store,\n      language: this.language,\n      languages: this.languages,\n      resolvedLanguage: this.resolvedLanguage\n    };\n  }\n}\nconst instance = I18n.createInstance();\ninstance.createInstance = I18n.createInstance;\n\nconst createInstance = instance.createInstance;\nconst dir = instance.dir;\nconst init = instance.init;\nconst loadResources = instance.loadResources;\nconst reloadResources = instance.reloadResources;\nconst use = instance.use;\nconst changeLanguage = instance.changeLanguage;\nconst getFixedT = instance.getFixedT;\nconst t = instance.t;\nconst exists = instance.exists;\nconst setDefaultNamespace = instance.setDefaultNamespace;\nconst hasLoadedNamespace = instance.hasLoadedNamespace;\nconst loadNamespaces = instance.loadNamespaces;\nconst loadLanguages = instance.loadLanguages;\n\nexport { changeLanguage, createInstance, instance as default, dir, exists, getFixedT, hasLoadedNamespace, init, keysFromSelector as keyFromSelector, loadLanguages, loadNamespaces, loadResources, reloadResources, setDefaultNamespace, t, use };\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,GAAG,IAAI,OAAOA,GAAG,KAAK,QAAQ;AAC/C,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAClB,IAAIC,GAAG;EACP,IAAIC,GAAG;EACP,MAAMC,OAAO,GAAG,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;IAC/CL,GAAG,GAAGI,OAAO;IACbH,GAAG,GAAGI,MAAM;EACd,CAAC,CAAC;EACFH,OAAO,CAACE,OAAO,GAAGJ,GAAG;EACrBE,OAAO,CAACG,MAAM,GAAGJ,GAAG;EACpB,OAAOC,OAAO;AAChB,CAAC;AACD,MAAMI,UAAU,GAAGC,MAAM,IAAI;EAC3B,IAAIA,MAAM,IAAI,IAAI,EAAE,OAAO,EAAE;EAC7B,OAAO,EAAE,GAAGA,MAAM;AACpB,CAAC;AACD,MAAMC,IAAI,GAAGA,CAACC,CAAC,EAAEC,CAAC,EAAEC,CAAC,KAAK;EACxBF,CAAC,CAACG,OAAO,CAACC,CAAC,IAAI;IACb,IAAIH,CAAC,CAACG,CAAC,CAAC,EAAEF,CAAC,CAACE,CAAC,CAAC,GAAGH,CAAC,CAACG,CAAC,CAAC;EACvB,CAAC,CAAC;AACJ,CAAC;AACD,MAAMC,yBAAyB,GAAG,MAAM;AACxC,MAAMC,QAAQ,GAAGC,GAAG,IAAIA,GAAG,IAAIA,GAAG,CAACC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAGD,GAAG,CAACE,OAAO,CAACJ,yBAAyB,EAAE,GAAG,CAAC,GAAGE,GAAG;AAC1G,MAAMG,oBAAoB,GAAGZ,MAAM,IAAI,CAACA,MAAM,IAAIV,QAAQ,CAACU,MAAM,CAAC;AAClE,MAAMa,aAAa,GAAGA,CAACb,MAAM,EAAEc,IAAI,EAAEC,KAAK,KAAK;EAC7C,MAAMC,KAAK,GAAG,CAAC1B,QAAQ,CAACwB,IAAI,CAAC,GAAGA,IAAI,GAAGA,IAAI,CAACG,KAAK,CAAC,GAAG,CAAC;EACtD,IAAIC,UAAU,GAAG,CAAC;EAClB,OAAOA,UAAU,GAAGF,KAAK,CAACG,MAAM,GAAG,CAAC,EAAE;IACpC,IAAIP,oBAAoB,CAACZ,MAAM,CAAC,EAAE,OAAO,CAAC,CAAC;IAC3C,MAAMS,GAAG,GAAGD,QAAQ,CAACQ,KAAK,CAACE,UAAU,CAAC,CAAC;IACvC,IAAI,CAAClB,MAAM,CAACS,GAAG,CAAC,IAAIM,KAAK,EAAEf,MAAM,CAACS,GAAG,CAAC,GAAG,IAAIM,KAAK,CAAC,CAAC;IACpD,IAAIK,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACvB,MAAM,EAAES,GAAG,CAAC,EAAE;MACrDT,MAAM,GAAGA,MAAM,CAACS,GAAG,CAAC;IACtB,CAAC,MAAM;MACLT,MAAM,GAAG,CAAC,CAAC;IACb;IACA,EAAEkB,UAAU;EACd;EACA,IAAIN,oBAAoB,CAACZ,MAAM,CAAC,EAAE,OAAO,CAAC,CAAC;EAC3C,OAAO;IACLT,GAAG,EAAES,MAAM;IACXwB,CAAC,EAAEhB,QAAQ,CAACQ,KAAK,CAACE,UAAU,CAAC;EAC/B,CAAC;AACH,CAAC;AACD,MAAMO,OAAO,GAAGA,CAACzB,MAAM,EAAEc,IAAI,EAAEY,QAAQ,KAAK;EAC1C,MAAM;IACJnC,GAAG;IACHiC;EACF,CAAC,GAAGX,aAAa,CAACb,MAAM,EAAEc,IAAI,EAAEM,MAAM,CAAC;EACvC,IAAI7B,GAAG,KAAKoC,SAAS,IAAIb,IAAI,CAACK,MAAM,KAAK,CAAC,EAAE;IAC1C5B,GAAG,CAACiC,CAAC,CAAC,GAAGE,QAAQ;IACjB;EACF;EACA,IAAIE,CAAC,GAAGd,IAAI,CAACA,IAAI,CAACK,MAAM,GAAG,CAAC,CAAC;EAC7B,IAAIU,CAAC,GAAGf,IAAI,CAACgB,KAAK,CAAC,CAAC,EAAEhB,IAAI,CAACK,MAAM,GAAG,CAAC,CAAC;EACtC,IAAIY,IAAI,GAAGlB,aAAa,CAACb,MAAM,EAAE6B,CAAC,EAAET,MAAM,CAAC;EAC3C,OAAOW,IAAI,CAACxC,GAAG,KAAKoC,SAAS,IAAIE,CAAC,CAACV,MAAM,EAAE;IACzCS,CAAC,GAAG,GAAGC,CAAC,CAACA,CAAC,CAACV,MAAM,GAAG,CAAC,CAAC,IAAIS,CAAC,EAAE;IAC7BC,CAAC,GAAGA,CAAC,CAACC,KAAK,CAAC,CAAC,EAAED,CAAC,CAACV,MAAM,GAAG,CAAC,CAAC;IAC5BY,IAAI,GAAGlB,aAAa,CAACb,MAAM,EAAE6B,CAAC,EAAET,MAAM,CAAC;IACvC,IAAIW,IAAI,EAAExC,GAAG,IAAI,OAAOwC,IAAI,CAACxC,GAAG,CAAC,GAAGwC,IAAI,CAACP,CAAC,IAAII,CAAC,EAAE,CAAC,KAAK,WAAW,EAAE;MAClEG,IAAI,CAACxC,GAAG,GAAGoC,SAAS;IACtB;EACF;EACAI,IAAI,CAACxC,GAAG,CAAC,GAAGwC,IAAI,CAACP,CAAC,IAAII,CAAC,EAAE,CAAC,GAAGF,QAAQ;AACvC,CAAC;AACD,MAAMM,QAAQ,GAAGA,CAAChC,MAAM,EAAEc,IAAI,EAAEY,QAAQ,EAAEO,MAAM,KAAK;EACnD,MAAM;IACJ1C,GAAG;IACHiC;EACF,CAAC,GAAGX,aAAa,CAACb,MAAM,EAAEc,IAAI,EAAEM,MAAM,CAAC;EACvC7B,GAAG,CAACiC,CAAC,CAAC,GAAGjC,GAAG,CAACiC,CAAC,CAAC,IAAI,EAAE;EACrBjC,GAAG,CAACiC,CAAC,CAAC,CAACU,IAAI,CAACR,QAAQ,CAAC;AACvB,CAAC;AACD,MAAMS,OAAO,GAAGA,CAACnC,MAAM,EAAEc,IAAI,KAAK;EAChC,MAAM;IACJvB,GAAG;IACHiC;EACF,CAAC,GAAGX,aAAa,CAACb,MAAM,EAAEc,IAAI,CAAC;EAC/B,IAAI,CAACvB,GAAG,EAAE,OAAOoC,SAAS;EAC1B,IAAI,CAACP,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAAChC,GAAG,EAAEiC,CAAC,CAAC,EAAE,OAAOG,SAAS;EACnE,OAAOpC,GAAG,CAACiC,CAAC,CAAC;AACf,CAAC;AACD,MAAMY,mBAAmB,GAAGA,CAACC,IAAI,EAAEC,WAAW,EAAE7B,GAAG,KAAK;EACtD,MAAM8B,KAAK,GAAGJ,OAAO,CAACE,IAAI,EAAE5B,GAAG,CAAC;EAChC,IAAI8B,KAAK,KAAKZ,SAAS,EAAE;IACvB,OAAOY,KAAK;EACd;EACA,OAAOJ,OAAO,CAACG,WAAW,EAAE7B,GAAG,CAAC;AAClC,CAAC;AACD,MAAM+B,UAAU,GAAGA,CAACC,MAAM,EAAEC,MAAM,EAAEC,SAAS,KAAK;EAChD,KAAK,MAAMC,IAAI,IAAIF,MAAM,EAAE;IACzB,IAAIE,IAAI,KAAK,WAAW,IAAIA,IAAI,KAAK,aAAa,EAAE;MAClD,IAAIA,IAAI,IAAIH,MAAM,EAAE;QAClB,IAAInD,QAAQ,CAACmD,MAAM,CAACG,IAAI,CAAC,CAAC,IAAIH,MAAM,CAACG,IAAI,CAAC,YAAYC,MAAM,IAAIvD,QAAQ,CAACoD,MAAM,CAACE,IAAI,CAAC,CAAC,IAAIF,MAAM,CAACE,IAAI,CAAC,YAAYC,MAAM,EAAE;UACxH,IAAIF,SAAS,EAAEF,MAAM,CAACG,IAAI,CAAC,GAAGF,MAAM,CAACE,IAAI,CAAC;QAC5C,CAAC,MAAM;UACLJ,UAAU,CAACC,MAAM,CAACG,IAAI,CAAC,EAAEF,MAAM,CAACE,IAAI,CAAC,EAAED,SAAS,CAAC;QACnD;MACF,CAAC,MAAM;QACLF,MAAM,CAACG,IAAI,CAAC,GAAGF,MAAM,CAACE,IAAI,CAAC;MAC7B;IACF;EACF;EACA,OAAOH,MAAM;AACf,CAAC;AACD,MAAMK,WAAW,GAAGC,GAAG,IAAIA,GAAG,CAACpC,OAAO,CAAC,qCAAqC,EAAE,MAAM,CAAC;AACrF,IAAIqC,UAAU,GAAG;EACf,GAAG,EAAE,OAAO;EACZ,GAAG,EAAE,MAAM;EACX,GAAG,EAAE,MAAM;EACX,GAAG,EAAE,QAAQ;EACb,GAAG,EAAE,OAAO;EACZ,GAAG,EAAE;AACP,CAAC;AACD,MAAMC,MAAM,GAAGZ,IAAI,IAAI;EACrB,IAAI/C,QAAQ,CAAC+C,IAAI,CAAC,EAAE;IAClB,OAAOA,IAAI,CAAC1B,OAAO,CAAC,YAAY,EAAER,CAAC,IAAI6C,UAAU,CAAC7C,CAAC,CAAC,CAAC;EACvD;EACA,OAAOkC,IAAI;AACb,CAAC;AACD,MAAMa,WAAW,CAAC;EAChBC,WAAWA,CAACC,QAAQ,EAAE;IACpB,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACC,SAAS,GAAG,IAAIC,GAAG,CAAC,CAAC;IAC1B,IAAI,CAACC,WAAW,GAAG,EAAE;EACvB;EACAC,SAASA,CAACC,OAAO,EAAE;IACjB,MAAMC,eAAe,GAAG,IAAI,CAACL,SAAS,CAACM,GAAG,CAACF,OAAO,CAAC;IACnD,IAAIC,eAAe,KAAK/B,SAAS,EAAE;MACjC,OAAO+B,eAAe;IACxB;IACA,MAAME,SAAS,GAAG,IAAIC,MAAM,CAACJ,OAAO,CAAC;IACrC,IAAI,IAAI,CAACF,WAAW,CAACpC,MAAM,KAAK,IAAI,CAACiC,QAAQ,EAAE;MAC7C,IAAI,CAACC,SAAS,CAACS,MAAM,CAAC,IAAI,CAACP,WAAW,CAACQ,KAAK,CAAC,CAAC,CAAC;IACjD;IACA,IAAI,CAACV,SAAS,CAACW,GAAG,CAACP,OAAO,EAAEG,SAAS,CAAC;IACtC,IAAI,CAACL,WAAW,CAACrB,IAAI,CAACuB,OAAO,CAAC;IAC9B,OAAOG,SAAS;EAClB;AACF;AACA,MAAMK,KAAK,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;AACvC,MAAMC,8BAA8B,GAAG,IAAIhB,WAAW,CAAC,EAAE,CAAC;AAC1D,MAAMiB,mBAAmB,GAAGA,CAAC1D,GAAG,EAAE2D,WAAW,EAAEC,YAAY,KAAK;EAC9DD,WAAW,GAAGA,WAAW,IAAI,EAAE;EAC/BC,YAAY,GAAGA,YAAY,IAAI,EAAE;EACjC,MAAMC,aAAa,GAAGL,KAAK,CAACM,MAAM,CAACC,CAAC,IAAIJ,WAAW,CAAC1D,OAAO,CAAC8D,CAAC,CAAC,GAAG,CAAC,IAAIH,YAAY,CAAC3D,OAAO,CAAC8D,CAAC,CAAC,GAAG,CAAC,CAAC;EAClG,IAAIF,aAAa,CAACnD,MAAM,KAAK,CAAC,EAAE,OAAO,IAAI;EAC3C,MAAMsD,CAAC,GAAGP,8BAA8B,CAACV,SAAS,CAAC,IAAIc,aAAa,CAACI,GAAG,CAACF,CAAC,IAAIA,CAAC,KAAK,GAAG,GAAG,KAAK,GAAGA,CAAC,CAAC,CAACG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC;EAClH,IAAIC,OAAO,GAAG,CAACH,CAAC,CAACI,IAAI,CAACpE,GAAG,CAAC;EAC1B,IAAI,CAACmE,OAAO,EAAE;IACZ,MAAME,EAAE,GAAGrE,GAAG,CAACC,OAAO,CAAC2D,YAAY,CAAC;IACpC,IAAIS,EAAE,GAAG,CAAC,IAAI,CAACL,CAAC,CAACI,IAAI,CAACpE,GAAG,CAACsE,SAAS,CAAC,CAAC,EAAED,EAAE,CAAC,CAAC,EAAE;MAC3CF,OAAO,GAAG,IAAI;IAChB;EACF;EACA,OAAOA,OAAO;AAChB,CAAC;AACD,MAAMI,QAAQ,GAAGA,CAACzF,GAAG,EAAEuB,IAAI,EAAEuD,YAAY,GAAG,GAAG,KAAK;EAClD,IAAI,CAAC9E,GAAG,EAAE,OAAOoC,SAAS;EAC1B,IAAIpC,GAAG,CAACuB,IAAI,CAAC,EAAE;IACb,IAAI,CAACM,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAAChC,GAAG,EAAEuB,IAAI,CAAC,EAAE,OAAOa,SAAS;IACtE,OAAOpC,GAAG,CAACuB,IAAI,CAAC;EAClB;EACA,MAAMmE,MAAM,GAAGnE,IAAI,CAACG,KAAK,CAACoD,YAAY,CAAC;EACvC,IAAIa,OAAO,GAAG3F,GAAG;EACjB,KAAK,IAAI4F,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,MAAM,CAAC9D,MAAM,GAAG;IAClC,IAAI,CAAC+D,OAAO,IAAI,OAAOA,OAAO,KAAK,QAAQ,EAAE;MAC3C,OAAOvD,SAAS;IAClB;IACA,IAAIyD,IAAI;IACR,IAAIC,QAAQ,GAAG,EAAE;IACjB,KAAK,IAAIC,CAAC,GAAGH,CAAC,EAAEG,CAAC,GAAGL,MAAM,CAAC9D,MAAM,EAAE,EAAEmE,CAAC,EAAE;MACtC,IAAIA,CAAC,KAAKH,CAAC,EAAE;QACXE,QAAQ,IAAIhB,YAAY;MAC1B;MACAgB,QAAQ,IAAIJ,MAAM,CAACK,CAAC,CAAC;MACrBF,IAAI,GAAGF,OAAO,CAACG,QAAQ,CAAC;MACxB,IAAID,IAAI,KAAKzD,SAAS,EAAE;QACtB,IAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,CAAC,CAACjB,OAAO,CAAC,OAAO0E,IAAI,CAAC,GAAG,CAAC,CAAC,IAAIE,CAAC,GAAGL,MAAM,CAAC9D,MAAM,GAAG,CAAC,EAAE;UACtF;QACF;QACAgE,CAAC,IAAIG,CAAC,GAAGH,CAAC,GAAG,CAAC;QACd;MACF;IACF;IACAD,OAAO,GAAGE,IAAI;EAChB;EACA,OAAOF,OAAO;AAChB,CAAC;AACD,MAAMK,cAAc,GAAGC,IAAI,IAAIA,IAAI,EAAE7E,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;AAEtD,MAAM8E,aAAa,GAAG;EACpBC,IAAI,EAAE,QAAQ;EACdC,GAAGA,CAACC,IAAI,EAAE;IACR,IAAI,CAACC,MAAM,CAAC,KAAK,EAAED,IAAI,CAAC;EAC1B,CAAC;EACDE,IAAIA,CAACF,IAAI,EAAE;IACT,IAAI,CAACC,MAAM,CAAC,MAAM,EAAED,IAAI,CAAC;EAC3B,CAAC;EACDG,KAAKA,CAACH,IAAI,EAAE;IACV,IAAI,CAACC,MAAM,CAAC,OAAO,EAAED,IAAI,CAAC;EAC5B,CAAC;EACDC,MAAMA,CAACH,IAAI,EAAEE,IAAI,EAAE;IACjBI,OAAO,GAAGN,IAAI,CAAC,EAAEO,KAAK,GAAGD,OAAO,EAAEJ,IAAI,CAAC;EACzC;AACF,CAAC;AACD,MAAMM,MAAM,CAAC;EACX/C,WAAWA,CAACgD,cAAc,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;IACxC,IAAI,CAACC,IAAI,CAACF,cAAc,EAAEC,OAAO,CAAC;EACpC;EACAC,IAAIA,CAACF,cAAc,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;IACjC,IAAI,CAACE,MAAM,GAAGF,OAAO,CAACE,MAAM,IAAI,UAAU;IAC1C,IAAI,CAACC,MAAM,GAAGJ,cAAc,IAAIV,aAAa;IAC7C,IAAI,CAACW,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACI,KAAK,GAAGJ,OAAO,CAACI,KAAK;EAC5B;EACAb,GAAGA,CAAC,GAAGC,IAAI,EAAE;IACX,OAAO,IAAI,CAACa,OAAO,CAACb,IAAI,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,CAAC;EAC5C;EACAE,IAAIA,CAAC,GAAGF,IAAI,EAAE;IACZ,OAAO,IAAI,CAACa,OAAO,CAACb,IAAI,EAAE,MAAM,EAAE,EAAE,EAAE,IAAI,CAAC;EAC7C;EACAG,KAAKA,CAAC,GAAGH,IAAI,EAAE;IACb,OAAO,IAAI,CAACa,OAAO,CAACb,IAAI,EAAE,OAAO,EAAE,EAAE,CAAC;EACxC;EACAc,SAASA,CAAC,GAAGd,IAAI,EAAE;IACjB,OAAO,IAAI,CAACa,OAAO,CAACb,IAAI,EAAE,MAAM,EAAE,sBAAsB,EAAE,IAAI,CAAC;EACjE;EACAa,OAAOA,CAACb,IAAI,EAAEe,GAAG,EAAEL,MAAM,EAAEM,SAAS,EAAE;IACpC,IAAIA,SAAS,IAAI,CAAC,IAAI,CAACJ,KAAK,EAAE,OAAO,IAAI;IACzC,IAAIlH,QAAQ,CAACsG,IAAI,CAAC,CAAC,CAAC,CAAC,EAAEA,IAAI,CAAC,CAAC,CAAC,GAAG,GAAGU,MAAM,GAAG,IAAI,CAACA,MAAM,IAAIV,IAAI,CAAC,CAAC,CAAC,EAAE;IACrE,OAAO,IAAI,CAACW,MAAM,CAACI,GAAG,CAAC,CAACf,IAAI,CAAC;EAC/B;EACAiB,MAAMA,CAACC,UAAU,EAAE;IACjB,OAAO,IAAIZ,MAAM,CAAC,IAAI,CAACK,MAAM,EAAE;MAC7B,GAAG;QACDD,MAAM,EAAE,GAAG,IAAI,CAACA,MAAM,IAAIQ,UAAU;MACtC,CAAC;MACD,GAAG,IAAI,CAACV;IACV,CAAC,CAAC;EACJ;EACAW,KAAKA,CAACX,OAAO,EAAE;IACbA,OAAO,GAAGA,OAAO,IAAI,IAAI,CAACA,OAAO;IACjCA,OAAO,CAACE,MAAM,GAAGF,OAAO,CAACE,MAAM,IAAI,IAAI,CAACA,MAAM;IAC9C,OAAO,IAAIJ,MAAM,CAAC,IAAI,CAACK,MAAM,EAAEH,OAAO,CAAC;EACzC;AACF;AACA,IAAIY,UAAU,GAAG,IAAId,MAAM,CAAC,CAAC;AAE7B,MAAMe,YAAY,CAAC;EACjB9D,WAAWA,CAAA,EAAG;IACZ,IAAI,CAAC+D,SAAS,GAAG,CAAC,CAAC;EACrB;EACAC,EAAEA,CAACC,MAAM,EAAEC,QAAQ,EAAE;IACnBD,MAAM,CAACnG,KAAK,CAAC,GAAG,CAAC,CAACZ,OAAO,CAACiH,KAAK,IAAI;MACjC,IAAI,CAAC,IAAI,CAACJ,SAAS,CAACI,KAAK,CAAC,EAAE,IAAI,CAACJ,SAAS,CAACI,KAAK,CAAC,GAAG,IAAIhE,GAAG,CAAC,CAAC;MAC7D,MAAMiE,YAAY,GAAG,IAAI,CAACL,SAAS,CAACI,KAAK,CAAC,CAAC3D,GAAG,CAAC0D,QAAQ,CAAC,IAAI,CAAC;MAC7D,IAAI,CAACH,SAAS,CAACI,KAAK,CAAC,CAACtD,GAAG,CAACqD,QAAQ,EAAEE,YAAY,GAAG,CAAC,CAAC;IACvD,CAAC,CAAC;IACF,OAAO,IAAI;EACb;EACAC,GAAGA,CAACF,KAAK,EAAED,QAAQ,EAAE;IACnB,IAAI,CAAC,IAAI,CAACH,SAAS,CAACI,KAAK,CAAC,EAAE;IAC5B,IAAI,CAACD,QAAQ,EAAE;MACb,OAAO,IAAI,CAACH,SAAS,CAACI,KAAK,CAAC;MAC5B;IACF;IACA,IAAI,CAACJ,SAAS,CAACI,KAAK,CAAC,CAACxD,MAAM,CAACuD,QAAQ,CAAC;EACxC;EACAI,IAAIA,CAACH,KAAK,EAAE,GAAG1B,IAAI,EAAE;IACnB,IAAI,IAAI,CAACsB,SAAS,CAACI,KAAK,CAAC,EAAE;MACzB,MAAMI,MAAM,GAAGC,KAAK,CAACC,IAAI,CAAC,IAAI,CAACV,SAAS,CAACI,KAAK,CAAC,CAACO,OAAO,CAAC,CAAC,CAAC;MAC1DH,MAAM,CAACrH,OAAO,CAAC,CAAC,CAACyH,QAAQ,EAAEC,aAAa,CAAC,KAAK;QAC5C,KAAK,IAAI5C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4C,aAAa,EAAE5C,CAAC,EAAE,EAAE;UACtC2C,QAAQ,CAAC,GAAGlC,IAAI,CAAC;QACnB;MACF,CAAC,CAAC;IACJ;IACA,IAAI,IAAI,CAACsB,SAAS,CAAC,GAAG,CAAC,EAAE;MACvB,MAAMQ,MAAM,GAAGC,KAAK,CAACC,IAAI,CAAC,IAAI,CAACV,SAAS,CAAC,GAAG,CAAC,CAACW,OAAO,CAAC,CAAC,CAAC;MACxDH,MAAM,CAACrH,OAAO,CAAC,CAAC,CAACyH,QAAQ,EAAEC,aAAa,CAAC,KAAK;QAC5C,KAAK,IAAI5C,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG4C,aAAa,EAAE5C,CAAC,EAAE,EAAE;UACtC2C,QAAQ,CAAC7B,KAAK,CAAC6B,QAAQ,EAAE,CAACR,KAAK,EAAE,GAAG1B,IAAI,CAAC,CAAC;QAC5C;MACF,CAAC,CAAC;IACJ;EACF;AACF;AAEA,MAAMoC,aAAa,SAASf,YAAY,CAAC;EACvC9D,WAAWA,CAACd,IAAI,EAAE+D,OAAO,GAAG;IAC1B6B,EAAE,EAAE,CAAC,aAAa,CAAC;IACnBC,SAAS,EAAE;EACb,CAAC,EAAE;IACD,KAAK,CAAC,CAAC;IACP,IAAI,CAAC7F,IAAI,GAAGA,IAAI,IAAI,CAAC,CAAC;IACtB,IAAI,CAAC+D,OAAO,GAAGA,OAAO;IACtB,IAAI,IAAI,CAACA,OAAO,CAAC/B,YAAY,KAAK1C,SAAS,EAAE;MAC3C,IAAI,CAACyE,OAAO,CAAC/B,YAAY,GAAG,GAAG;IACjC;IACA,IAAI,IAAI,CAAC+B,OAAO,CAAC+B,mBAAmB,KAAKxG,SAAS,EAAE;MAClD,IAAI,CAACyE,OAAO,CAAC+B,mBAAmB,GAAG,IAAI;IACzC;EACF;EACAC,aAAaA,CAACH,EAAE,EAAE;IAChB,IAAI,IAAI,CAAC7B,OAAO,CAAC6B,EAAE,CAACvH,OAAO,CAACuH,EAAE,CAAC,GAAG,CAAC,EAAE;MACnC,IAAI,CAAC7B,OAAO,CAAC6B,EAAE,CAAC/F,IAAI,CAAC+F,EAAE,CAAC;IAC1B;EACF;EACAI,gBAAgBA,CAACJ,EAAE,EAAE;IACnB,MAAMK,KAAK,GAAG,IAAI,CAAClC,OAAO,CAAC6B,EAAE,CAACvH,OAAO,CAACuH,EAAE,CAAC;IACzC,IAAIK,KAAK,GAAG,CAAC,CAAC,EAAE;MACd,IAAI,CAAClC,OAAO,CAAC6B,EAAE,CAACM,MAAM,CAACD,KAAK,EAAE,CAAC,CAAC;IAClC;EACF;EACAE,WAAWA,CAACC,GAAG,EAAER,EAAE,EAAExH,GAAG,EAAE2F,OAAO,GAAG,CAAC,CAAC,EAAE;IACtC,MAAM/B,YAAY,GAAG+B,OAAO,CAAC/B,YAAY,KAAK1C,SAAS,GAAGyE,OAAO,CAAC/B,YAAY,GAAG,IAAI,CAAC+B,OAAO,CAAC/B,YAAY;IAC1G,MAAM8D,mBAAmB,GAAG/B,OAAO,CAAC+B,mBAAmB,KAAKxG,SAAS,GAAGyE,OAAO,CAAC+B,mBAAmB,GAAG,IAAI,CAAC/B,OAAO,CAAC+B,mBAAmB;IACtI,IAAIrH,IAAI;IACR,IAAI2H,GAAG,CAAC/H,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;MACzBI,IAAI,GAAG2H,GAAG,CAACxH,KAAK,CAAC,GAAG,CAAC;IACvB,CAAC,MAAM;MACLH,IAAI,GAAG,CAAC2H,GAAG,EAAER,EAAE,CAAC;MAChB,IAAIxH,GAAG,EAAE;QACP,IAAIkH,KAAK,CAACe,OAAO,CAACjI,GAAG,CAAC,EAAE;UACtBK,IAAI,CAACoB,IAAI,CAAC,GAAGzB,GAAG,CAAC;QACnB,CAAC,MAAM,IAAInB,QAAQ,CAACmB,GAAG,CAAC,IAAI4D,YAAY,EAAE;UACxCvD,IAAI,CAACoB,IAAI,CAAC,GAAGzB,GAAG,CAACQ,KAAK,CAACoD,YAAY,CAAC,CAAC;QACvC,CAAC,MAAM;UACLvD,IAAI,CAACoB,IAAI,CAACzB,GAAG,CAAC;QAChB;MACF;IACF;IACA,MAAMkI,MAAM,GAAGxG,OAAO,CAAC,IAAI,CAACE,IAAI,EAAEvB,IAAI,CAAC;IACvC,IAAI,CAAC6H,MAAM,IAAI,CAACV,EAAE,IAAI,CAACxH,GAAG,IAAIgI,GAAG,CAAC/H,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;MACnD+H,GAAG,GAAG3H,IAAI,CAAC,CAAC,CAAC;MACbmH,EAAE,GAAGnH,IAAI,CAAC,CAAC,CAAC;MACZL,GAAG,GAAGK,IAAI,CAACgB,KAAK,CAAC,CAAC,CAAC,CAAC6C,IAAI,CAAC,GAAG,CAAC;IAC/B;IACA,IAAIgE,MAAM,IAAI,CAACR,mBAAmB,IAAI,CAAC7I,QAAQ,CAACmB,GAAG,CAAC,EAAE,OAAOkI,MAAM;IACnE,OAAO3D,QAAQ,CAAC,IAAI,CAAC3C,IAAI,GAAGoG,GAAG,CAAC,GAAGR,EAAE,CAAC,EAAExH,GAAG,EAAE4D,YAAY,CAAC;EAC5D;EACAuE,WAAWA,CAACH,GAAG,EAAER,EAAE,EAAExH,GAAG,EAAE8B,KAAK,EAAE6D,OAAO,GAAG;IACzCyC,MAAM,EAAE;EACV,CAAC,EAAE;IACD,MAAMxE,YAAY,GAAG+B,OAAO,CAAC/B,YAAY,KAAK1C,SAAS,GAAGyE,OAAO,CAAC/B,YAAY,GAAG,IAAI,CAAC+B,OAAO,CAAC/B,YAAY;IAC1G,IAAIvD,IAAI,GAAG,CAAC2H,GAAG,EAAER,EAAE,CAAC;IACpB,IAAIxH,GAAG,EAAEK,IAAI,GAAGA,IAAI,CAACmB,MAAM,CAACoC,YAAY,GAAG5D,GAAG,CAACQ,KAAK,CAACoD,YAAY,CAAC,GAAG5D,GAAG,CAAC;IACzE,IAAIgI,GAAG,CAAC/H,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;MACzBI,IAAI,GAAG2H,GAAG,CAACxH,KAAK,CAAC,GAAG,CAAC;MACrBsB,KAAK,GAAG0F,EAAE;MACVA,EAAE,GAAGnH,IAAI,CAAC,CAAC,CAAC;IACd;IACA,IAAI,CAACsH,aAAa,CAACH,EAAE,CAAC;IACtBxG,OAAO,CAAC,IAAI,CAACY,IAAI,EAAEvB,IAAI,EAAEyB,KAAK,CAAC;IAC/B,IAAI,CAAC6D,OAAO,CAACyC,MAAM,EAAE,IAAI,CAACpB,IAAI,CAAC,OAAO,EAAEgB,GAAG,EAAER,EAAE,EAAExH,GAAG,EAAE8B,KAAK,CAAC;EAC9D;EACAuG,YAAYA,CAACL,GAAG,EAAER,EAAE,EAAEc,SAAS,EAAE3C,OAAO,GAAG;IACzCyC,MAAM,EAAE;EACV,CAAC,EAAE;IACD,KAAK,MAAMvI,CAAC,IAAIyI,SAAS,EAAE;MACzB,IAAIzJ,QAAQ,CAACyJ,SAAS,CAACzI,CAAC,CAAC,CAAC,IAAIqH,KAAK,CAACe,OAAO,CAACK,SAAS,CAACzI,CAAC,CAAC,CAAC,EAAE,IAAI,CAACsI,WAAW,CAACH,GAAG,EAAER,EAAE,EAAE3H,CAAC,EAAEyI,SAAS,CAACzI,CAAC,CAAC,EAAE;QACpGuI,MAAM,EAAE;MACV,CAAC,CAAC;IACJ;IACA,IAAI,CAACzC,OAAO,CAACyC,MAAM,EAAE,IAAI,CAACpB,IAAI,CAAC,OAAO,EAAEgB,GAAG,EAAER,EAAE,EAAEc,SAAS,CAAC;EAC7D;EACAC,iBAAiBA,CAACP,GAAG,EAAER,EAAE,EAAEc,SAAS,EAAEE,IAAI,EAAEtG,SAAS,EAAEyD,OAAO,GAAG;IAC/DyC,MAAM,EAAE,KAAK;IACbK,QAAQ,EAAE;EACZ,CAAC,EAAE;IACD,IAAIpI,IAAI,GAAG,CAAC2H,GAAG,EAAER,EAAE,CAAC;IACpB,IAAIQ,GAAG,CAAC/H,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;MACzBI,IAAI,GAAG2H,GAAG,CAACxH,KAAK,CAAC,GAAG,CAAC;MACrBgI,IAAI,GAAGF,SAAS;MAChBA,SAAS,GAAGd,EAAE;MACdA,EAAE,GAAGnH,IAAI,CAAC,CAAC,CAAC;IACd;IACA,IAAI,CAACsH,aAAa,CAACH,EAAE,CAAC;IACtB,IAAIkB,IAAI,GAAGhH,OAAO,CAAC,IAAI,CAACE,IAAI,EAAEvB,IAAI,CAAC,IAAI,CAAC,CAAC;IACzC,IAAI,CAACsF,OAAO,CAAC8C,QAAQ,EAAEH,SAAS,GAAGK,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACP,SAAS,CAAC,CAAC;IACxE,IAAIE,IAAI,EAAE;MACRzG,UAAU,CAAC2G,IAAI,EAAEJ,SAAS,EAAEpG,SAAS,CAAC;IACxC,CAAC,MAAM;MACLwG,IAAI,GAAG;QACL,GAAGA,IAAI;QACP,GAAGJ;MACL,CAAC;IACH;IACAtH,OAAO,CAAC,IAAI,CAACY,IAAI,EAAEvB,IAAI,EAAEqI,IAAI,CAAC;IAC9B,IAAI,CAAC/C,OAAO,CAACyC,MAAM,EAAE,IAAI,CAACpB,IAAI,CAAC,OAAO,EAAEgB,GAAG,EAAER,EAAE,EAAEc,SAAS,CAAC;EAC7D;EACAQ,oBAAoBA,CAACd,GAAG,EAAER,EAAE,EAAE;IAC5B,IAAI,IAAI,CAACuB,iBAAiB,CAACf,GAAG,EAAER,EAAE,CAAC,EAAE;MACnC,OAAO,IAAI,CAAC5F,IAAI,CAACoG,GAAG,CAAC,CAACR,EAAE,CAAC;IAC3B;IACA,IAAI,CAACI,gBAAgB,CAACJ,EAAE,CAAC;IACzB,IAAI,CAACR,IAAI,CAAC,SAAS,EAAEgB,GAAG,EAAER,EAAE,CAAC;EAC/B;EACAuB,iBAAiBA,CAACf,GAAG,EAAER,EAAE,EAAE;IACzB,OAAO,IAAI,CAACO,WAAW,CAACC,GAAG,EAAER,EAAE,CAAC,KAAKtG,SAAS;EAChD;EACA8H,iBAAiBA,CAAChB,GAAG,EAAER,EAAE,EAAE;IACzB,IAAI,CAACA,EAAE,EAAEA,EAAE,GAAG,IAAI,CAAC7B,OAAO,CAAC8B,SAAS;IACpC,OAAO,IAAI,CAACM,WAAW,CAACC,GAAG,EAAER,EAAE,CAAC;EAClC;EACAyB,iBAAiBA,CAACjB,GAAG,EAAE;IACrB,OAAO,IAAI,CAACpG,IAAI,CAACoG,GAAG,CAAC;EACvB;EACAkB,2BAA2BA,CAAClB,GAAG,EAAE;IAC/B,MAAMpG,IAAI,GAAG,IAAI,CAACqH,iBAAiB,CAACjB,GAAG,CAAC;IACxC,MAAMmB,CAAC,GAAGvH,IAAI,IAAIjB,MAAM,CAACyI,IAAI,CAACxH,IAAI,CAAC,IAAI,EAAE;IACzC,OAAO,CAAC,CAACuH,CAAC,CAACE,IAAI,CAACC,CAAC,IAAI1H,IAAI,CAAC0H,CAAC,CAAC,IAAI3I,MAAM,CAACyI,IAAI,CAACxH,IAAI,CAAC0H,CAAC,CAAC,CAAC,CAAC5I,MAAM,GAAG,CAAC,CAAC;EAClE;EACA6I,MAAMA,CAAA,EAAG;IACP,OAAO,IAAI,CAAC3H,IAAI;EAClB;AACF;AAEA,IAAI4H,aAAa,GAAG;EAClBC,UAAU,EAAE,CAAC,CAAC;EACdC,gBAAgBA,CAACC,MAAM,EAAE;IACvB,IAAI,CAACF,UAAU,CAACE,MAAM,CAACC,IAAI,CAAC,GAAGD,MAAM;EACvC,CAAC;EACDE,MAAMA,CAACJ,UAAU,EAAE3H,KAAK,EAAE9B,GAAG,EAAE2F,OAAO,EAAEmE,UAAU,EAAE;IAClDL,UAAU,CAAC7J,OAAO,CAACmK,SAAS,IAAI;MAC9BjI,KAAK,GAAG,IAAI,CAAC2H,UAAU,CAACM,SAAS,CAAC,EAAEC,OAAO,CAAClI,KAAK,EAAE9B,GAAG,EAAE2F,OAAO,EAAEmE,UAAU,CAAC,IAAIhI,KAAK;IACvF,CAAC,CAAC;IACF,OAAOA,KAAK;EACd;AACF,CAAC;AAED,MAAMmI,QAAQ,GAAGC,MAAM,CAAC,kBAAkB,CAAC;AAC3C,SAASC,WAAWA,CAAA,EAAG;EACrB,MAAMC,KAAK,GAAG,EAAE;EAChB,MAAMC,OAAO,GAAG1J,MAAM,CAACyF,MAAM,CAAC,IAAI,CAAC;EACnC,IAAIkE,KAAK;EACTD,OAAO,CAACnH,GAAG,GAAG,CAAClB,MAAM,EAAEhC,GAAG,KAAK;IAC7BsK,KAAK,EAAEC,MAAM,GAAG,CAAC;IACjB,IAAIvK,GAAG,KAAKiK,QAAQ,EAAE,OAAOG,KAAK;IAClCA,KAAK,CAAC3I,IAAI,CAACzB,GAAG,CAAC;IACfsK,KAAK,GAAGE,KAAK,CAACC,SAAS,CAACzI,MAAM,EAAEqI,OAAO,CAAC;IACxC,OAAOC,KAAK,CAACA,KAAK;EACpB,CAAC;EACD,OAAOE,KAAK,CAACC,SAAS,CAAC9J,MAAM,CAACyF,MAAM,CAAC,IAAI,CAAC,EAAEiE,OAAO,CAAC,CAACC,KAAK;AAC5D;AACA,SAASI,gBAAgBA,CAACC,QAAQ,EAAEC,IAAI,EAAE;EACxC,MAAM;IACJ,CAACX,QAAQ,GAAG5J;EACd,CAAC,GAAGsK,QAAQ,CAACR,WAAW,CAAC,CAAC,CAAC;EAC3B,OAAO9J,IAAI,CAAC6D,IAAI,CAAC0G,IAAI,EAAEhH,YAAY,IAAI,GAAG,CAAC;AAC7C;AAEA,MAAMiH,gBAAgB,GAAG,CAAC,CAAC;AAC3B,MAAMC,oBAAoB,GAAG9L,GAAG,IAAI,CAACH,QAAQ,CAACG,GAAG,CAAC,IAAI,OAAOA,GAAG,KAAK,SAAS,IAAI,OAAOA,GAAG,KAAK,QAAQ;AACzG,MAAM+L,UAAU,SAASvE,YAAY,CAAC;EACpC9D,WAAWA,CAACsI,QAAQ,EAAErF,OAAO,GAAG,CAAC,CAAC,EAAE;IAClC,KAAK,CAAC,CAAC;IACPnG,IAAI,CAAC,CAAC,eAAe,EAAE,eAAe,EAAE,gBAAgB,EAAE,cAAc,EAAE,kBAAkB,EAAE,YAAY,EAAE,OAAO,CAAC,EAAEwL,QAAQ,EAAE,IAAI,CAAC;IACrI,IAAI,CAACrF,OAAO,GAAGA,OAAO;IACtB,IAAI,IAAI,CAACA,OAAO,CAAC/B,YAAY,KAAK1C,SAAS,EAAE;MAC3C,IAAI,CAACyE,OAAO,CAAC/B,YAAY,GAAG,GAAG;IACjC;IACA,IAAI,CAACkC,MAAM,GAAGS,UAAU,CAACH,MAAM,CAAC,YAAY,CAAC;EAC/C;EACA6E,cAAcA,CAACjD,GAAG,EAAE;IAClB,IAAIA,GAAG,EAAE,IAAI,CAACkD,QAAQ,GAAGlD,GAAG;EAC9B;EACAmD,MAAMA,CAACnL,GAAG,EAAEoL,CAAC,GAAG;IACdC,aAAa,EAAE,CAAC;EAClB,CAAC,EAAE;IACD,MAAMC,GAAG,GAAG;MACV,GAAGF;IACL,CAAC;IACD,IAAIpL,GAAG,IAAI,IAAI,EAAE,OAAO,KAAK;IAC7B,MAAMuL,QAAQ,GAAG,IAAI,CAACnM,OAAO,CAACY,GAAG,EAAEsL,GAAG,CAAC;IACvC,IAAIC,QAAQ,EAAEvM,GAAG,KAAKkC,SAAS,EAAE,OAAO,KAAK;IAC7C,MAAMsK,QAAQ,GAAGV,oBAAoB,CAACS,QAAQ,CAACvM,GAAG,CAAC;IACnD,IAAIsM,GAAG,CAACG,aAAa,KAAK,KAAK,IAAID,QAAQ,EAAE;MAC3C,OAAO,KAAK;IACd;IACA,OAAO,IAAI;EACb;EACAE,cAAcA,CAAC1L,GAAG,EAAEsL,GAAG,EAAE;IACvB,IAAI3H,WAAW,GAAG2H,GAAG,CAAC3H,WAAW,KAAKzC,SAAS,GAAGoK,GAAG,CAAC3H,WAAW,GAAG,IAAI,CAACgC,OAAO,CAAChC,WAAW;IAC5F,IAAIA,WAAW,KAAKzC,SAAS,EAAEyC,WAAW,GAAG,GAAG;IAChD,MAAMC,YAAY,GAAG0H,GAAG,CAAC1H,YAAY,KAAK1C,SAAS,GAAGoK,GAAG,CAAC1H,YAAY,GAAG,IAAI,CAAC+B,OAAO,CAAC/B,YAAY;IAClG,IAAI+H,UAAU,GAAGL,GAAG,CAAC9D,EAAE,IAAI,IAAI,CAAC7B,OAAO,CAAC8B,SAAS,IAAI,EAAE;IACvD,MAAMmE,oBAAoB,GAAGjI,WAAW,IAAI3D,GAAG,CAACC,OAAO,CAAC0D,WAAW,CAAC,GAAG,CAAC,CAAC;IACzE,MAAMkI,oBAAoB,GAAG,CAAC,IAAI,CAAClG,OAAO,CAACmG,uBAAuB,IAAI,CAACR,GAAG,CAAC1H,YAAY,IAAI,CAAC,IAAI,CAAC+B,OAAO,CAACoG,sBAAsB,IAAI,CAACT,GAAG,CAAC3H,WAAW,IAAI,CAACD,mBAAmB,CAAC1D,GAAG,EAAE2D,WAAW,EAAEC,YAAY,CAAC;IAC3M,IAAIgI,oBAAoB,IAAI,CAACC,oBAAoB,EAAE;MACjD,MAAMhM,CAAC,GAAGG,GAAG,CAACgM,KAAK,CAAC,IAAI,CAACC,YAAY,CAACC,aAAa,CAAC;MACpD,IAAIrM,CAAC,IAAIA,CAAC,CAACa,MAAM,GAAG,CAAC,EAAE;QACrB,OAAO;UACLV,GAAG;UACH2L,UAAU,EAAE9M,QAAQ,CAAC8M,UAAU,CAAC,GAAG,CAACA,UAAU,CAAC,GAAGA;QACpD,CAAC;MACH;MACA,MAAMQ,KAAK,GAAGnM,GAAG,CAACQ,KAAK,CAACmD,WAAW,CAAC;MACpC,IAAIA,WAAW,KAAKC,YAAY,IAAID,WAAW,KAAKC,YAAY,IAAI,IAAI,CAAC+B,OAAO,CAAC6B,EAAE,CAACvH,OAAO,CAACkM,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAER,UAAU,GAAGQ,KAAK,CAAC7I,KAAK,CAAC,CAAC;MACtItD,GAAG,GAAGmM,KAAK,CAACjI,IAAI,CAACN,YAAY,CAAC;IAChC;IACA,OAAO;MACL5D,GAAG;MACH2L,UAAU,EAAE9M,QAAQ,CAAC8M,UAAU,CAAC,GAAG,CAACA,UAAU,CAAC,GAAGA;IACpD,CAAC;EACH;EACAS,SAASA,CAAChD,IAAI,EAAEgC,CAAC,EAAEiB,OAAO,EAAE;IAC1B,IAAIf,GAAG,GAAG,OAAOF,CAAC,KAAK,QAAQ,GAAG;MAChC,GAAGA;IACL,CAAC,GAAGA,CAAC;IACL,IAAI,OAAOE,GAAG,KAAK,QAAQ,IAAI,IAAI,CAAC3F,OAAO,CAAC2G,gCAAgC,EAAE;MAC5EhB,GAAG,GAAG,IAAI,CAAC3F,OAAO,CAAC2G,gCAAgC,CAACC,SAAS,CAAC;IAChE;IACA,IAAI,OAAOjB,GAAG,KAAK,QAAQ,EAAEA,GAAG,GAAG;MACjC,GAAGA;IACL,CAAC;IACD,IAAI,CAACA,GAAG,EAAEA,GAAG,GAAG,CAAC,CAAC;IAClB,IAAIlC,IAAI,IAAI,IAAI,EAAE,OAAO,EAAE;IAC3B,IAAI,OAAOA,IAAI,KAAK,UAAU,EAAEA,IAAI,GAAGsB,gBAAgB,CAACtB,IAAI,EAAE;MAC5D,GAAG,IAAI,CAACzD,OAAO;MACf,GAAG2F;IACL,CAAC,CAAC;IACF,IAAI,CAACpE,KAAK,CAACe,OAAO,CAACmB,IAAI,CAAC,EAAEA,IAAI,GAAG,CAAChH,MAAM,CAACgH,IAAI,CAAC,CAAC;IAC/C,MAAMoD,aAAa,GAAGlB,GAAG,CAACkB,aAAa,KAAKtL,SAAS,GAAGoK,GAAG,CAACkB,aAAa,GAAG,IAAI,CAAC7G,OAAO,CAAC6G,aAAa;IACtG,MAAM5I,YAAY,GAAG0H,GAAG,CAAC1H,YAAY,KAAK1C,SAAS,GAAGoK,GAAG,CAAC1H,YAAY,GAAG,IAAI,CAAC+B,OAAO,CAAC/B,YAAY;IAClG,MAAM;MACJ5D,GAAG;MACH2L;IACF,CAAC,GAAG,IAAI,CAACD,cAAc,CAACtC,IAAI,CAACA,IAAI,CAAC1I,MAAM,GAAG,CAAC,CAAC,EAAE4K,GAAG,CAAC;IACnD,MAAMmB,SAAS,GAAGd,UAAU,CAACA,UAAU,CAACjL,MAAM,GAAG,CAAC,CAAC;IACnD,IAAIiD,WAAW,GAAG2H,GAAG,CAAC3H,WAAW,KAAKzC,SAAS,GAAGoK,GAAG,CAAC3H,WAAW,GAAG,IAAI,CAACgC,OAAO,CAAChC,WAAW;IAC5F,IAAIA,WAAW,KAAKzC,SAAS,EAAEyC,WAAW,GAAG,GAAG;IAChD,MAAMqE,GAAG,GAAGsD,GAAG,CAACtD,GAAG,IAAI,IAAI,CAACkD,QAAQ;IACpC,MAAMwB,uBAAuB,GAAGpB,GAAG,CAACoB,uBAAuB,IAAI,IAAI,CAAC/G,OAAO,CAAC+G,uBAAuB;IACnG,IAAI1E,GAAG,EAAE2E,WAAW,CAAC,CAAC,KAAK,QAAQ,EAAE;MACnC,IAAID,uBAAuB,EAAE;QAC3B,IAAIF,aAAa,EAAE;UACjB,OAAO;YACLxN,GAAG,EAAE,GAAGyN,SAAS,GAAG9I,WAAW,GAAG3D,GAAG,EAAE;YACvC4M,OAAO,EAAE5M,GAAG;YACZ6M,YAAY,EAAE7M,GAAG;YACjB8M,OAAO,EAAE9E,GAAG;YACZ+E,MAAM,EAAEN,SAAS;YACjBO,UAAU,EAAE,IAAI,CAACC,oBAAoB,CAAC3B,GAAG;UAC3C,CAAC;QACH;QACA,OAAO,GAAGmB,SAAS,GAAG9I,WAAW,GAAG3D,GAAG,EAAE;MAC3C;MACA,IAAIwM,aAAa,EAAE;QACjB,OAAO;UACLxN,GAAG,EAAEgB,GAAG;UACR4M,OAAO,EAAE5M,GAAG;UACZ6M,YAAY,EAAE7M,GAAG;UACjB8M,OAAO,EAAE9E,GAAG;UACZ+E,MAAM,EAAEN,SAAS;UACjBO,UAAU,EAAE,IAAI,CAACC,oBAAoB,CAAC3B,GAAG;QAC3C,CAAC;MACH;MACA,OAAOtL,GAAG;IACZ;IACA,MAAMuL,QAAQ,GAAG,IAAI,CAACnM,OAAO,CAACgK,IAAI,EAAEkC,GAAG,CAAC;IACxC,IAAItM,GAAG,GAAGuM,QAAQ,EAAEvM,GAAG;IACvB,MAAMkO,UAAU,GAAG3B,QAAQ,EAAEqB,OAAO,IAAI5M,GAAG;IAC3C,MAAMmN,eAAe,GAAG5B,QAAQ,EAAEsB,YAAY,IAAI7M,GAAG;IACrD,MAAMoN,QAAQ,GAAG,CAAC,iBAAiB,EAAE,mBAAmB,EAAE,iBAAiB,CAAC;IAC5E,MAAMC,UAAU,GAAG/B,GAAG,CAAC+B,UAAU,KAAKnM,SAAS,GAAGoK,GAAG,CAAC+B,UAAU,GAAG,IAAI,CAAC1H,OAAO,CAAC0H,UAAU;IAC1F,MAAMC,0BAA0B,GAAG,CAAC,IAAI,CAACC,UAAU,IAAI,IAAI,CAACA,UAAU,CAACC,cAAc;IACrF,MAAMC,mBAAmB,GAAGnC,GAAG,CAACoC,KAAK,KAAKxM,SAAS,IAAI,CAACrC,QAAQ,CAACyM,GAAG,CAACoC,KAAK,CAAC;IAC3E,MAAMC,eAAe,GAAG5C,UAAU,CAAC4C,eAAe,CAACrC,GAAG,CAAC;IACvD,MAAMsC,kBAAkB,GAAGH,mBAAmB,GAAG,IAAI,CAACI,cAAc,CAACC,SAAS,CAAC9F,GAAG,EAAEsD,GAAG,CAACoC,KAAK,EAAEpC,GAAG,CAAC,GAAG,EAAE;IACxG,MAAMyC,iCAAiC,GAAGzC,GAAG,CAAC0C,OAAO,IAAIP,mBAAmB,GAAG,IAAI,CAACI,cAAc,CAACC,SAAS,CAAC9F,GAAG,EAAEsD,GAAG,CAACoC,KAAK,EAAE;MAC3HM,OAAO,EAAE;IACX,CAAC,CAAC,GAAG,EAAE;IACP,MAAMC,qBAAqB,GAAGR,mBAAmB,IAAI,CAACnC,GAAG,CAAC0C,OAAO,IAAI1C,GAAG,CAACoC,KAAK,KAAK,CAAC;IACpF,MAAMQ,YAAY,GAAGD,qBAAqB,IAAI3C,GAAG,CAAC,eAAe,IAAI,CAAC3F,OAAO,CAACwI,eAAe,MAAM,CAAC,IAAI7C,GAAG,CAAC,eAAesC,kBAAkB,EAAE,CAAC,IAAItC,GAAG,CAAC,eAAeyC,iCAAiC,EAAE,CAAC,IAAIzC,GAAG,CAAC4C,YAAY;IAC/N,IAAIE,aAAa,GAAGpP,GAAG;IACvB,IAAIsO,0BAA0B,IAAI,CAACtO,GAAG,IAAI2O,eAAe,EAAE;MACzDS,aAAa,GAAGF,YAAY;IAC9B;IACA,MAAMV,cAAc,GAAG1C,oBAAoB,CAACsD,aAAa,CAAC;IAC1D,MAAMC,OAAO,GAAG1N,MAAM,CAACC,SAAS,CAAC0N,QAAQ,CAAC9I,KAAK,CAAC4I,aAAa,CAAC;IAC9D,IAAId,0BAA0B,IAAIc,aAAa,IAAIZ,cAAc,IAAIJ,QAAQ,CAACnN,OAAO,CAACoO,OAAO,CAAC,GAAG,CAAC,IAAI,EAAExP,QAAQ,CAACwO,UAAU,CAAC,IAAInG,KAAK,CAACe,OAAO,CAACmG,aAAa,CAAC,CAAC,EAAE;MAC7J,IAAI,CAAC9C,GAAG,CAACG,aAAa,IAAI,CAAC,IAAI,CAAC9F,OAAO,CAAC8F,aAAa,EAAE;QACrD,IAAI,CAAC,IAAI,CAAC9F,OAAO,CAAC4I,qBAAqB,EAAE;UACvC,IAAI,CAACzI,MAAM,CAACT,IAAI,CAAC,iEAAiE,CAAC;QACrF;QACA,MAAMrB,CAAC,GAAG,IAAI,CAAC2B,OAAO,CAAC4I,qBAAqB,GAAG,IAAI,CAAC5I,OAAO,CAAC4I,qBAAqB,CAACrB,UAAU,EAAEkB,aAAa,EAAE;UAC3G,GAAG9C,GAAG;UACN9D,EAAE,EAAEmE;QACN,CAAC,CAAC,GAAG,QAAQ3L,GAAG,KAAK,IAAI,CAACkL,QAAQ,0CAA0C;QAC5E,IAAIsB,aAAa,EAAE;UACjBjB,QAAQ,CAACvM,GAAG,GAAGgF,CAAC;UAChBuH,QAAQ,CAACyB,UAAU,GAAG,IAAI,CAACC,oBAAoB,CAAC3B,GAAG,CAAC;UACpD,OAAOC,QAAQ;QACjB;QACA,OAAOvH,CAAC;MACV;MACA,IAAIJ,YAAY,EAAE;QAChB,MAAM4K,cAAc,GAAGtH,KAAK,CAACe,OAAO,CAACmG,aAAa,CAAC;QACnD,MAAM5O,IAAI,GAAGgP,cAAc,GAAG,EAAE,GAAG,CAAC,CAAC;QACrC,MAAMC,WAAW,GAAGD,cAAc,GAAGrB,eAAe,GAAGD,UAAU;QACjE,KAAK,MAAMrN,CAAC,IAAIuO,aAAa,EAAE;UAC7B,IAAIzN,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACsN,aAAa,EAAEvO,CAAC,CAAC,EAAE;YAC1D,MAAM6O,OAAO,GAAG,GAAGD,WAAW,GAAG7K,YAAY,GAAG/D,CAAC,EAAE;YACnD,IAAI8N,eAAe,IAAI,CAAC3O,GAAG,EAAE;cAC3BQ,IAAI,CAACK,CAAC,CAAC,GAAG,IAAI,CAACuM,SAAS,CAACsC,OAAO,EAAE;gBAChC,GAAGpD,GAAG;gBACN4C,YAAY,EAAEpD,oBAAoB,CAACoD,YAAY,CAAC,GAAGA,YAAY,CAACrO,CAAC,CAAC,GAAGqB,SAAS;gBAC9E,GAAG;kBACDmM,UAAU,EAAE,KAAK;kBACjB7F,EAAE,EAAEmE;gBACN;cACF,CAAC,CAAC;YACJ,CAAC,MAAM;cACLnM,IAAI,CAACK,CAAC,CAAC,GAAG,IAAI,CAACuM,SAAS,CAACsC,OAAO,EAAE;gBAChC,GAAGpD,GAAG;gBACN,GAAG;kBACD+B,UAAU,EAAE,KAAK;kBACjB7F,EAAE,EAAEmE;gBACN;cACF,CAAC,CAAC;YACJ;YACA,IAAInM,IAAI,CAACK,CAAC,CAAC,KAAK6O,OAAO,EAAElP,IAAI,CAACK,CAAC,CAAC,GAAGuO,aAAa,CAACvO,CAAC,CAAC;UACrD;QACF;QACAb,GAAG,GAAGQ,IAAI;MACZ;IACF,CAAC,MAAM,IAAI8N,0BAA0B,IAAIzO,QAAQ,CAACwO,UAAU,CAAC,IAAInG,KAAK,CAACe,OAAO,CAACjJ,GAAG,CAAC,EAAE;MACnFA,GAAG,GAAGA,GAAG,CAACkF,IAAI,CAACmJ,UAAU,CAAC;MAC1B,IAAIrO,GAAG,EAAEA,GAAG,GAAG,IAAI,CAAC2P,iBAAiB,CAAC3P,GAAG,EAAEoK,IAAI,EAAEkC,GAAG,EAAEe,OAAO,CAAC;IAChE,CAAC,MAAM;MACL,IAAIuC,WAAW,GAAG,KAAK;MACvB,IAAIhC,OAAO,GAAG,KAAK;MACnB,IAAI,CAAC,IAAI,CAACiC,aAAa,CAAC7P,GAAG,CAAC,IAAI2O,eAAe,EAAE;QAC/CiB,WAAW,GAAG,IAAI;QAClB5P,GAAG,GAAGkP,YAAY;MACpB;MACA,IAAI,CAAC,IAAI,CAACW,aAAa,CAAC7P,GAAG,CAAC,EAAE;QAC5B4N,OAAO,GAAG,IAAI;QACd5N,GAAG,GAAGgB,GAAG;MACX;MACA,MAAM8O,8BAA8B,GAAGxD,GAAG,CAACwD,8BAA8B,IAAI,IAAI,CAACnJ,OAAO,CAACmJ,8BAA8B;MACxH,MAAMC,aAAa,GAAGD,8BAA8B,IAAIlC,OAAO,GAAG1L,SAAS,GAAGlC,GAAG;MACjF,MAAMgQ,aAAa,GAAGrB,eAAe,IAAIO,YAAY,KAAKlP,GAAG,IAAI,IAAI,CAAC2G,OAAO,CAACqJ,aAAa;MAC3F,IAAIpC,OAAO,IAAIgC,WAAW,IAAII,aAAa,EAAE;QAC3C,IAAI,CAAClJ,MAAM,CAACZ,GAAG,CAAC8J,aAAa,GAAG,WAAW,GAAG,YAAY,EAAEhH,GAAG,EAAEyE,SAAS,EAAEzM,GAAG,EAAEgP,aAAa,GAAGd,YAAY,GAAGlP,GAAG,CAAC;QACpH,IAAI4E,YAAY,EAAE;UAChB,MAAMqL,EAAE,GAAG,IAAI,CAAC7P,OAAO,CAACY,GAAG,EAAE;YAC3B,GAAGsL,GAAG;YACN1H,YAAY,EAAE;UAChB,CAAC,CAAC;UACF,IAAIqL,EAAE,IAAIA,EAAE,CAACjQ,GAAG,EAAE,IAAI,CAAC8G,MAAM,CAACT,IAAI,CAAC,iLAAiL,CAAC;QACvN;QACA,IAAI6J,IAAI,GAAG,EAAE;QACb,MAAMC,YAAY,GAAG,IAAI,CAACC,aAAa,CAACC,gBAAgB,CAAC,IAAI,CAAC1J,OAAO,CAAC2J,WAAW,EAAEhE,GAAG,CAACtD,GAAG,IAAI,IAAI,CAACkD,QAAQ,CAAC;QAC5G,IAAI,IAAI,CAACvF,OAAO,CAAC4J,aAAa,KAAK,UAAU,IAAIJ,YAAY,IAAIA,YAAY,CAAC,CAAC,CAAC,EAAE;UAChF,KAAK,IAAIzK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGyK,YAAY,CAACzO,MAAM,EAAEgE,CAAC,EAAE,EAAE;YAC5CwK,IAAI,CAACzN,IAAI,CAAC0N,YAAY,CAACzK,CAAC,CAAC,CAAC;UAC5B;QACF,CAAC,MAAM,IAAI,IAAI,CAACiB,OAAO,CAAC4J,aAAa,KAAK,KAAK,EAAE;UAC/CL,IAAI,GAAG,IAAI,CAACE,aAAa,CAACI,kBAAkB,CAAClE,GAAG,CAACtD,GAAG,IAAI,IAAI,CAACkD,QAAQ,CAAC;QACxE,CAAC,MAAM;UACLgE,IAAI,CAACzN,IAAI,CAAC6J,GAAG,CAACtD,GAAG,IAAI,IAAI,CAACkD,QAAQ,CAAC;QACrC;QACA,MAAMuE,IAAI,GAAGA,CAACC,CAAC,EAAE3O,CAAC,EAAE4O,oBAAoB,KAAK;UAC3C,MAAMC,iBAAiB,GAAGjC,eAAe,IAAIgC,oBAAoB,KAAK3Q,GAAG,GAAG2Q,oBAAoB,GAAGZ,aAAa;UAChH,IAAI,IAAI,CAACpJ,OAAO,CAACkK,iBAAiB,EAAE;YAClC,IAAI,CAAClK,OAAO,CAACkK,iBAAiB,CAACH,CAAC,EAAEjD,SAAS,EAAE1L,CAAC,EAAE6O,iBAAiB,EAAEZ,aAAa,EAAE1D,GAAG,CAAC;UACxF,CAAC,MAAM,IAAI,IAAI,CAACwE,gBAAgB,EAAEC,WAAW,EAAE;YAC7C,IAAI,CAACD,gBAAgB,CAACC,WAAW,CAACL,CAAC,EAAEjD,SAAS,EAAE1L,CAAC,EAAE6O,iBAAiB,EAAEZ,aAAa,EAAE1D,GAAG,CAAC;UAC3F;UACA,IAAI,CAACtE,IAAI,CAAC,YAAY,EAAE0I,CAAC,EAAEjD,SAAS,EAAE1L,CAAC,EAAE/B,GAAG,CAAC;QAC/C,CAAC;QACD,IAAI,IAAI,CAAC2G,OAAO,CAACoK,WAAW,EAAE;UAC5B,IAAI,IAAI,CAACpK,OAAO,CAACqK,kBAAkB,IAAIvC,mBAAmB,EAAE;YAC1DyB,IAAI,CAACtP,OAAO,CAACsL,QAAQ,IAAI;cACvB,MAAM+E,QAAQ,GAAG,IAAI,CAACpC,cAAc,CAACqC,WAAW,CAAChF,QAAQ,EAAEI,GAAG,CAAC;cAC/D,IAAI2C,qBAAqB,IAAI3C,GAAG,CAAC,eAAe,IAAI,CAAC3F,OAAO,CAACwI,eAAe,MAAM,CAAC,IAAI8B,QAAQ,CAAChQ,OAAO,CAAC,GAAG,IAAI,CAAC0F,OAAO,CAACwI,eAAe,MAAM,CAAC,GAAG,CAAC,EAAE;gBAClJ8B,QAAQ,CAACxO,IAAI,CAAC,GAAG,IAAI,CAACkE,OAAO,CAACwI,eAAe,MAAM,CAAC;cACtD;cACA8B,QAAQ,CAACrQ,OAAO,CAACuQ,MAAM,IAAI;gBACzBV,IAAI,CAAC,CAACvE,QAAQ,CAAC,EAAElL,GAAG,GAAGmQ,MAAM,EAAE7E,GAAG,CAAC,eAAe6E,MAAM,EAAE,CAAC,IAAIjC,YAAY,CAAC;cAC9E,CAAC,CAAC;YACJ,CAAC,CAAC;UACJ,CAAC,MAAM;YACLuB,IAAI,CAACP,IAAI,EAAElP,GAAG,EAAEkO,YAAY,CAAC;UAC/B;QACF;MACF;MACAlP,GAAG,GAAG,IAAI,CAAC2P,iBAAiB,CAAC3P,GAAG,EAAEoK,IAAI,EAAEkC,GAAG,EAAEC,QAAQ,EAAEc,OAAO,CAAC;MAC/D,IAAIO,OAAO,IAAI5N,GAAG,KAAKgB,GAAG,IAAI,IAAI,CAAC2F,OAAO,CAACyK,2BAA2B,EAAE;QACtEpR,GAAG,GAAG,GAAGyN,SAAS,GAAG9I,WAAW,GAAG3D,GAAG,EAAE;MAC1C;MACA,IAAI,CAAC4M,OAAO,IAAIgC,WAAW,KAAK,IAAI,CAACjJ,OAAO,CAAC0K,sBAAsB,EAAE;QACnErR,GAAG,GAAG,IAAI,CAAC2G,OAAO,CAAC0K,sBAAsB,CAAC,IAAI,CAAC1K,OAAO,CAACyK,2BAA2B,GAAG,GAAG3D,SAAS,GAAG9I,WAAW,GAAG3D,GAAG,EAAE,GAAGA,GAAG,EAAE4O,WAAW,GAAG5P,GAAG,GAAGkC,SAAS,EAAEoK,GAAG,CAAC;MACpK;IACF;IACA,IAAIkB,aAAa,EAAE;MACjBjB,QAAQ,CAACvM,GAAG,GAAGA,GAAG;MAClBuM,QAAQ,CAACyB,UAAU,GAAG,IAAI,CAACC,oBAAoB,CAAC3B,GAAG,CAAC;MACpD,OAAOC,QAAQ;IACjB;IACA,OAAOvM,GAAG;EACZ;EACA2P,iBAAiBA,CAAC3P,GAAG,EAAEgB,GAAG,EAAEsL,GAAG,EAAEC,QAAQ,EAAEc,OAAO,EAAE;IAClD,IAAI,IAAI,CAACkB,UAAU,EAAE3E,KAAK,EAAE;MAC1B5J,GAAG,GAAG,IAAI,CAACuO,UAAU,CAAC3E,KAAK,CAAC5J,GAAG,EAAE;QAC/B,GAAG,IAAI,CAAC2G,OAAO,CAAC0F,aAAa,CAACiF,gBAAgB;QAC9C,GAAGhF;MACL,CAAC,EAAEA,GAAG,CAACtD,GAAG,IAAI,IAAI,CAACkD,QAAQ,IAAIK,QAAQ,CAACuB,OAAO,EAAEvB,QAAQ,CAACwB,MAAM,EAAExB,QAAQ,CAACqB,OAAO,EAAE;QAClFrB;MACF,CAAC,CAAC;IACJ,CAAC,MAAM,IAAI,CAACD,GAAG,CAACiF,iBAAiB,EAAE;MACjC,IAAIjF,GAAG,CAACD,aAAa,EAAE,IAAI,CAACY,YAAY,CAACrG,IAAI,CAAC;QAC5C,GAAG0F,GAAG;QACN,GAAG;UACDD,aAAa,EAAE;YACb,GAAG,IAAI,CAAC1F,OAAO,CAAC0F,aAAa;YAC7B,GAAGC,GAAG,CAACD;UACT;QACF;MACF,CAAC,CAAC;MACF,MAAMmF,eAAe,GAAG3R,QAAQ,CAACG,GAAG,CAAC,KAAKsM,GAAG,EAAED,aAAa,EAAEmF,eAAe,KAAKtP,SAAS,GAAGoK,GAAG,CAACD,aAAa,CAACmF,eAAe,GAAG,IAAI,CAAC7K,OAAO,CAAC0F,aAAa,CAACmF,eAAe,CAAC;MAC7K,IAAIC,OAAO;MACX,IAAID,eAAe,EAAE;QACnB,MAAME,EAAE,GAAG1R,GAAG,CAACgN,KAAK,CAAC,IAAI,CAACC,YAAY,CAACC,aAAa,CAAC;QACrDuE,OAAO,GAAGC,EAAE,IAAIA,EAAE,CAAChQ,MAAM;MAC3B;MACA,IAAIkB,IAAI,GAAG0J,GAAG,CAACpL,OAAO,IAAI,CAACrB,QAAQ,CAACyM,GAAG,CAACpL,OAAO,CAAC,GAAGoL,GAAG,CAACpL,OAAO,GAAGoL,GAAG;MACpE,IAAI,IAAI,CAAC3F,OAAO,CAAC0F,aAAa,CAACiF,gBAAgB,EAAE1O,IAAI,GAAG;QACtD,GAAG,IAAI,CAAC+D,OAAO,CAAC0F,aAAa,CAACiF,gBAAgB;QAC9C,GAAG1O;MACL,CAAC;MACD5C,GAAG,GAAG,IAAI,CAACiN,YAAY,CAAC0E,WAAW,CAAC3R,GAAG,EAAE4C,IAAI,EAAE0J,GAAG,CAACtD,GAAG,IAAI,IAAI,CAACkD,QAAQ,IAAIK,QAAQ,CAACuB,OAAO,EAAExB,GAAG,CAAC;MACjG,IAAIkF,eAAe,EAAE;QACnB,MAAMI,EAAE,GAAG5R,GAAG,CAACgN,KAAK,CAAC,IAAI,CAACC,YAAY,CAACC,aAAa,CAAC;QACrD,MAAM2E,OAAO,GAAGD,EAAE,IAAIA,EAAE,CAAClQ,MAAM;QAC/B,IAAI+P,OAAO,GAAGI,OAAO,EAAEvF,GAAG,CAACwF,IAAI,GAAG,KAAK;MACzC;MACA,IAAI,CAACxF,GAAG,CAACtD,GAAG,IAAIuD,QAAQ,IAAIA,QAAQ,CAACvM,GAAG,EAAEsM,GAAG,CAACtD,GAAG,GAAG,IAAI,CAACkD,QAAQ,IAAIK,QAAQ,CAACuB,OAAO;MACrF,IAAIxB,GAAG,CAACwF,IAAI,KAAK,KAAK,EAAE9R,GAAG,GAAG,IAAI,CAACiN,YAAY,CAAC6E,IAAI,CAAC9R,GAAG,EAAE,CAAC,GAAGmG,IAAI,KAAK;QACrE,IAAIkH,OAAO,GAAG,CAAC,CAAC,KAAKlH,IAAI,CAAC,CAAC,CAAC,IAAI,CAACmG,GAAG,CAACyF,OAAO,EAAE;UAC5C,IAAI,CAACjL,MAAM,CAACT,IAAI,CAAC,6CAA6CF,IAAI,CAAC,CAAC,CAAC,YAAYnF,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;UAC1F,OAAO,IAAI;QACb;QACA,OAAO,IAAI,CAACoM,SAAS,CAAC,GAAGjH,IAAI,EAAEnF,GAAG,CAAC;MACrC,CAAC,EAAEsL,GAAG,CAAC;MACP,IAAIA,GAAG,CAACD,aAAa,EAAE,IAAI,CAACY,YAAY,CAAC+E,KAAK,CAAC,CAAC;IAClD;IACA,MAAMC,WAAW,GAAG3F,GAAG,CAAC2F,WAAW,IAAI,IAAI,CAACtL,OAAO,CAACsL,WAAW;IAC/D,MAAMC,kBAAkB,GAAGrS,QAAQ,CAACoS,WAAW,CAAC,GAAG,CAACA,WAAW,CAAC,GAAGA,WAAW;IAC9E,IAAIjS,GAAG,IAAI,IAAI,IAAIkS,kBAAkB,EAAExQ,MAAM,IAAI4K,GAAG,CAAC6F,kBAAkB,KAAK,KAAK,EAAE;MACjFnS,GAAG,GAAGwK,aAAa,CAACK,MAAM,CAACqH,kBAAkB,EAAElS,GAAG,EAAEgB,GAAG,EAAE,IAAI,CAAC2F,OAAO,IAAI,IAAI,CAACA,OAAO,CAACyL,uBAAuB,GAAG;QAC9GC,YAAY,EAAE;UACZ,GAAG9F,QAAQ;UACXyB,UAAU,EAAE,IAAI,CAACC,oBAAoB,CAAC3B,GAAG;QAC3C,CAAC;QACD,GAAGA;MACL,CAAC,GAAGA,GAAG,EAAE,IAAI,CAAC;IAChB;IACA,OAAOtM,GAAG;EACZ;EACAI,OAAOA,CAACgK,IAAI,EAAEkC,GAAG,GAAG,CAAC,CAAC,EAAE;IACtB,IAAIgG,KAAK;IACT,IAAI1E,OAAO;IACX,IAAIC,YAAY;IAChB,IAAIC,OAAO;IACX,IAAIC,MAAM;IACV,IAAIlO,QAAQ,CAACuK,IAAI,CAAC,EAAEA,IAAI,GAAG,CAACA,IAAI,CAAC;IACjCA,IAAI,CAACxJ,OAAO,CAACmB,CAAC,IAAI;MAChB,IAAI,IAAI,CAAC8N,aAAa,CAACyC,KAAK,CAAC,EAAE;MAC/B,MAAMC,SAAS,GAAG,IAAI,CAAC7F,cAAc,CAAC3K,CAAC,EAAEuK,GAAG,CAAC;MAC7C,MAAMtL,GAAG,GAAGuR,SAAS,CAACvR,GAAG;MACzB4M,OAAO,GAAG5M,GAAG;MACb,IAAI2L,UAAU,GAAG4F,SAAS,CAAC5F,UAAU;MACrC,IAAI,IAAI,CAAChG,OAAO,CAAC6L,UAAU,EAAE7F,UAAU,GAAGA,UAAU,CAACnK,MAAM,CAAC,IAAI,CAACmE,OAAO,CAAC6L,UAAU,CAAC;MACpF,MAAM/D,mBAAmB,GAAGnC,GAAG,CAACoC,KAAK,KAAKxM,SAAS,IAAI,CAACrC,QAAQ,CAACyM,GAAG,CAACoC,KAAK,CAAC;MAC3E,MAAMO,qBAAqB,GAAGR,mBAAmB,IAAI,CAACnC,GAAG,CAAC0C,OAAO,IAAI1C,GAAG,CAACoC,KAAK,KAAK,CAAC;MACpF,MAAM+D,oBAAoB,GAAGnG,GAAG,CAACyF,OAAO,KAAK7P,SAAS,KAAKrC,QAAQ,CAACyM,GAAG,CAACyF,OAAO,CAAC,IAAI,OAAOzF,GAAG,CAACyF,OAAO,KAAK,QAAQ,CAAC,IAAIzF,GAAG,CAACyF,OAAO,KAAK,EAAE;MAC1I,MAAMW,KAAK,GAAGpG,GAAG,CAAC4D,IAAI,GAAG5D,GAAG,CAAC4D,IAAI,GAAG,IAAI,CAACE,aAAa,CAACI,kBAAkB,CAAClE,GAAG,CAACtD,GAAG,IAAI,IAAI,CAACkD,QAAQ,EAAEI,GAAG,CAACgE,WAAW,CAAC;MACpH3D,UAAU,CAAC/L,OAAO,CAAC4H,EAAE,IAAI;QACvB,IAAI,IAAI,CAACqH,aAAa,CAACyC,KAAK,CAAC,EAAE;QAC/BvE,MAAM,GAAGvF,EAAE;QACX,IAAI,CAACqD,gBAAgB,CAAC,GAAG6G,KAAK,CAAC,CAAC,CAAC,IAAIlK,EAAE,EAAE,CAAC,IAAI,IAAI,CAACmK,KAAK,EAAEC,kBAAkB,IAAI,CAAC,IAAI,CAACD,KAAK,EAAEC,kBAAkB,CAAC7E,MAAM,CAAC,EAAE;UACvHlC,gBAAgB,CAAC,GAAG6G,KAAK,CAAC,CAAC,CAAC,IAAIlK,EAAE,EAAE,CAAC,GAAG,IAAI;UAC5C,IAAI,CAAC1B,MAAM,CAACT,IAAI,CAAC,QAAQuH,OAAO,oBAAoB8E,KAAK,CAACxN,IAAI,CAAC,IAAI,CAAC,sCAAsC6I,MAAM,sBAAsB,EAAE,0NAA0N,CAAC;QACrW;QACA2E,KAAK,CAAC9R,OAAO,CAACmF,IAAI,IAAI;UACpB,IAAI,IAAI,CAAC8J,aAAa,CAACyC,KAAK,CAAC,EAAE;UAC/BxE,OAAO,GAAG/H,IAAI;UACd,MAAM8M,SAAS,GAAG,CAAC7R,GAAG,CAAC;UACvB,IAAI,IAAI,CAACuN,UAAU,EAAEuE,aAAa,EAAE;YAClC,IAAI,CAACvE,UAAU,CAACuE,aAAa,CAACD,SAAS,EAAE7R,GAAG,EAAE+E,IAAI,EAAEyC,EAAE,EAAE8D,GAAG,CAAC;UAC9D,CAAC,MAAM;YACL,IAAIyG,YAAY;YAChB,IAAItE,mBAAmB,EAAEsE,YAAY,GAAG,IAAI,CAAClE,cAAc,CAACC,SAAS,CAAC/I,IAAI,EAAEuG,GAAG,CAACoC,KAAK,EAAEpC,GAAG,CAAC;YAC3F,MAAM0G,UAAU,GAAG,GAAG,IAAI,CAACrM,OAAO,CAACwI,eAAe,MAAM;YACxD,MAAM8D,aAAa,GAAG,GAAG,IAAI,CAACtM,OAAO,CAACwI,eAAe,UAAU,IAAI,CAACxI,OAAO,CAACwI,eAAe,EAAE;YAC7F,IAAIV,mBAAmB,EAAE;cACvB,IAAInC,GAAG,CAAC0C,OAAO,IAAI+D,YAAY,CAAC9R,OAAO,CAACgS,aAAa,CAAC,KAAK,CAAC,EAAE;gBAC5DJ,SAAS,CAACpQ,IAAI,CAACzB,GAAG,GAAG+R,YAAY,CAAC7R,OAAO,CAAC+R,aAAa,EAAE,IAAI,CAACtM,OAAO,CAACwI,eAAe,CAAC,CAAC;cACzF;cACA0D,SAAS,CAACpQ,IAAI,CAACzB,GAAG,GAAG+R,YAAY,CAAC;cAClC,IAAI9D,qBAAqB,EAAE;gBACzB4D,SAAS,CAACpQ,IAAI,CAACzB,GAAG,GAAGgS,UAAU,CAAC;cAClC;YACF;YACA,IAAIP,oBAAoB,EAAE;cACxB,MAAMS,UAAU,GAAG,GAAGlS,GAAG,GAAG,IAAI,CAAC2F,OAAO,CAACwM,gBAAgB,IAAI,GAAG,GAAG7G,GAAG,CAACyF,OAAO,EAAE;cAChFc,SAAS,CAACpQ,IAAI,CAACyQ,UAAU,CAAC;cAC1B,IAAIzE,mBAAmB,EAAE;gBACvB,IAAInC,GAAG,CAAC0C,OAAO,IAAI+D,YAAY,CAAC9R,OAAO,CAACgS,aAAa,CAAC,KAAK,CAAC,EAAE;kBAC5DJ,SAAS,CAACpQ,IAAI,CAACyQ,UAAU,GAAGH,YAAY,CAAC7R,OAAO,CAAC+R,aAAa,EAAE,IAAI,CAACtM,OAAO,CAACwI,eAAe,CAAC,CAAC;gBAChG;gBACA0D,SAAS,CAACpQ,IAAI,CAACyQ,UAAU,GAAGH,YAAY,CAAC;gBACzC,IAAI9D,qBAAqB,EAAE;kBACzB4D,SAAS,CAACpQ,IAAI,CAACyQ,UAAU,GAAGF,UAAU,CAAC;gBACzC;cACF;YACF;UACF;UACA,IAAII,WAAW;UACf,OAAOA,WAAW,GAAGP,SAAS,CAACQ,GAAG,CAAC,CAAC,EAAE;YACpC,IAAI,CAAC,IAAI,CAACxD,aAAa,CAACyC,KAAK,CAAC,EAAE;cAC9BzE,YAAY,GAAGuF,WAAW;cAC1Bd,KAAK,GAAG,IAAI,CAACvJ,WAAW,CAAChD,IAAI,EAAEyC,EAAE,EAAE4K,WAAW,EAAE9G,GAAG,CAAC;YACtD;UACF;QACF,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC;IACF,OAAO;MACLtM,GAAG,EAAEsS,KAAK;MACV1E,OAAO;MACPC,YAAY;MACZC,OAAO;MACPC;IACF,CAAC;EACH;EACA8B,aAAaA,CAAC7P,GAAG,EAAE;IACjB,OAAOA,GAAG,KAAKkC,SAAS,IAAI,EAAE,CAAC,IAAI,CAACyE,OAAO,CAAC2M,UAAU,IAAItT,GAAG,KAAK,IAAI,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC2G,OAAO,CAAC4M,iBAAiB,IAAIvT,GAAG,KAAK,EAAE,CAAC;EAC7H;EACA+I,WAAWA,CAAChD,IAAI,EAAEyC,EAAE,EAAExH,GAAG,EAAE2F,OAAO,GAAG,CAAC,CAAC,EAAE;IACvC,IAAI,IAAI,CAAC4H,UAAU,EAAExF,WAAW,EAAE,OAAO,IAAI,CAACwF,UAAU,CAACxF,WAAW,CAAChD,IAAI,EAAEyC,EAAE,EAAExH,GAAG,EAAE2F,OAAO,CAAC;IAC5F,OAAO,IAAI,CAAC6M,aAAa,CAACzK,WAAW,CAAChD,IAAI,EAAEyC,EAAE,EAAExH,GAAG,EAAE2F,OAAO,CAAC;EAC/D;EACAsH,oBAAoBA,CAACtH,OAAO,GAAG,CAAC,CAAC,EAAE;IACjC,MAAM8M,WAAW,GAAG,CAAC,cAAc,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,aAAa,EAAE,IAAI,EAAE,cAAc,EAAE,aAAa,EAAE,eAAe,EAAE,eAAe,EAAE,YAAY,EAAE,aAAa,EAAE,eAAe,CAAC;IACxN,MAAMC,wBAAwB,GAAG/M,OAAO,CAACzF,OAAO,IAAI,CAACrB,QAAQ,CAAC8G,OAAO,CAACzF,OAAO,CAAC;IAC9E,IAAI0B,IAAI,GAAG8Q,wBAAwB,GAAG/M,OAAO,CAACzF,OAAO,GAAGyF,OAAO;IAC/D,IAAI+M,wBAAwB,IAAI,OAAO/M,OAAO,CAAC+H,KAAK,KAAK,WAAW,EAAE;MACpE9L,IAAI,CAAC8L,KAAK,GAAG/H,OAAO,CAAC+H,KAAK;IAC5B;IACA,IAAI,IAAI,CAAC/H,OAAO,CAAC0F,aAAa,CAACiF,gBAAgB,EAAE;MAC/C1O,IAAI,GAAG;QACL,GAAG,IAAI,CAAC+D,OAAO,CAAC0F,aAAa,CAACiF,gBAAgB;QAC9C,GAAG1O;MACL,CAAC;IACH;IACA,IAAI,CAAC8Q,wBAAwB,EAAE;MAC7B9Q,IAAI,GAAG;QACL,GAAGA;MACL,CAAC;MACD,KAAK,MAAM5B,GAAG,IAAIyS,WAAW,EAAE;QAC7B,OAAO7Q,IAAI,CAAC5B,GAAG,CAAC;MAClB;IACF;IACA,OAAO4B,IAAI;EACb;EACA,OAAO+L,eAAeA,CAAChI,OAAO,EAAE;IAC9B,MAAME,MAAM,GAAG,cAAc;IAC7B,KAAK,MAAM8M,MAAM,IAAIhN,OAAO,EAAE;MAC5B,IAAIhF,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAAC6E,OAAO,EAAEgN,MAAM,CAAC,IAAI9M,MAAM,KAAK8M,MAAM,CAACrO,SAAS,CAAC,CAAC,EAAEuB,MAAM,CAACnF,MAAM,CAAC,IAAIQ,SAAS,KAAKyE,OAAO,CAACgN,MAAM,CAAC,EAAE;QAC3I,OAAO,IAAI;MACb;IACF;IACA,OAAO,KAAK;EACd;AACF;AAEA,MAAMC,YAAY,CAAC;EACjBlQ,WAAWA,CAACiD,OAAO,EAAE;IACnB,IAAI,CAACA,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACkN,aAAa,GAAG,IAAI,CAAClN,OAAO,CAACkN,aAAa,IAAI,KAAK;IACxD,IAAI,CAAC/M,MAAM,GAAGS,UAAU,CAACH,MAAM,CAAC,eAAe,CAAC;EAClD;EACA0M,qBAAqBA,CAAC/N,IAAI,EAAE;IAC1BA,IAAI,GAAGD,cAAc,CAACC,IAAI,CAAC;IAC3B,IAAI,CAACA,IAAI,IAAIA,IAAI,CAAC9E,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,OAAO,IAAI;IAC/C,MAAMmB,CAAC,GAAG2D,IAAI,CAACvE,KAAK,CAAC,GAAG,CAAC;IACzB,IAAIY,CAAC,CAACV,MAAM,KAAK,CAAC,EAAE,OAAO,IAAI;IAC/BU,CAAC,CAACiR,GAAG,CAAC,CAAC;IACP,IAAIjR,CAAC,CAACA,CAAC,CAACV,MAAM,GAAG,CAAC,CAAC,CAACiM,WAAW,CAAC,CAAC,KAAK,GAAG,EAAE,OAAO,IAAI;IACtD,OAAO,IAAI,CAACoG,kBAAkB,CAAC3R,CAAC,CAAC8C,IAAI,CAAC,GAAG,CAAC,CAAC;EAC7C;EACA8O,uBAAuBA,CAACjO,IAAI,EAAE;IAC5BA,IAAI,GAAGD,cAAc,CAACC,IAAI,CAAC;IAC3B,IAAI,CAACA,IAAI,IAAIA,IAAI,CAAC9E,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,OAAO8E,IAAI;IAC/C,MAAM3D,CAAC,GAAG2D,IAAI,CAACvE,KAAK,CAAC,GAAG,CAAC;IACzB,OAAO,IAAI,CAACuS,kBAAkB,CAAC3R,CAAC,CAAC,CAAC,CAAC,CAAC;EACtC;EACA2R,kBAAkBA,CAAChO,IAAI,EAAE;IACvB,IAAIlG,QAAQ,CAACkG,IAAI,CAAC,IAAIA,IAAI,CAAC9E,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;MAC5C,IAAIgT,aAAa;MACjB,IAAI;QACFA,aAAa,GAAGC,IAAI,CAACC,mBAAmB,CAACpO,IAAI,CAAC,CAAC,CAAC,CAAC;MACnD,CAAC,CAAC,OAAO5D,CAAC,EAAE,CAAC;MACb,IAAI8R,aAAa,IAAI,IAAI,CAACtN,OAAO,CAACyN,YAAY,EAAE;QAC9CH,aAAa,GAAGA,aAAa,CAACtG,WAAW,CAAC,CAAC;MAC7C;MACA,IAAIsG,aAAa,EAAE,OAAOA,aAAa;MACvC,IAAI,IAAI,CAACtN,OAAO,CAACyN,YAAY,EAAE;QAC7B,OAAOrO,IAAI,CAAC4H,WAAW,CAAC,CAAC;MAC3B;MACA,OAAO5H,IAAI;IACb;IACA,OAAO,IAAI,CAACY,OAAO,CAAC0N,SAAS,IAAI,IAAI,CAAC1N,OAAO,CAACyN,YAAY,GAAGrO,IAAI,CAAC4H,WAAW,CAAC,CAAC,GAAG5H,IAAI;EACxF;EACAuO,eAAeA,CAACvO,IAAI,EAAE;IACpB,IAAI,IAAI,CAACY,OAAO,CAAC4N,IAAI,KAAK,cAAc,IAAI,IAAI,CAAC5N,OAAO,CAAC6N,wBAAwB,EAAE;MACjFzO,IAAI,GAAG,IAAI,CAACiO,uBAAuB,CAACjO,IAAI,CAAC;IAC3C;IACA,OAAO,CAAC,IAAI,CAAC8N,aAAa,IAAI,CAAC,IAAI,CAACA,aAAa,CAACnS,MAAM,IAAI,IAAI,CAACmS,aAAa,CAAC5S,OAAO,CAAC8E,IAAI,CAAC,GAAG,CAAC,CAAC;EACnG;EACA0O,qBAAqBA,CAAC/B,KAAK,EAAE;IAC3B,IAAI,CAACA,KAAK,EAAE,OAAO,IAAI;IACvB,IAAIJ,KAAK;IACTI,KAAK,CAAC9R,OAAO,CAACmF,IAAI,IAAI;MACpB,IAAIuM,KAAK,EAAE;MACX,MAAMoC,UAAU,GAAG,IAAI,CAACX,kBAAkB,CAAChO,IAAI,CAAC;MAChD,IAAI,CAAC,IAAI,CAACY,OAAO,CAACkN,aAAa,IAAI,IAAI,CAACS,eAAe,CAACI,UAAU,CAAC,EAAEpC,KAAK,GAAGoC,UAAU;IACzF,CAAC,CAAC;IACF,IAAI,CAACpC,KAAK,IAAI,IAAI,CAAC3L,OAAO,CAACkN,aAAa,EAAE;MACxCnB,KAAK,CAAC9R,OAAO,CAACmF,IAAI,IAAI;QACpB,IAAIuM,KAAK,EAAE;QACX,MAAMqC,SAAS,GAAG,IAAI,CAACb,qBAAqB,CAAC/N,IAAI,CAAC;QAClD,IAAI,IAAI,CAACuO,eAAe,CAACK,SAAS,CAAC,EAAE,OAAOrC,KAAK,GAAGqC,SAAS;QAC7D,MAAMC,OAAO,GAAG,IAAI,CAACZ,uBAAuB,CAACjO,IAAI,CAAC;QAClD,IAAI,IAAI,CAACuO,eAAe,CAACM,OAAO,CAAC,EAAE,OAAOtC,KAAK,GAAGsC,OAAO;QACzDtC,KAAK,GAAG,IAAI,CAAC3L,OAAO,CAACkN,aAAa,CAACxJ,IAAI,CAACwK,YAAY,IAAI;UACtD,IAAIA,YAAY,KAAKD,OAAO,EAAE,OAAOC,YAAY;UACjD,IAAIA,YAAY,CAAC5T,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI2T,OAAO,CAAC3T,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;UAC/D,IAAI4T,YAAY,CAAC5T,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI2T,OAAO,CAAC3T,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI4T,YAAY,CAACvP,SAAS,CAAC,CAAC,EAAEuP,YAAY,CAAC5T,OAAO,CAAC,GAAG,CAAC,CAAC,KAAK2T,OAAO,EAAE,OAAOC,YAAY;UACtJ,IAAIA,YAAY,CAAC5T,OAAO,CAAC2T,OAAO,CAAC,KAAK,CAAC,IAAIA,OAAO,CAAClT,MAAM,GAAG,CAAC,EAAE,OAAOmT,YAAY;QACpF,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;IACA,IAAI,CAACvC,KAAK,EAAEA,KAAK,GAAG,IAAI,CAACjC,gBAAgB,CAAC,IAAI,CAAC1J,OAAO,CAAC2J,WAAW,CAAC,CAAC,CAAC,CAAC;IACtE,OAAOgC,KAAK;EACd;EACAjC,gBAAgBA,CAACyE,SAAS,EAAE/O,IAAI,EAAE;IAChC,IAAI,CAAC+O,SAAS,EAAE,OAAO,EAAE;IACzB,IAAI,OAAOA,SAAS,KAAK,UAAU,EAAEA,SAAS,GAAGA,SAAS,CAAC/O,IAAI,CAAC;IAChE,IAAIlG,QAAQ,CAACiV,SAAS,CAAC,EAAEA,SAAS,GAAG,CAACA,SAAS,CAAC;IAChD,IAAI5M,KAAK,CAACe,OAAO,CAAC6L,SAAS,CAAC,EAAE,OAAOA,SAAS;IAC9C,IAAI,CAAC/O,IAAI,EAAE,OAAO+O,SAAS,CAACC,OAAO,IAAI,EAAE;IACzC,IAAIzC,KAAK,GAAGwC,SAAS,CAAC/O,IAAI,CAAC;IAC3B,IAAI,CAACuM,KAAK,EAAEA,KAAK,GAAGwC,SAAS,CAAC,IAAI,CAAChB,qBAAqB,CAAC/N,IAAI,CAAC,CAAC;IAC/D,IAAI,CAACuM,KAAK,EAAEA,KAAK,GAAGwC,SAAS,CAAC,IAAI,CAACf,kBAAkB,CAAChO,IAAI,CAAC,CAAC;IAC5D,IAAI,CAACuM,KAAK,EAAEA,KAAK,GAAGwC,SAAS,CAAC,IAAI,CAACd,uBAAuB,CAACjO,IAAI,CAAC,CAAC;IACjE,IAAI,CAACuM,KAAK,EAAEA,KAAK,GAAGwC,SAAS,CAACC,OAAO;IACrC,OAAOzC,KAAK,IAAI,EAAE;EACpB;EACA9B,kBAAkBA,CAACzK,IAAI,EAAEiP,YAAY,EAAE;IACrC,MAAMC,aAAa,GAAG,IAAI,CAAC5E,gBAAgB,CAAC,CAAC2E,YAAY,KAAK,KAAK,GAAG,EAAE,GAAGA,YAAY,KAAK,IAAI,CAACrO,OAAO,CAAC2J,WAAW,IAAI,EAAE,EAAEvK,IAAI,CAAC;IACjI,MAAM2M,KAAK,GAAG,EAAE;IAChB,MAAMwC,OAAO,GAAGnQ,CAAC,IAAI;MACnB,IAAI,CAACA,CAAC,EAAE;MACR,IAAI,IAAI,CAACuP,eAAe,CAACvP,CAAC,CAAC,EAAE;QAC3B2N,KAAK,CAACjQ,IAAI,CAACsC,CAAC,CAAC;MACf,CAAC,MAAM;QACL,IAAI,CAAC+B,MAAM,CAACT,IAAI,CAAC,uDAAuDtB,CAAC,EAAE,CAAC;MAC9E;IACF,CAAC;IACD,IAAIlF,QAAQ,CAACkG,IAAI,CAAC,KAAKA,IAAI,CAAC9E,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI8E,IAAI,CAAC9E,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;MACxE,IAAI,IAAI,CAAC0F,OAAO,CAAC4N,IAAI,KAAK,cAAc,EAAEW,OAAO,CAAC,IAAI,CAACnB,kBAAkB,CAAChO,IAAI,CAAC,CAAC;MAChF,IAAI,IAAI,CAACY,OAAO,CAAC4N,IAAI,KAAK,cAAc,IAAI,IAAI,CAAC5N,OAAO,CAAC4N,IAAI,KAAK,aAAa,EAAEW,OAAO,CAAC,IAAI,CAACpB,qBAAqB,CAAC/N,IAAI,CAAC,CAAC;MAC1H,IAAI,IAAI,CAACY,OAAO,CAAC4N,IAAI,KAAK,aAAa,EAAEW,OAAO,CAAC,IAAI,CAAClB,uBAAuB,CAACjO,IAAI,CAAC,CAAC;IACtF,CAAC,MAAM,IAAIlG,QAAQ,CAACkG,IAAI,CAAC,EAAE;MACzBmP,OAAO,CAAC,IAAI,CAACnB,kBAAkB,CAAChO,IAAI,CAAC,CAAC;IACxC;IACAkP,aAAa,CAACrU,OAAO,CAACuU,EAAE,IAAI;MAC1B,IAAIzC,KAAK,CAACzR,OAAO,CAACkU,EAAE,CAAC,GAAG,CAAC,EAAED,OAAO,CAAC,IAAI,CAACnB,kBAAkB,CAACoB,EAAE,CAAC,CAAC;IACjE,CAAC,CAAC;IACF,OAAOzC,KAAK;EACd;AACF;AAEA,MAAM0C,aAAa,GAAG;EACpBC,IAAI,EAAE,CAAC;EACPC,GAAG,EAAE,CAAC;EACNC,GAAG,EAAE,CAAC;EACNC,GAAG,EAAE,CAAC;EACNC,IAAI,EAAE,CAAC;EACPC,KAAK,EAAE;AACT,CAAC;AACD,MAAMC,SAAS,GAAG;EAChBC,MAAM,EAAElH,KAAK,IAAIA,KAAK,KAAK,CAAC,GAAG,KAAK,GAAG,OAAO;EAC9CmH,eAAe,EAAEA,CAAA,MAAO;IACtBC,gBAAgB,EAAE,CAAC,KAAK,EAAE,OAAO;EACnC,CAAC;AACH,CAAC;AACD,MAAMC,cAAc,CAAC;EACnBrS,WAAWA,CAAC0M,aAAa,EAAEzJ,OAAO,GAAG,CAAC,CAAC,EAAE;IACvC,IAAI,CAACyJ,aAAa,GAAGA,aAAa;IAClC,IAAI,CAACzJ,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACG,MAAM,GAAGS,UAAU,CAACH,MAAM,CAAC,gBAAgB,CAAC;IACjD,IAAI,CAAC4O,gBAAgB,GAAG,CAAC,CAAC;EAC5B;EACAC,OAAOA,CAACjN,GAAG,EAAElJ,GAAG,EAAE;IAChB,IAAI,CAACoW,KAAK,CAAClN,GAAG,CAAC,GAAGlJ,GAAG;EACvB;EACAqW,UAAUA,CAAA,EAAG;IACX,IAAI,CAACH,gBAAgB,GAAG,CAAC,CAAC;EAC5B;EACAI,OAAOA,CAACrQ,IAAI,EAAEY,OAAO,GAAG,CAAC,CAAC,EAAE;IAC1B,MAAM0P,WAAW,GAAGvQ,cAAc,CAACC,IAAI,KAAK,KAAK,GAAG,IAAI,GAAGA,IAAI,CAAC;IAChE,MAAME,IAAI,GAAGU,OAAO,CAACqI,OAAO,GAAG,SAAS,GAAG,UAAU;IACrD,MAAMsH,QAAQ,GAAG3M,IAAI,CAACE,SAAS,CAAC;MAC9BwM,WAAW;MACXpQ;IACF,CAAC,CAAC;IACF,IAAIqQ,QAAQ,IAAI,IAAI,CAACN,gBAAgB,EAAE;MACrC,OAAO,IAAI,CAACA,gBAAgB,CAACM,QAAQ,CAAC;IACxC;IACA,IAAIC,IAAI;IACR,IAAI;MACFA,IAAI,GAAG,IAAIrC,IAAI,CAACsC,WAAW,CAACH,WAAW,EAAE;QACvCpQ;MACF,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOwQ,GAAG,EAAE;MACZ,IAAI,CAACvC,IAAI,EAAE;QACT,IAAI,CAACpN,MAAM,CAACR,KAAK,CAAC,+CAA+C,CAAC;QAClE,OAAOqP,SAAS;MAClB;MACA,IAAI,CAAC5P,IAAI,CAACiH,KAAK,CAAC,KAAK,CAAC,EAAE,OAAO2I,SAAS;MACxC,MAAMe,OAAO,GAAG,IAAI,CAACtG,aAAa,CAAC4D,uBAAuB,CAACjO,IAAI,CAAC;MAChEwQ,IAAI,GAAG,IAAI,CAACH,OAAO,CAACM,OAAO,EAAE/P,OAAO,CAAC;IACvC;IACA,IAAI,CAACqP,gBAAgB,CAACM,QAAQ,CAAC,GAAGC,IAAI;IACtC,OAAOA,IAAI;EACb;EACAI,WAAWA,CAAC5Q,IAAI,EAAEY,OAAO,GAAG,CAAC,CAAC,EAAE;IAC9B,IAAI4P,IAAI,GAAG,IAAI,CAACH,OAAO,CAACrQ,IAAI,EAAEY,OAAO,CAAC;IACtC,IAAI,CAAC4P,IAAI,EAAEA,IAAI,GAAG,IAAI,CAACH,OAAO,CAAC,KAAK,EAAEzP,OAAO,CAAC;IAC9C,OAAO4P,IAAI,EAAEV,eAAe,CAAC,CAAC,CAACC,gBAAgB,CAACpU,MAAM,GAAG,CAAC;EAC5D;EACAkV,mBAAmBA,CAAC7Q,IAAI,EAAE/E,GAAG,EAAE2F,OAAO,GAAG,CAAC,CAAC,EAAE;IAC3C,OAAO,IAAI,CAACuK,WAAW,CAACnL,IAAI,EAAEY,OAAO,CAAC,CAAC1B,GAAG,CAACkM,MAAM,IAAI,GAAGnQ,GAAG,GAAGmQ,MAAM,EAAE,CAAC;EACzE;EACAD,WAAWA,CAACnL,IAAI,EAAEY,OAAO,GAAG,CAAC,CAAC,EAAE;IAC9B,IAAI4P,IAAI,GAAG,IAAI,CAACH,OAAO,CAACrQ,IAAI,EAAEY,OAAO,CAAC;IACtC,IAAI,CAAC4P,IAAI,EAAEA,IAAI,GAAG,IAAI,CAACH,OAAO,CAAC,KAAK,EAAEzP,OAAO,CAAC;IAC9C,IAAI,CAAC4P,IAAI,EAAE,OAAO,EAAE;IACpB,OAAOA,IAAI,CAACV,eAAe,CAAC,CAAC,CAACC,gBAAgB,CAACe,IAAI,CAAC,CAACC,eAAe,EAAEC,eAAe,KAAK3B,aAAa,CAAC0B,eAAe,CAAC,GAAG1B,aAAa,CAAC2B,eAAe,CAAC,CAAC,CAAC9R,GAAG,CAAC+R,cAAc,IAAI,GAAG,IAAI,CAACrQ,OAAO,CAACsQ,OAAO,GAAGtQ,OAAO,CAACqI,OAAO,GAAG,UAAU,IAAI,CAACrI,OAAO,CAACsQ,OAAO,EAAE,GAAG,EAAE,GAAGD,cAAc,EAAE,CAAC;EACxR;EACAlI,SAASA,CAAC/I,IAAI,EAAE2I,KAAK,EAAE/H,OAAO,GAAG,CAAC,CAAC,EAAE;IACnC,MAAM4P,IAAI,GAAG,IAAI,CAACH,OAAO,CAACrQ,IAAI,EAAEY,OAAO,CAAC;IACxC,IAAI4P,IAAI,EAAE;MACR,OAAO,GAAG,IAAI,CAAC5P,OAAO,CAACsQ,OAAO,GAAGtQ,OAAO,CAACqI,OAAO,GAAG,UAAU,IAAI,CAACrI,OAAO,CAACsQ,OAAO,EAAE,GAAG,EAAE,GAAGV,IAAI,CAACX,MAAM,CAAClH,KAAK,CAAC,EAAE;IACjH;IACA,IAAI,CAAC5H,MAAM,CAACT,IAAI,CAAC,6BAA6BN,IAAI,EAAE,CAAC;IACrD,OAAO,IAAI,CAAC+I,SAAS,CAAC,KAAK,EAAEJ,KAAK,EAAE/H,OAAO,CAAC;EAC9C;AACF;AAEA,MAAMuQ,oBAAoB,GAAGA,CAACtU,IAAI,EAAEC,WAAW,EAAE7B,GAAG,EAAE4D,YAAY,GAAG,GAAG,EAAE8D,mBAAmB,GAAG,IAAI,KAAK;EACvG,IAAIrH,IAAI,GAAGsB,mBAAmB,CAACC,IAAI,EAAEC,WAAW,EAAE7B,GAAG,CAAC;EACtD,IAAI,CAACK,IAAI,IAAIqH,mBAAmB,IAAI7I,QAAQ,CAACmB,GAAG,CAAC,EAAE;IACjDK,IAAI,GAAGkE,QAAQ,CAAC3C,IAAI,EAAE5B,GAAG,EAAE4D,YAAY,CAAC;IACxC,IAAIvD,IAAI,KAAKa,SAAS,EAAEb,IAAI,GAAGkE,QAAQ,CAAC1C,WAAW,EAAE7B,GAAG,EAAE4D,YAAY,CAAC;EACzE;EACA,OAAOvD,IAAI;AACb,CAAC;AACD,MAAM8V,SAAS,GAAGC,GAAG,IAAIA,GAAG,CAAClW,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC;AACnD,MAAMmW,YAAY,CAAC;EACjB3T,WAAWA,CAACiD,OAAO,GAAG,CAAC,CAAC,EAAE;IACxB,IAAI,CAACG,MAAM,GAAGS,UAAU,CAACH,MAAM,CAAC,cAAc,CAAC;IAC/C,IAAI,CAACT,OAAO,GAAGA,OAAO;IACtB,IAAI,CAAC2Q,MAAM,GAAG3Q,OAAO,EAAE0F,aAAa,EAAEiL,MAAM,KAAKxU,KAAK,IAAIA,KAAK,CAAC;IAChE,IAAI,CAAC8D,IAAI,CAACD,OAAO,CAAC;EACpB;EACAC,IAAIA,CAACD,OAAO,GAAG,CAAC,CAAC,EAAE;IACjB,IAAI,CAACA,OAAO,CAAC0F,aAAa,EAAE1F,OAAO,CAAC0F,aAAa,GAAG;MAClDkL,WAAW,EAAE;IACf,CAAC;IACD,MAAM;MACJ/T,MAAM,EAAEgU,QAAQ;MAChBD,WAAW;MACXE,mBAAmB;MACnB5Q,MAAM;MACN6Q,aAAa;MACbvG,MAAM;MACNwG,aAAa;MACbC,eAAe;MACfC,cAAc;MACdC,cAAc;MACdC,aAAa;MACbC,oBAAoB;MACpBC,aAAa;MACbC,oBAAoB;MACpBC,uBAAuB;MACvBC,WAAW;MACXC;IACF,CAAC,GAAG1R,OAAO,CAAC0F,aAAa;IACzB,IAAI,CAAC7I,MAAM,GAAGgU,QAAQ,KAAKtV,SAAS,GAAGsV,QAAQ,GAAGhU,MAAM;IACxD,IAAI,CAAC+T,WAAW,GAAGA,WAAW,KAAKrV,SAAS,GAAGqV,WAAW,GAAG,IAAI;IACjE,IAAI,CAACE,mBAAmB,GAAGA,mBAAmB,KAAKvV,SAAS,GAAGuV,mBAAmB,GAAG,KAAK;IAC1F,IAAI,CAAC5Q,MAAM,GAAGA,MAAM,GAAGxD,WAAW,CAACwD,MAAM,CAAC,GAAG6Q,aAAa,IAAI,IAAI;IAClE,IAAI,CAACvG,MAAM,GAAGA,MAAM,GAAG9N,WAAW,CAAC8N,MAAM,CAAC,GAAGwG,aAAa,IAAI,IAAI;IAClE,IAAI,CAACC,eAAe,GAAGA,eAAe,IAAI,GAAG;IAC7C,IAAI,CAACE,cAAc,GAAGD,cAAc,GAAG,EAAE,GAAGC,cAAc,IAAI,GAAG;IACjE,IAAI,CAACD,cAAc,GAAG,IAAI,CAACC,cAAc,GAAG,EAAE,GAAGD,cAAc,IAAI,EAAE;IACrE,IAAI,CAACE,aAAa,GAAGA,aAAa,GAAG1U,WAAW,CAAC0U,aAAa,CAAC,GAAGC,oBAAoB,IAAI3U,WAAW,CAAC,KAAK,CAAC;IAC5G,IAAI,CAAC4U,aAAa,GAAGA,aAAa,GAAG5U,WAAW,CAAC4U,aAAa,CAAC,GAAGC,oBAAoB,IAAI7U,WAAW,CAAC,GAAG,CAAC;IAC1G,IAAI,CAAC8U,uBAAuB,GAAGA,uBAAuB,IAAI,GAAG;IAC7D,IAAI,CAACC,WAAW,GAAGA,WAAW,IAAI,IAAI;IACtC,IAAI,CAACC,YAAY,GAAGA,YAAY,KAAKnW,SAAS,GAAGmW,YAAY,GAAG,KAAK;IACrE,IAAI,CAACC,WAAW,CAAC,CAAC;EACpB;EACAtG,KAAKA,CAAA,EAAG;IACN,IAAI,IAAI,CAACrL,OAAO,EAAE,IAAI,CAACC,IAAI,CAAC,IAAI,CAACD,OAAO,CAAC;EAC3C;EACA2R,WAAWA,CAAA,EAAG;IACZ,MAAMC,gBAAgB,GAAGA,CAACC,cAAc,EAAExU,OAAO,KAAK;MACpD,IAAIwU,cAAc,EAAEvV,MAAM,KAAKe,OAAO,EAAE;QACtCwU,cAAc,CAACC,SAAS,GAAG,CAAC;QAC5B,OAAOD,cAAc;MACvB;MACA,OAAO,IAAIpU,MAAM,CAACJ,OAAO,EAAE,GAAG,CAAC;IACjC,CAAC;IACD,IAAI,CAAC0U,MAAM,GAAGH,gBAAgB,CAAC,IAAI,CAACG,MAAM,EAAE,GAAG,IAAI,CAAC7R,MAAM,QAAQ,IAAI,CAACsK,MAAM,EAAE,CAAC;IAChF,IAAI,CAACwH,cAAc,GAAGJ,gBAAgB,CAAC,IAAI,CAACI,cAAc,EAAE,GAAG,IAAI,CAAC9R,MAAM,GAAG,IAAI,CAACiR,cAAc,QAAQ,IAAI,CAACD,cAAc,GAAG,IAAI,CAAC1G,MAAM,EAAE,CAAC;IAC5I,IAAI,CAACjE,aAAa,GAAGqL,gBAAgB,CAAC,IAAI,CAACrL,aAAa,EAAE,GAAG,IAAI,CAAC6K,aAAa,oEAAoE,IAAI,CAACE,aAAa,EAAE,CAAC;EAC1K;EACAtG,WAAWA,CAACrO,GAAG,EAAEV,IAAI,EAAEoG,GAAG,EAAErC,OAAO,EAAE;IACnC,IAAIqG,KAAK;IACT,IAAIlK,KAAK;IACT,IAAI8V,QAAQ;IACZ,MAAM/V,WAAW,GAAG,IAAI,CAAC8D,OAAO,IAAI,IAAI,CAACA,OAAO,CAAC0F,aAAa,IAAI,IAAI,CAAC1F,OAAO,CAAC0F,aAAa,CAACiF,gBAAgB,IAAI,CAAC,CAAC;IACnH,MAAMuH,YAAY,GAAG7X,GAAG,IAAI;MAC1B,IAAIA,GAAG,CAACC,OAAO,CAAC,IAAI,CAAC2W,eAAe,CAAC,GAAG,CAAC,EAAE;QACzC,MAAMvW,IAAI,GAAG6V,oBAAoB,CAACtU,IAAI,EAAEC,WAAW,EAAE7B,GAAG,EAAE,IAAI,CAAC2F,OAAO,CAAC/B,YAAY,EAAE,IAAI,CAAC+B,OAAO,CAAC+B,mBAAmB,CAAC;QACtH,OAAO,IAAI,CAAC2P,YAAY,GAAG,IAAI,CAACf,MAAM,CAACjW,IAAI,EAAEa,SAAS,EAAE8G,GAAG,EAAE;UAC3D,GAAGrC,OAAO;UACV,GAAG/D,IAAI;UACPkW,gBAAgB,EAAE9X;QACpB,CAAC,CAAC,GAAGK,IAAI;MACX;MACA,MAAMe,CAAC,GAAGpB,GAAG,CAACQ,KAAK,CAAC,IAAI,CAACoW,eAAe,CAAC;MACzC,MAAM7V,CAAC,GAAGK,CAAC,CAACkC,KAAK,CAAC,CAAC,CAACyU,IAAI,CAAC,CAAC;MAC1B,MAAMC,CAAC,GAAG5W,CAAC,CAAC8C,IAAI,CAAC,IAAI,CAAC0S,eAAe,CAAC,CAACmB,IAAI,CAAC,CAAC;MAC7C,OAAO,IAAI,CAACzB,MAAM,CAACJ,oBAAoB,CAACtU,IAAI,EAAEC,WAAW,EAAEd,CAAC,EAAE,IAAI,CAAC4E,OAAO,CAAC/B,YAAY,EAAE,IAAI,CAAC+B,OAAO,CAAC+B,mBAAmB,CAAC,EAAEsQ,CAAC,EAAEhQ,GAAG,EAAE;QAClI,GAAGrC,OAAO;QACV,GAAG/D,IAAI;QACPkW,gBAAgB,EAAE/W;MACpB,CAAC,CAAC;IACJ,CAAC;IACD,IAAI,CAACuW,WAAW,CAAC,CAAC;IAClB,MAAMW,2BAA2B,GAAGtS,OAAO,EAAEsS,2BAA2B,IAAI,IAAI,CAACtS,OAAO,CAACsS,2BAA2B;IACpH,MAAMzH,eAAe,GAAG7K,OAAO,EAAE0F,aAAa,EAAEmF,eAAe,KAAKtP,SAAS,GAAGyE,OAAO,CAAC0F,aAAa,CAACmF,eAAe,GAAG,IAAI,CAAC7K,OAAO,CAAC0F,aAAa,CAACmF,eAAe;IAClK,MAAM0H,KAAK,GAAG,CAAC;MACbC,KAAK,EAAE,IAAI,CAACR,cAAc;MAC1BS,SAAS,EAAEhC,GAAG,IAAID,SAAS,CAACC,GAAG;IACjC,CAAC,EAAE;MACD+B,KAAK,EAAE,IAAI,CAACT,MAAM;MAClBU,SAAS,EAAEhC,GAAG,IAAI,IAAI,CAACG,WAAW,GAAGJ,SAAS,CAAC,IAAI,CAAC3T,MAAM,CAAC4T,GAAG,CAAC,CAAC,GAAGD,SAAS,CAACC,GAAG;IAClF,CAAC,CAAC;IACF8B,KAAK,CAACtY,OAAO,CAACyY,IAAI,IAAI;MACpBT,QAAQ,GAAG,CAAC;MACZ,OAAO5L,KAAK,GAAGqM,IAAI,CAACF,KAAK,CAACG,IAAI,CAAChW,GAAG,CAAC,EAAE;QACnC,MAAMiW,UAAU,GAAGvM,KAAK,CAAC,CAAC,CAAC,CAAC+L,IAAI,CAAC,CAAC;QAClCjW,KAAK,GAAG+V,YAAY,CAACU,UAAU,CAAC;QAChC,IAAIzW,KAAK,KAAKZ,SAAS,EAAE;UACvB,IAAI,OAAO+W,2BAA2B,KAAK,UAAU,EAAE;YACrD,MAAMO,IAAI,GAAGP,2BAA2B,CAAC3V,GAAG,EAAE0J,KAAK,EAAErG,OAAO,CAAC;YAC7D7D,KAAK,GAAGjD,QAAQ,CAAC2Z,IAAI,CAAC,GAAGA,IAAI,GAAG,EAAE;UACpC,CAAC,MAAM,IAAI7S,OAAO,IAAIhF,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAAC6E,OAAO,EAAE4S,UAAU,CAAC,EAAE;YAC/EzW,KAAK,GAAG,EAAE;UACZ,CAAC,MAAM,IAAI0O,eAAe,EAAE;YAC1B1O,KAAK,GAAGkK,KAAK,CAAC,CAAC,CAAC;YAChB;UACF,CAAC,MAAM;YACL,IAAI,CAAClG,MAAM,CAACT,IAAI,CAAC,8BAA8BkT,UAAU,sBAAsBjW,GAAG,EAAE,CAAC;YACrFR,KAAK,GAAG,EAAE;UACZ;QACF,CAAC,MAAM,IAAI,CAACjD,QAAQ,CAACiD,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC2U,mBAAmB,EAAE;UACxD3U,KAAK,GAAGxC,UAAU,CAACwC,KAAK,CAAC;QAC3B;QACA,MAAMsW,SAAS,GAAGC,IAAI,CAACD,SAAS,CAACtW,KAAK,CAAC;QACvCQ,GAAG,GAAGA,GAAG,CAACpC,OAAO,CAAC8L,KAAK,CAAC,CAAC,CAAC,EAAEoM,SAAS,CAAC;QACtC,IAAI5H,eAAe,EAAE;UACnB6H,IAAI,CAACF,KAAK,CAACV,SAAS,IAAI3V,KAAK,CAACpB,MAAM;UACpC2X,IAAI,CAACF,KAAK,CAACV,SAAS,IAAIzL,KAAK,CAAC,CAAC,CAAC,CAACtL,MAAM;QACzC,CAAC,MAAM;UACL2X,IAAI,CAACF,KAAK,CAACV,SAAS,GAAG,CAAC;QAC1B;QACAG,QAAQ,EAAE;QACV,IAAIA,QAAQ,IAAI,IAAI,CAACR,WAAW,EAAE;UAChC;QACF;MACF;IACF,CAAC,CAAC;IACF,OAAO9U,GAAG;EACZ;EACAwO,IAAIA,CAACxO,GAAG,EAAE6R,EAAE,EAAExO,OAAO,GAAG,CAAC,CAAC,EAAE;IAC1B,IAAIqG,KAAK;IACT,IAAIlK,KAAK;IACT,IAAI2W,aAAa;IACjB,MAAMC,gBAAgB,GAAGA,CAAC1Y,GAAG,EAAE2Y,gBAAgB,KAAK;MAClD,MAAMC,GAAG,GAAG,IAAI,CAACzB,uBAAuB;MACxC,IAAInX,GAAG,CAACC,OAAO,CAAC2Y,GAAG,CAAC,GAAG,CAAC,EAAE,OAAO5Y,GAAG;MACpC,MAAM+D,CAAC,GAAG/D,GAAG,CAACQ,KAAK,CAAC,IAAI4C,MAAM,CAAC,GAAGwV,GAAG,OAAO,CAAC,CAAC;MAC9C,IAAIC,aAAa,GAAG,IAAI9U,CAAC,CAAC,CAAC,CAAC,EAAE;MAC9B/D,GAAG,GAAG+D,CAAC,CAAC,CAAC,CAAC;MACV8U,aAAa,GAAG,IAAI,CAAClI,WAAW,CAACkI,aAAa,EAAEJ,aAAa,CAAC;MAC9D,MAAMK,mBAAmB,GAAGD,aAAa,CAAC7M,KAAK,CAAC,IAAI,CAAC;MACrD,MAAM+M,mBAAmB,GAAGF,aAAa,CAAC7M,KAAK,CAAC,IAAI,CAAC;MACrD,IAAI,CAAC8M,mBAAmB,EAAEpY,MAAM,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAACqY,mBAAmB,IAAIA,mBAAmB,CAACrY,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE;QAChHmY,aAAa,GAAGA,aAAa,CAAC3Y,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;MAClD;MACA,IAAI;QACFuY,aAAa,GAAG9P,IAAI,CAACC,KAAK,CAACiQ,aAAa,CAAC;QACzC,IAAIF,gBAAgB,EAAEF,aAAa,GAAG;UACpC,GAAGE,gBAAgB;UACnB,GAAGF;QACL,CAAC;MACH,CAAC,CAAC,OAAOtX,CAAC,EAAE;QACV,IAAI,CAAC2E,MAAM,CAACT,IAAI,CAAC,oDAAoDrF,GAAG,EAAE,EAAEmB,CAAC,CAAC;QAC9E,OAAO,GAAGnB,GAAG,GAAG4Y,GAAG,GAAGC,aAAa,EAAE;MACvC;MACA,IAAIJ,aAAa,CAACvK,YAAY,IAAIuK,aAAa,CAACvK,YAAY,CAACjO,OAAO,CAAC,IAAI,CAAC4F,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO4S,aAAa,CAACvK,YAAY;MACzH,OAAOlO,GAAG;IACZ,CAAC;IACD,OAAOgM,KAAK,GAAG,IAAI,CAACE,aAAa,CAACoM,IAAI,CAAChW,GAAG,CAAC,EAAE;MAC3C,IAAI0W,UAAU,GAAG,EAAE;MACnBP,aAAa,GAAG;QACd,GAAG9S;MACL,CAAC;MACD8S,aAAa,GAAGA,aAAa,CAACvY,OAAO,IAAI,CAACrB,QAAQ,CAAC4Z,aAAa,CAACvY,OAAO,CAAC,GAAGuY,aAAa,CAACvY,OAAO,GAAGuY,aAAa;MACjHA,aAAa,CAACtH,kBAAkB,GAAG,KAAK;MACxC,OAAOsH,aAAa,CAACvK,YAAY;MACjC,MAAM+K,WAAW,GAAG,MAAM,CAAC7U,IAAI,CAAC4H,KAAK,CAAC,CAAC,CAAC,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC,CAACkN,WAAW,CAAC,GAAG,CAAC,GAAG,CAAC,GAAGlN,KAAK,CAAC,CAAC,CAAC,CAAC/L,OAAO,CAAC,IAAI,CAAC2W,eAAe,CAAC;MAClH,IAAIqC,WAAW,KAAK,CAAC,CAAC,EAAE;QACtBD,UAAU,GAAGhN,KAAK,CAAC,CAAC,CAAC,CAAC3K,KAAK,CAAC4X,WAAW,CAAC,CAACzY,KAAK,CAAC,IAAI,CAACoW,eAAe,CAAC,CAAC3S,GAAG,CAACkV,IAAI,IAAIA,IAAI,CAACpB,IAAI,CAAC,CAAC,CAAC,CAACjU,MAAM,CAACsV,OAAO,CAAC;QAC7GpN,KAAK,CAAC,CAAC,CAAC,GAAGA,KAAK,CAAC,CAAC,CAAC,CAAC3K,KAAK,CAAC,CAAC,EAAE4X,WAAW,CAAC;MAC3C;MACAnX,KAAK,GAAGqS,EAAE,CAACuE,gBAAgB,CAAC5X,IAAI,CAAC,IAAI,EAAEkL,KAAK,CAAC,CAAC,CAAC,CAAC+L,IAAI,CAAC,CAAC,EAAEU,aAAa,CAAC,EAAEA,aAAa,CAAC;MACtF,IAAI3W,KAAK,IAAIkK,KAAK,CAAC,CAAC,CAAC,KAAK1J,GAAG,IAAI,CAACzD,QAAQ,CAACiD,KAAK,CAAC,EAAE,OAAOA,KAAK;MAC/D,IAAI,CAACjD,QAAQ,CAACiD,KAAK,CAAC,EAAEA,KAAK,GAAGxC,UAAU,CAACwC,KAAK,CAAC;MAC/C,IAAI,CAACA,KAAK,EAAE;QACV,IAAI,CAACgE,MAAM,CAACT,IAAI,CAAC,qBAAqB2G,KAAK,CAAC,CAAC,CAAC,gBAAgB1J,GAAG,EAAE,CAAC;QACpER,KAAK,GAAG,EAAE;MACZ;MACA,IAAIkX,UAAU,CAACtY,MAAM,EAAE;QACrBoB,KAAK,GAAGkX,UAAU,CAACK,MAAM,CAAC,CAAC/P,CAAC,EAAE0O,CAAC,KAAK,IAAI,CAAC1B,MAAM,CAAChN,CAAC,EAAE0O,CAAC,EAAErS,OAAO,CAACqC,GAAG,EAAE;UACjE,GAAGrC,OAAO;UACVmS,gBAAgB,EAAE9L,KAAK,CAAC,CAAC,CAAC,CAAC+L,IAAI,CAAC;QAClC,CAAC,CAAC,EAAEjW,KAAK,CAACiW,IAAI,CAAC,CAAC,CAAC;MACnB;MACAzV,GAAG,GAAGA,GAAG,CAACpC,OAAO,CAAC8L,KAAK,CAAC,CAAC,CAAC,EAAElK,KAAK,CAAC;MAClC,IAAI,CAAC4V,MAAM,CAACD,SAAS,GAAG,CAAC;IAC3B;IACA,OAAOnV,GAAG;EACZ;AACF;AAEA,MAAMgX,cAAc,GAAGC,SAAS,IAAI;EAClC,IAAIC,UAAU,GAAGD,SAAS,CAAC5M,WAAW,CAAC,CAAC,CAACoL,IAAI,CAAC,CAAC;EAC/C,MAAM0B,aAAa,GAAG,CAAC,CAAC;EACxB,IAAIF,SAAS,CAACtZ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE;IAC/B,MAAMmB,CAAC,GAAGmY,SAAS,CAAC/Y,KAAK,CAAC,GAAG,CAAC;IAC9BgZ,UAAU,GAAGpY,CAAC,CAAC,CAAC,CAAC,CAACuL,WAAW,CAAC,CAAC,CAACoL,IAAI,CAAC,CAAC;IACtC,MAAM2B,MAAM,GAAGtY,CAAC,CAAC,CAAC,CAAC,CAACkD,SAAS,CAAC,CAAC,EAAElD,CAAC,CAAC,CAAC,CAAC,CAACV,MAAM,GAAG,CAAC,CAAC;IACjD,IAAI8Y,UAAU,KAAK,UAAU,IAAIE,MAAM,CAACzZ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;MACxD,IAAI,CAACwZ,aAAa,CAACE,QAAQ,EAAEF,aAAa,CAACE,QAAQ,GAAGD,MAAM,CAAC3B,IAAI,CAAC,CAAC;IACrE,CAAC,MAAM,IAAIyB,UAAU,KAAK,cAAc,IAAIE,MAAM,CAACzZ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;MACnE,IAAI,CAACwZ,aAAa,CAACG,KAAK,EAAEH,aAAa,CAACG,KAAK,GAAGF,MAAM,CAAC3B,IAAI,CAAC,CAAC;IAC/D,CAAC,MAAM;MACL,MAAMnN,IAAI,GAAG8O,MAAM,CAAClZ,KAAK,CAAC,GAAG,CAAC;MAC9BoK,IAAI,CAAChL,OAAO,CAAC0L,GAAG,IAAI;QAClB,IAAIA,GAAG,EAAE;UACP,MAAM,CAACtL,GAAG,EAAE,GAAG6Z,IAAI,CAAC,GAAGvO,GAAG,CAAC9K,KAAK,CAAC,GAAG,CAAC;UACrC,MAAM4V,GAAG,GAAGyD,IAAI,CAAC3V,IAAI,CAAC,GAAG,CAAC,CAAC6T,IAAI,CAAC,CAAC,CAAC7X,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC;UACzD,MAAM4Z,UAAU,GAAG9Z,GAAG,CAAC+X,IAAI,CAAC,CAAC;UAC7B,IAAI,CAAC0B,aAAa,CAACK,UAAU,CAAC,EAAEL,aAAa,CAACK,UAAU,CAAC,GAAG1D,GAAG;UAC/D,IAAIA,GAAG,KAAK,OAAO,EAAEqD,aAAa,CAACK,UAAU,CAAC,GAAG,KAAK;UACtD,IAAI1D,GAAG,KAAK,MAAM,EAAEqD,aAAa,CAACK,UAAU,CAAC,GAAG,IAAI;UACpD,IAAI,CAACC,KAAK,CAAC3D,GAAG,CAAC,EAAEqD,aAAa,CAACK,UAAU,CAAC,GAAGE,QAAQ,CAAC5D,GAAG,EAAE,EAAE,CAAC;QAChE;MACF,CAAC,CAAC;IACJ;EACF;EACA,OAAO;IACLoD,UAAU;IACVC;EACF,CAAC;AACH,CAAC;AACD,MAAMQ,qBAAqB,GAAGC,EAAE,IAAI;EAClC,MAAMC,KAAK,GAAG,CAAC,CAAC;EAChB,OAAO,CAAC7Q,CAAC,EAAEoG,CAAC,EAAEtE,CAAC,KAAK;IAClB,IAAIgP,WAAW,GAAGhP,CAAC;IACnB,IAAIA,CAAC,IAAIA,CAAC,CAAC0M,gBAAgB,IAAI1M,CAAC,CAACiP,YAAY,IAAIjP,CAAC,CAACiP,YAAY,CAACjP,CAAC,CAAC0M,gBAAgB,CAAC,IAAI1M,CAAC,CAACA,CAAC,CAAC0M,gBAAgB,CAAC,EAAE;MAC5GsC,WAAW,GAAG;QACZ,GAAGA,WAAW;QACd,CAAChP,CAAC,CAAC0M,gBAAgB,GAAG5W;MACxB,CAAC;IACH;IACA,MAAMlB,GAAG,GAAG0P,CAAC,GAAG/G,IAAI,CAACE,SAAS,CAACuR,WAAW,CAAC;IAC3C,IAAIE,GAAG,GAAGH,KAAK,CAACna,GAAG,CAAC;IACpB,IAAI,CAACsa,GAAG,EAAE;MACRA,GAAG,GAAGJ,EAAE,CAACpV,cAAc,CAAC4K,CAAC,CAAC,EAAEtE,CAAC,CAAC;MAC9B+O,KAAK,CAACna,GAAG,CAAC,GAAGsa,GAAG;IAClB;IACA,OAAOA,GAAG,CAAChR,CAAC,CAAC;EACf,CAAC;AACH,CAAC;AACD,MAAMiR,wBAAwB,GAAGL,EAAE,IAAI,CAAC5Q,CAAC,EAAEoG,CAAC,EAAEtE,CAAC,KAAK8O,EAAE,CAACpV,cAAc,CAAC4K,CAAC,CAAC,EAAEtE,CAAC,CAAC,CAAC9B,CAAC,CAAC;AAC/E,MAAMkR,SAAS,CAAC;EACd9X,WAAWA,CAACiD,OAAO,GAAG,CAAC,CAAC,EAAE;IACxB,IAAI,CAACG,MAAM,GAAGS,UAAU,CAACH,MAAM,CAAC,WAAW,CAAC;IAC5C,IAAI,CAACT,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,IAAI,CAACD,OAAO,CAAC;EACpB;EACAC,IAAIA,CAACoF,QAAQ,EAAErF,OAAO,GAAG;IACvB0F,aAAa,EAAE,CAAC;EAClB,CAAC,EAAE;IACD,IAAI,CAACuL,eAAe,GAAGjR,OAAO,CAAC0F,aAAa,CAACuL,eAAe,IAAI,GAAG;IACnE,MAAM6D,EAAE,GAAG9U,OAAO,CAAC+U,mBAAmB,GAAGT,qBAAqB,GAAGM,wBAAwB;IACzF,IAAI,CAACI,OAAO,GAAG;MACbC,MAAM,EAAEH,EAAE,CAAC,CAACzS,GAAG,EAAEsD,GAAG,KAAK;QACvB,MAAMuP,SAAS,GAAG,IAAI3H,IAAI,CAAC4H,YAAY,CAAC9S,GAAG,EAAE;UAC3C,GAAGsD;QACL,CAAC,CAAC;QACF,OAAO8K,GAAG,IAAIyE,SAAS,CAACvE,MAAM,CAACF,GAAG,CAAC;MACrC,CAAC,CAAC;MACFuD,QAAQ,EAAEc,EAAE,CAAC,CAACzS,GAAG,EAAEsD,GAAG,KAAK;QACzB,MAAMuP,SAAS,GAAG,IAAI3H,IAAI,CAAC4H,YAAY,CAAC9S,GAAG,EAAE;UAC3C,GAAGsD,GAAG;UACNyP,KAAK,EAAE;QACT,CAAC,CAAC;QACF,OAAO3E,GAAG,IAAIyE,SAAS,CAACvE,MAAM,CAACF,GAAG,CAAC;MACrC,CAAC,CAAC;MACF4E,QAAQ,EAAEP,EAAE,CAAC,CAACzS,GAAG,EAAEsD,GAAG,KAAK;QACzB,MAAMuP,SAAS,GAAG,IAAI3H,IAAI,CAAC+H,cAAc,CAACjT,GAAG,EAAE;UAC7C,GAAGsD;QACL,CAAC,CAAC;QACF,OAAO8K,GAAG,IAAIyE,SAAS,CAACvE,MAAM,CAACF,GAAG,CAAC;MACrC,CAAC,CAAC;MACF8E,YAAY,EAAET,EAAE,CAAC,CAACzS,GAAG,EAAEsD,GAAG,KAAK;QAC7B,MAAMuP,SAAS,GAAG,IAAI3H,IAAI,CAACiI,kBAAkB,CAACnT,GAAG,EAAE;UACjD,GAAGsD;QACL,CAAC,CAAC;QACF,OAAO8K,GAAG,IAAIyE,SAAS,CAACvE,MAAM,CAACF,GAAG,EAAE9K,GAAG,CAACsO,KAAK,IAAI,KAAK,CAAC;MACzD,CAAC,CAAC;MACFwB,IAAI,EAAEX,EAAE,CAAC,CAACzS,GAAG,EAAEsD,GAAG,KAAK;QACrB,MAAMuP,SAAS,GAAG,IAAI3H,IAAI,CAACmI,UAAU,CAACrT,GAAG,EAAE;UACzC,GAAGsD;QACL,CAAC,CAAC;QACF,OAAO8K,GAAG,IAAIyE,SAAS,CAACvE,MAAM,CAACF,GAAG,CAAC;MACrC,CAAC;IACH,CAAC;EACH;EACAkF,GAAGA,CAAC1R,IAAI,EAAEuK,EAAE,EAAE;IACZ,IAAI,CAACwG,OAAO,CAAC/Q,IAAI,CAAC+C,WAAW,CAAC,CAAC,CAACoL,IAAI,CAAC,CAAC,CAAC,GAAG5D,EAAE;EAC9C;EACAoH,SAASA,CAAC3R,IAAI,EAAEuK,EAAE,EAAE;IAClB,IAAI,CAACwG,OAAO,CAAC/Q,IAAI,CAAC+C,WAAW,CAAC,CAAC,CAACoL,IAAI,CAAC,CAAC,CAAC,GAAGkC,qBAAqB,CAAC9F,EAAE,CAAC;EACrE;EACAmC,MAAMA,CAACxU,KAAK,EAAEwU,MAAM,EAAEtO,GAAG,EAAErC,OAAO,GAAG,CAAC,CAAC,EAAE;IACvC,MAAMgV,OAAO,GAAGrE,MAAM,CAAC9V,KAAK,CAAC,IAAI,CAACoW,eAAe,CAAC;IAClD,IAAI+D,OAAO,CAACja,MAAM,GAAG,CAAC,IAAIia,OAAO,CAAC,CAAC,CAAC,CAAC1a,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI0a,OAAO,CAAC,CAAC,CAAC,CAAC1a,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI0a,OAAO,CAACtR,IAAI,CAAC2O,CAAC,IAAIA,CAAC,CAAC/X,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;MAC9H,MAAMwX,SAAS,GAAGkD,OAAO,CAACa,SAAS,CAACxD,CAAC,IAAIA,CAAC,CAAC/X,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;MAC7D0a,OAAO,CAAC,CAAC,CAAC,GAAG,CAACA,OAAO,CAAC,CAAC,CAAC,EAAE,GAAGA,OAAO,CAAC7S,MAAM,CAAC,CAAC,EAAE2P,SAAS,CAAC,CAAC,CAACvT,IAAI,CAAC,IAAI,CAAC0S,eAAe,CAAC;IACvF;IACA,MAAM1O,MAAM,GAAGyS,OAAO,CAACtB,MAAM,CAAC,CAACoC,GAAG,EAAEzD,CAAC,KAAK;MACxC,MAAM;QACJwB,UAAU;QACVC;MACF,CAAC,GAAGH,cAAc,CAACtB,CAAC,CAAC;MACrB,IAAI,IAAI,CAAC2C,OAAO,CAACnB,UAAU,CAAC,EAAE;QAC5B,IAAIkC,SAAS,GAAGD,GAAG;QACnB,IAAI;UACF,MAAME,UAAU,GAAGhW,OAAO,EAAE0U,YAAY,GAAG1U,OAAO,CAACmS,gBAAgB,CAAC,IAAI,CAAC,CAAC;UAC1E,MAAMpI,CAAC,GAAGiM,UAAU,CAACC,MAAM,IAAID,UAAU,CAAC3T,GAAG,IAAIrC,OAAO,CAACiW,MAAM,IAAIjW,OAAO,CAACqC,GAAG,IAAIA,GAAG;UACrF0T,SAAS,GAAG,IAAI,CAACf,OAAO,CAACnB,UAAU,CAAC,CAACiC,GAAG,EAAE/L,CAAC,EAAE;YAC3C,GAAG+J,aAAa;YAChB,GAAG9T,OAAO;YACV,GAAGgW;UACL,CAAC,CAAC;QACJ,CAAC,CAAC,OAAOrW,KAAK,EAAE;UACd,IAAI,CAACQ,MAAM,CAACT,IAAI,CAACC,KAAK,CAAC;QACzB;QACA,OAAOoW,SAAS;MAClB,CAAC,MAAM;QACL,IAAI,CAAC5V,MAAM,CAACT,IAAI,CAAC,oCAAoCmU,UAAU,EAAE,CAAC;MACpE;MACA,OAAOiC,GAAG;IACZ,CAAC,EAAE3Z,KAAK,CAAC;IACT,OAAOoG,MAAM;EACf;AACF;AAEA,MAAM2T,aAAa,GAAGA,CAACC,CAAC,EAAElS,IAAI,KAAK;EACjC,IAAIkS,CAAC,CAACC,OAAO,CAACnS,IAAI,CAAC,KAAK1I,SAAS,EAAE;IACjC,OAAO4a,CAAC,CAACC,OAAO,CAACnS,IAAI,CAAC;IACtBkS,CAAC,CAACE,YAAY,EAAE;EAClB;AACF,CAAC;AACD,MAAMC,SAAS,SAASzV,YAAY,CAAC;EACnC9D,WAAWA,CAACwZ,OAAO,EAAEC,KAAK,EAAEnR,QAAQ,EAAErF,OAAO,GAAG,CAAC,CAAC,EAAE;IAClD,KAAK,CAAC,CAAC;IACP,IAAI,CAACuW,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACnR,QAAQ,GAAGA,QAAQ;IACxB,IAAI,CAACoE,aAAa,GAAGpE,QAAQ,CAACoE,aAAa;IAC3C,IAAI,CAACzJ,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACG,MAAM,GAAGS,UAAU,CAACH,MAAM,CAAC,kBAAkB,CAAC;IACnD,IAAI,CAACgW,YAAY,GAAG,EAAE;IACtB,IAAI,CAACC,gBAAgB,GAAG1W,OAAO,CAAC0W,gBAAgB,IAAI,EAAE;IACtD,IAAI,CAACC,YAAY,GAAG,CAAC;IACrB,IAAI,CAACC,UAAU,GAAG5W,OAAO,CAAC4W,UAAU,IAAI,CAAC,GAAG5W,OAAO,CAAC4W,UAAU,GAAG,CAAC;IAClE,IAAI,CAACC,YAAY,GAAG7W,OAAO,CAAC6W,YAAY,IAAI,CAAC,GAAG7W,OAAO,CAAC6W,YAAY,GAAG,GAAG;IAC1E,IAAI,CAACpS,KAAK,GAAG,CAAC,CAAC;IACf,IAAI,CAACqS,KAAK,GAAG,EAAE;IACf,IAAI,CAACP,OAAO,EAAEtW,IAAI,GAAGoF,QAAQ,EAAErF,OAAO,CAACuW,OAAO,EAAEvW,OAAO,CAAC;EAC1D;EACA+W,SAASA,CAACC,SAAS,EAAEhR,UAAU,EAAEhG,OAAO,EAAEiX,QAAQ,EAAE;IAClD,MAAMC,MAAM,GAAG,CAAC,CAAC;IACjB,MAAMd,OAAO,GAAG,CAAC,CAAC;IAClB,MAAMe,eAAe,GAAG,CAAC,CAAC;IAC1B,MAAMC,gBAAgB,GAAG,CAAC,CAAC;IAC3BJ,SAAS,CAAC/c,OAAO,CAACoI,GAAG,IAAI;MACvB,IAAIgV,gBAAgB,GAAG,IAAI;MAC3BrR,UAAU,CAAC/L,OAAO,CAAC4H,EAAE,IAAI;QACvB,MAAMoC,IAAI,GAAG,GAAG5B,GAAG,IAAIR,EAAE,EAAE;QAC3B,IAAI,CAAC7B,OAAO,CAACsX,MAAM,IAAI,IAAI,CAACd,KAAK,CAACpT,iBAAiB,CAACf,GAAG,EAAER,EAAE,CAAC,EAAE;UAC5D,IAAI,CAAC4C,KAAK,CAACR,IAAI,CAAC,GAAG,CAAC;QACtB,CAAC,MAAM,IAAI,IAAI,CAACQ,KAAK,CAACR,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,KAAM,IAAI,IAAI,CAACQ,KAAK,CAACR,IAAI,CAAC,KAAK,CAAC,EAAE;UAClE,IAAImS,OAAO,CAACnS,IAAI,CAAC,KAAK1I,SAAS,EAAE6a,OAAO,CAACnS,IAAI,CAAC,GAAG,IAAI;QACvD,CAAC,MAAM;UACL,IAAI,CAACQ,KAAK,CAACR,IAAI,CAAC,GAAG,CAAC;UACpBoT,gBAAgB,GAAG,KAAK;UACxB,IAAIjB,OAAO,CAACnS,IAAI,CAAC,KAAK1I,SAAS,EAAE6a,OAAO,CAACnS,IAAI,CAAC,GAAG,IAAI;UACrD,IAAIiT,MAAM,CAACjT,IAAI,CAAC,KAAK1I,SAAS,EAAE2b,MAAM,CAACjT,IAAI,CAAC,GAAG,IAAI;UACnD,IAAImT,gBAAgB,CAACvV,EAAE,CAAC,KAAKtG,SAAS,EAAE6b,gBAAgB,CAACvV,EAAE,CAAC,GAAG,IAAI;QACrE;MACF,CAAC,CAAC;MACF,IAAI,CAACwV,gBAAgB,EAAEF,eAAe,CAAC9U,GAAG,CAAC,GAAG,IAAI;IACpD,CAAC,CAAC;IACF,IAAIrH,MAAM,CAACyI,IAAI,CAACyT,MAAM,CAAC,CAACnc,MAAM,IAAIC,MAAM,CAACyI,IAAI,CAAC2S,OAAO,CAAC,CAACrb,MAAM,EAAE;MAC7D,IAAI,CAAC+b,KAAK,CAAChb,IAAI,CAAC;QACdsa,OAAO;QACPC,YAAY,EAAErb,MAAM,CAACyI,IAAI,CAAC2S,OAAO,CAAC,CAACrb,MAAM;QACzCwc,MAAM,EAAE,CAAC,CAAC;QACVC,MAAM,EAAE,EAAE;QACVP;MACF,CAAC,CAAC;IACJ;IACA,OAAO;MACLC,MAAM,EAAElc,MAAM,CAACyI,IAAI,CAACyT,MAAM,CAAC;MAC3Bd,OAAO,EAAEpb,MAAM,CAACyI,IAAI,CAAC2S,OAAO,CAAC;MAC7Be,eAAe,EAAEnc,MAAM,CAACyI,IAAI,CAAC0T,eAAe,CAAC;MAC7CC,gBAAgB,EAAEpc,MAAM,CAACyI,IAAI,CAAC2T,gBAAgB;IAChD,CAAC;EACH;EACAG,MAAMA,CAACtT,IAAI,EAAE6L,GAAG,EAAE7T,IAAI,EAAE;IACtB,MAAMlC,CAAC,GAAGkK,IAAI,CAACpJ,KAAK,CAAC,GAAG,CAAC;IACzB,MAAMwH,GAAG,GAAGtI,CAAC,CAAC,CAAC,CAAC;IAChB,MAAM8H,EAAE,GAAG9H,CAAC,CAAC,CAAC,CAAC;IACf,IAAI+V,GAAG,EAAE,IAAI,CAACzO,IAAI,CAAC,eAAe,EAAEgB,GAAG,EAAER,EAAE,EAAEiO,GAAG,CAAC;IACjD,IAAI,CAACA,GAAG,IAAI7T,IAAI,EAAE;MAChB,IAAI,CAACua,KAAK,CAAC5T,iBAAiB,CAACP,GAAG,EAAER,EAAE,EAAE5F,IAAI,EAAEV,SAAS,EAAEA,SAAS,EAAE;QAChEuH,QAAQ,EAAE;MACZ,CAAC,CAAC;IACJ;IACA,IAAI,CAAC2B,KAAK,CAACR,IAAI,CAAC,GAAG6L,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC;IAC/B,IAAIA,GAAG,IAAI7T,IAAI,EAAE,IAAI,CAACwI,KAAK,CAACR,IAAI,CAAC,GAAG,CAAC;IACrC,MAAMsT,MAAM,GAAG,CAAC,CAAC;IACjB,IAAI,CAACT,KAAK,CAAC7c,OAAO,CAACkc,CAAC,IAAI;MACtBva,QAAQ,CAACua,CAAC,CAACoB,MAAM,EAAE,CAAClV,GAAG,CAAC,EAAER,EAAE,CAAC;MAC7BqU,aAAa,CAACC,CAAC,EAAElS,IAAI,CAAC;MACtB,IAAI6L,GAAG,EAAEqG,CAAC,CAACqB,MAAM,CAAC1b,IAAI,CAACgU,GAAG,CAAC;MAC3B,IAAIqG,CAAC,CAACE,YAAY,KAAK,CAAC,IAAI,CAACF,CAAC,CAACsB,IAAI,EAAE;QACnCzc,MAAM,CAACyI,IAAI,CAAC0S,CAAC,CAACoB,MAAM,CAAC,CAACtd,OAAO,CAAC8P,CAAC,IAAI;UACjC,IAAI,CAACwN,MAAM,CAACxN,CAAC,CAAC,EAAEwN,MAAM,CAACxN,CAAC,CAAC,GAAG,CAAC,CAAC;UAC9B,MAAM2N,UAAU,GAAGvB,CAAC,CAACoB,MAAM,CAACxN,CAAC,CAAC;UAC9B,IAAI2N,UAAU,CAAC3c,MAAM,EAAE;YACrB2c,UAAU,CAACzd,OAAO,CAACuJ,CAAC,IAAI;cACtB,IAAI+T,MAAM,CAACxN,CAAC,CAAC,CAACvG,CAAC,CAAC,KAAKjI,SAAS,EAAEgc,MAAM,CAACxN,CAAC,CAAC,CAACvG,CAAC,CAAC,GAAG,IAAI;YACrD,CAAC,CAAC;UACJ;QACF,CAAC,CAAC;QACF2S,CAAC,CAACsB,IAAI,GAAG,IAAI;QACb,IAAItB,CAAC,CAACqB,MAAM,CAACzc,MAAM,EAAE;UACnBob,CAAC,CAACc,QAAQ,CAACd,CAAC,CAACqB,MAAM,CAAC;QACtB,CAAC,MAAM;UACLrB,CAAC,CAACc,QAAQ,CAAC,CAAC;QACd;MACF;IACF,CAAC,CAAC;IACF,IAAI,CAAC5V,IAAI,CAAC,QAAQ,EAAEkW,MAAM,CAAC;IAC3B,IAAI,CAACT,KAAK,GAAG,IAAI,CAACA,KAAK,CAAC3Y,MAAM,CAACgY,CAAC,IAAI,CAACA,CAAC,CAACsB,IAAI,CAAC;EAC9C;EACAE,IAAIA,CAACtV,GAAG,EAAER,EAAE,EAAE+V,MAAM,EAAEC,KAAK,GAAG,CAAC,EAAEC,IAAI,GAAG,IAAI,CAACjB,YAAY,EAAEI,QAAQ,EAAE;IACnE,IAAI,CAAC5U,GAAG,CAACtH,MAAM,EAAE,OAAOkc,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;IAC1C,IAAI,IAAI,CAACN,YAAY,IAAI,IAAI,CAACD,gBAAgB,EAAE;MAC9C,IAAI,CAACD,YAAY,CAAC3a,IAAI,CAAC;QACrBuG,GAAG;QACHR,EAAE;QACF+V,MAAM;QACNC,KAAK;QACLC,IAAI;QACJb;MACF,CAAC,CAAC;MACF;IACF;IACA,IAAI,CAACN,YAAY,EAAE;IACnB,MAAMoB,QAAQ,GAAGA,CAACjI,GAAG,EAAE7T,IAAI,KAAK;MAC9B,IAAI,CAAC0a,YAAY,EAAE;MACnB,IAAI,IAAI,CAACF,YAAY,CAAC1b,MAAM,GAAG,CAAC,EAAE;QAChC,MAAMiE,IAAI,GAAG,IAAI,CAACyX,YAAY,CAAC9Y,KAAK,CAAC,CAAC;QACtC,IAAI,CAACga,IAAI,CAAC3Y,IAAI,CAACqD,GAAG,EAAErD,IAAI,CAAC6C,EAAE,EAAE7C,IAAI,CAAC4Y,MAAM,EAAE5Y,IAAI,CAAC6Y,KAAK,EAAE7Y,IAAI,CAAC8Y,IAAI,EAAE9Y,IAAI,CAACiY,QAAQ,CAAC;MACjF;MACA,IAAInH,GAAG,IAAI7T,IAAI,IAAI4b,KAAK,GAAG,IAAI,CAACjB,UAAU,EAAE;QAC1CoB,UAAU,CAAC,MAAM;UACf,IAAI,CAACL,IAAI,CAACxc,IAAI,CAAC,IAAI,EAAEkH,GAAG,EAAER,EAAE,EAAE+V,MAAM,EAAEC,KAAK,GAAG,CAAC,EAAEC,IAAI,GAAG,CAAC,EAAEb,QAAQ,CAAC;QACtE,CAAC,EAAEa,IAAI,CAAC;QACR;MACF;MACAb,QAAQ,CAACnH,GAAG,EAAE7T,IAAI,CAAC;IACrB,CAAC;IACD,MAAMuS,EAAE,GAAG,IAAI,CAAC+H,OAAO,CAACqB,MAAM,CAAC,CAACK,IAAI,CAAC,IAAI,CAAC1B,OAAO,CAAC;IAClD,IAAI/H,EAAE,CAACzT,MAAM,KAAK,CAAC,EAAE;MACnB,IAAI;QACF,MAAMsD,CAAC,GAAGmQ,EAAE,CAACnM,GAAG,EAAER,EAAE,CAAC;QACrB,IAAIxD,CAAC,IAAI,OAAOA,CAAC,CAAC6Z,IAAI,KAAK,UAAU,EAAE;UACrC7Z,CAAC,CAAC6Z,IAAI,CAACjc,IAAI,IAAI8b,QAAQ,CAAC,IAAI,EAAE9b,IAAI,CAAC,CAAC,CAACkc,KAAK,CAACJ,QAAQ,CAAC;QACtD,CAAC,MAAM;UACLA,QAAQ,CAAC,IAAI,EAAE1Z,CAAC,CAAC;QACnB;MACF,CAAC,CAAC,OAAOyR,GAAG,EAAE;QACZiI,QAAQ,CAACjI,GAAG,CAAC;MACf;MACA;IACF;IACA,OAAOtB,EAAE,CAACnM,GAAG,EAAER,EAAE,EAAEkW,QAAQ,CAAC;EAC9B;EACAK,cAAcA,CAACpB,SAAS,EAAEhR,UAAU,EAAEhG,OAAO,GAAG,CAAC,CAAC,EAAEiX,QAAQ,EAAE;IAC5D,IAAI,CAAC,IAAI,CAACV,OAAO,EAAE;MACjB,IAAI,CAACpW,MAAM,CAACT,IAAI,CAAC,gEAAgE,CAAC;MAClF,OAAOuX,QAAQ,IAAIA,QAAQ,CAAC,CAAC;IAC/B;IACA,IAAI/d,QAAQ,CAAC8d,SAAS,CAAC,EAAEA,SAAS,GAAG,IAAI,CAACvN,aAAa,CAACI,kBAAkB,CAACmN,SAAS,CAAC;IACrF,IAAI9d,QAAQ,CAAC8M,UAAU,CAAC,EAAEA,UAAU,GAAG,CAACA,UAAU,CAAC;IACnD,MAAMkR,MAAM,GAAG,IAAI,CAACH,SAAS,CAACC,SAAS,EAAEhR,UAAU,EAAEhG,OAAO,EAAEiX,QAAQ,CAAC;IACvE,IAAI,CAACC,MAAM,CAACA,MAAM,CAACnc,MAAM,EAAE;MACzB,IAAI,CAACmc,MAAM,CAACd,OAAO,CAACrb,MAAM,EAAEkc,QAAQ,CAAC,CAAC;MACtC,OAAO,IAAI;IACb;IACAC,MAAM,CAACA,MAAM,CAACjd,OAAO,CAACgK,IAAI,IAAI;MAC5B,IAAI,CAACoU,OAAO,CAACpU,IAAI,CAAC;IACpB,CAAC,CAAC;EACJ;EACA2J,IAAIA,CAACoJ,SAAS,EAAEhR,UAAU,EAAEiR,QAAQ,EAAE;IACpC,IAAI,CAACmB,cAAc,CAACpB,SAAS,EAAEhR,UAAU,EAAE,CAAC,CAAC,EAAEiR,QAAQ,CAAC;EAC1D;EACAK,MAAMA,CAACN,SAAS,EAAEhR,UAAU,EAAEiR,QAAQ,EAAE;IACtC,IAAI,CAACmB,cAAc,CAACpB,SAAS,EAAEhR,UAAU,EAAE;MACzCsR,MAAM,EAAE;IACV,CAAC,EAAEL,QAAQ,CAAC;EACd;EACAoB,OAAOA,CAACpU,IAAI,EAAE/D,MAAM,GAAG,EAAE,EAAE;IACzB,MAAMnG,CAAC,GAAGkK,IAAI,CAACpJ,KAAK,CAAC,GAAG,CAAC;IACzB,MAAMwH,GAAG,GAAGtI,CAAC,CAAC,CAAC,CAAC;IAChB,MAAM8H,EAAE,GAAG9H,CAAC,CAAC,CAAC,CAAC;IACf,IAAI,CAAC4d,IAAI,CAACtV,GAAG,EAAER,EAAE,EAAE,MAAM,EAAEtG,SAAS,EAAEA,SAAS,EAAE,CAACuU,GAAG,EAAE7T,IAAI,KAAK;MAC9D,IAAI6T,GAAG,EAAE,IAAI,CAAC3P,MAAM,CAACT,IAAI,CAAC,GAAGQ,MAAM,qBAAqB2B,EAAE,iBAAiBQ,GAAG,SAAS,EAAEyN,GAAG,CAAC;MAC7F,IAAI,CAACA,GAAG,IAAI7T,IAAI,EAAE,IAAI,CAACkE,MAAM,CAACZ,GAAG,CAAC,GAAGW,MAAM,oBAAoB2B,EAAE,iBAAiBQ,GAAG,EAAE,EAAEpG,IAAI,CAAC;MAC9F,IAAI,CAACsb,MAAM,CAACtT,IAAI,EAAE6L,GAAG,EAAE7T,IAAI,CAAC;IAC9B,CAAC,CAAC;EACJ;EACAmO,WAAWA,CAAC4M,SAAS,EAAElQ,SAAS,EAAEzM,GAAG,EAAEie,aAAa,EAAEC,QAAQ,EAAEvY,OAAO,GAAG,CAAC,CAAC,EAAEwY,GAAG,GAAGA,CAAA,KAAM,CAAC,CAAC,EAAE;IAC5F,IAAI,IAAI,CAACnT,QAAQ,EAAE2G,KAAK,EAAEC,kBAAkB,IAAI,CAAC,IAAI,CAAC5G,QAAQ,EAAE2G,KAAK,EAAEC,kBAAkB,CAACnF,SAAS,CAAC,EAAE;MACpG,IAAI,CAAC3G,MAAM,CAACT,IAAI,CAAC,qBAAqBrF,GAAG,uBAAuByM,SAAS,sBAAsB,EAAE,0NAA0N,CAAC;MAC5T;IACF;IACA,IAAIzM,GAAG,KAAKkB,SAAS,IAAIlB,GAAG,KAAK,IAAI,IAAIA,GAAG,KAAK,EAAE,EAAE;IACrD,IAAI,IAAI,CAACkc,OAAO,EAAE9V,MAAM,EAAE;MACxB,MAAMwE,IAAI,GAAG;QACX,GAAGjF,OAAO;QACVuY;MACF,CAAC;MACD,MAAM/J,EAAE,GAAG,IAAI,CAAC+H,OAAO,CAAC9V,MAAM,CAACwX,IAAI,CAAC,IAAI,CAAC1B,OAAO,CAAC;MACjD,IAAI/H,EAAE,CAACzT,MAAM,GAAG,CAAC,EAAE;QACjB,IAAI;UACF,IAAIsD,CAAC;UACL,IAAImQ,EAAE,CAACzT,MAAM,KAAK,CAAC,EAAE;YACnBsD,CAAC,GAAGmQ,EAAE,CAACwI,SAAS,EAAElQ,SAAS,EAAEzM,GAAG,EAAEie,aAAa,EAAErT,IAAI,CAAC;UACxD,CAAC,MAAM;YACL5G,CAAC,GAAGmQ,EAAE,CAACwI,SAAS,EAAElQ,SAAS,EAAEzM,GAAG,EAAEie,aAAa,CAAC;UAClD;UACA,IAAIja,CAAC,IAAI,OAAOA,CAAC,CAAC6Z,IAAI,KAAK,UAAU,EAAE;YACrC7Z,CAAC,CAAC6Z,IAAI,CAACjc,IAAI,IAAIuc,GAAG,CAAC,IAAI,EAAEvc,IAAI,CAAC,CAAC,CAACkc,KAAK,CAACK,GAAG,CAAC;UAC5C,CAAC,MAAM;YACLA,GAAG,CAAC,IAAI,EAAEna,CAAC,CAAC;UACd;QACF,CAAC,CAAC,OAAOyR,GAAG,EAAE;UACZ0I,GAAG,CAAC1I,GAAG,CAAC;QACV;MACF,CAAC,MAAM;QACLtB,EAAE,CAACwI,SAAS,EAAElQ,SAAS,EAAEzM,GAAG,EAAEie,aAAa,EAAEE,GAAG,EAAEvT,IAAI,CAAC;MACzD;IACF;IACA,IAAI,CAAC+R,SAAS,IAAI,CAACA,SAAS,CAAC,CAAC,CAAC,EAAE;IACjC,IAAI,CAACR,KAAK,CAAChU,WAAW,CAACwU,SAAS,CAAC,CAAC,CAAC,EAAElQ,SAAS,EAAEzM,GAAG,EAAEie,aAAa,CAAC;EACrE;AACF;AAEA,MAAM/a,GAAG,GAAGA,CAAA,MAAO;EACjB6C,KAAK,EAAE,KAAK;EACZqY,SAAS,EAAE,IAAI;EACf5W,EAAE,EAAE,CAAC,aAAa,CAAC;EACnBC,SAAS,EAAE,CAAC,aAAa,CAAC;EAC1B6H,WAAW,EAAE,CAAC,KAAK,CAAC;EACpBkC,UAAU,EAAE,KAAK;EACjBqB,aAAa,EAAE,KAAK;EACpBW,wBAAwB,EAAE,KAAK;EAC/BD,IAAI,EAAE,KAAK;EACX8K,OAAO,EAAE,KAAK;EACdC,oBAAoB,EAAE,IAAI;EAC1B1a,YAAY,EAAE,GAAG;EACjBD,WAAW,EAAE,GAAG;EAChBwK,eAAe,EAAE,GAAG;EACpBgE,gBAAgB,EAAE,GAAG;EACrBoM,uBAAuB,EAAE,KAAK;EAC9BxO,WAAW,EAAE,KAAK;EAClBf,aAAa,EAAE,KAAK;EACpBO,aAAa,EAAE,UAAU;EACzBS,kBAAkB,EAAE,IAAI;EACxBH,iBAAiB,EAAE,KAAK;EACxBoI,2BAA2B,EAAE,KAAK;EAClChH,WAAW,EAAE,KAAK;EAClBG,uBAAuB,EAAE,KAAK;EAC9BkB,UAAU,EAAE,KAAK;EACjBC,iBAAiB,EAAE,IAAI;EACvB9G,aAAa,EAAE,KAAK;EACpB4B,UAAU,EAAE,KAAK;EACjBkB,qBAAqB,EAAE,KAAK;EAC5B8B,sBAAsB,EAAE,KAAK;EAC7BD,2BAA2B,EAAE,KAAK;EAClC1D,uBAAuB,EAAE,KAAK;EAC9BJ,gCAAgC,EAAEnH,IAAI,IAAI;IACxC,IAAIqZ,GAAG,GAAG,CAAC,CAAC;IACZ,IAAI,OAAOrZ,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAEqZ,GAAG,GAAGrZ,IAAI,CAAC,CAAC,CAAC;IAC9C,IAAItG,QAAQ,CAACsG,IAAI,CAAC,CAAC,CAAC,CAAC,EAAEqZ,GAAG,CAACtQ,YAAY,GAAG/I,IAAI,CAAC,CAAC,CAAC;IACjD,IAAItG,QAAQ,CAACsG,IAAI,CAAC,CAAC,CAAC,CAAC,EAAEqZ,GAAG,CAACC,YAAY,GAAGtZ,IAAI,CAAC,CAAC,CAAC;IACjD,IAAI,OAAOA,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ,IAAI,OAAOA,IAAI,CAAC,CAAC,CAAC,KAAK,QAAQ,EAAE;MAC9D,MAAMQ,OAAO,GAAGR,IAAI,CAAC,CAAC,CAAC,IAAIA,IAAI,CAAC,CAAC,CAAC;MAClCxE,MAAM,CAACyI,IAAI,CAACzD,OAAO,CAAC,CAAC/F,OAAO,CAACI,GAAG,IAAI;QAClCwe,GAAG,CAACxe,GAAG,CAAC,GAAG2F,OAAO,CAAC3F,GAAG,CAAC;MACzB,CAAC,CAAC;IACJ;IACA,OAAOwe,GAAG;EACZ,CAAC;EACDnT,aAAa,EAAE;IACbkL,WAAW,EAAE,IAAI;IACjBD,MAAM,EAAExU,KAAK,IAAIA,KAAK;IACtB+D,MAAM,EAAE,IAAI;IACZsK,MAAM,EAAE,IAAI;IACZyG,eAAe,EAAE,GAAG;IACpBE,cAAc,EAAE,GAAG;IACnBC,aAAa,EAAE,KAAK;IACpBE,aAAa,EAAE,GAAG;IAClBE,uBAAuB,EAAE,GAAG;IAC5BC,WAAW,EAAE,IAAI;IACjB5G,eAAe,EAAE;EACnB,CAAC;EACDkK,mBAAmB,EAAE;AACvB,CAAC,CAAC;AACF,MAAMgE,gBAAgB,GAAG/Y,OAAO,IAAI;EAClC,IAAI9G,QAAQ,CAAC8G,OAAO,CAAC6B,EAAE,CAAC,EAAE7B,OAAO,CAAC6B,EAAE,GAAG,CAAC7B,OAAO,CAAC6B,EAAE,CAAC;EACnD,IAAI3I,QAAQ,CAAC8G,OAAO,CAAC2J,WAAW,CAAC,EAAE3J,OAAO,CAAC2J,WAAW,GAAG,CAAC3J,OAAO,CAAC2J,WAAW,CAAC;EAC9E,IAAIzQ,QAAQ,CAAC8G,OAAO,CAAC6L,UAAU,CAAC,EAAE7L,OAAO,CAAC6L,UAAU,GAAG,CAAC7L,OAAO,CAAC6L,UAAU,CAAC;EAC3E,IAAI7L,OAAO,CAACkN,aAAa,EAAE5S,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAC,EAAE;IAClD0F,OAAO,CAACkN,aAAa,GAAGlN,OAAO,CAACkN,aAAa,CAACrR,MAAM,CAAC,CAAC,QAAQ,CAAC,CAAC;EAClE;EACA,IAAI,OAAOmE,OAAO,CAACgZ,aAAa,KAAK,SAAS,EAAEhZ,OAAO,CAACyY,SAAS,GAAGzY,OAAO,CAACgZ,aAAa;EACzF,OAAOhZ,OAAO;AAChB,CAAC;AAED,MAAMiZ,IAAI,GAAGA,CAAA,KAAM,CAAC,CAAC;AACrB,MAAMC,mBAAmB,GAAGC,IAAI,IAAI;EAClC,MAAMC,IAAI,GAAGpe,MAAM,CAACqe,mBAAmB,CAACre,MAAM,CAACse,cAAc,CAACH,IAAI,CAAC,CAAC;EACpEC,IAAI,CAACnf,OAAO,CAAC6b,GAAG,IAAI;IAClB,IAAI,OAAOqD,IAAI,CAACrD,GAAG,CAAC,KAAK,UAAU,EAAE;MACnCqD,IAAI,CAACrD,GAAG,CAAC,GAAGqD,IAAI,CAACrD,GAAG,CAAC,CAACmC,IAAI,CAACkB,IAAI,CAAC;IAClC;EACF,CAAC,CAAC;AACJ,CAAC;AACD,MAAMI,IAAI,SAAS1Y,YAAY,CAAC;EAC9B9D,WAAWA,CAACiD,OAAO,GAAG,CAAC,CAAC,EAAEiX,QAAQ,EAAE;IAClC,KAAK,CAAC,CAAC;IACP,IAAI,CAACjX,OAAO,GAAG+Y,gBAAgB,CAAC/Y,OAAO,CAAC;IACxC,IAAI,CAACqF,QAAQ,GAAG,CAAC,CAAC;IAClB,IAAI,CAAClF,MAAM,GAAGS,UAAU;IACxB,IAAI,CAAC4Y,OAAO,GAAG;MACbC,QAAQ,EAAE;IACZ,CAAC;IACDP,mBAAmB,CAAC,IAAI,CAAC;IACzB,IAAIjC,QAAQ,IAAI,CAAC,IAAI,CAACyC,aAAa,IAAI,CAAC1Z,OAAO,CAAC2Z,OAAO,EAAE;MACvD,IAAI,CAAC,IAAI,CAAC3Z,OAAO,CAACyY,SAAS,EAAE;QAC3B,IAAI,CAACxY,IAAI,CAACD,OAAO,EAAEiX,QAAQ,CAAC;QAC5B,OAAO,IAAI;MACb;MACAe,UAAU,CAAC,MAAM;QACf,IAAI,CAAC/X,IAAI,CAACD,OAAO,EAAEiX,QAAQ,CAAC;MAC9B,CAAC,EAAE,CAAC,CAAC;IACP;EACF;EACAhX,IAAIA,CAACD,OAAO,GAAG,CAAC,CAAC,EAAEiX,QAAQ,EAAE;IAC3B,IAAI,CAAC2C,cAAc,GAAG,IAAI;IAC1B,IAAI,OAAO5Z,OAAO,KAAK,UAAU,EAAE;MACjCiX,QAAQ,GAAGjX,OAAO;MAClBA,OAAO,GAAG,CAAC,CAAC;IACd;IACA,IAAIA,OAAO,CAAC8B,SAAS,IAAI,IAAI,IAAI9B,OAAO,CAAC6B,EAAE,EAAE;MAC3C,IAAI3I,QAAQ,CAAC8G,OAAO,CAAC6B,EAAE,CAAC,EAAE;QACxB7B,OAAO,CAAC8B,SAAS,GAAG9B,OAAO,CAAC6B,EAAE;MAChC,CAAC,MAAM,IAAI7B,OAAO,CAAC6B,EAAE,CAACvH,OAAO,CAAC,aAAa,CAAC,GAAG,CAAC,EAAE;QAChD0F,OAAO,CAAC8B,SAAS,GAAG9B,OAAO,CAAC6B,EAAE,CAAC,CAAC,CAAC;MACnC;IACF;IACA,MAAMgY,OAAO,GAAGtc,GAAG,CAAC,CAAC;IACrB,IAAI,CAACyC,OAAO,GAAG;MACb,GAAG6Z,OAAO;MACV,GAAG,IAAI,CAAC7Z,OAAO;MACf,GAAG+Y,gBAAgB,CAAC/Y,OAAO;IAC7B,CAAC;IACD,IAAI,CAACA,OAAO,CAAC0F,aAAa,GAAG;MAC3B,GAAGmU,OAAO,CAACnU,aAAa;MACxB,GAAG,IAAI,CAAC1F,OAAO,CAAC0F;IAClB,CAAC;IACD,IAAI1F,OAAO,CAAC/B,YAAY,KAAK1C,SAAS,EAAE;MACtC,IAAI,CAACyE,OAAO,CAACmG,uBAAuB,GAAGnG,OAAO,CAAC/B,YAAY;IAC7D;IACA,IAAI+B,OAAO,CAAChC,WAAW,KAAKzC,SAAS,EAAE;MACrC,IAAI,CAACyE,OAAO,CAACoG,sBAAsB,GAAGpG,OAAO,CAAChC,WAAW;IAC3D;IACA,MAAM8b,mBAAmB,GAAGC,aAAa,IAAI;MAC3C,IAAI,CAACA,aAAa,EAAE,OAAO,IAAI;MAC/B,IAAI,OAAOA,aAAa,KAAK,UAAU,EAAE,OAAO,IAAIA,aAAa,CAAC,CAAC;MACnE,OAAOA,aAAa;IACtB,CAAC;IACD,IAAI,CAAC,IAAI,CAAC/Z,OAAO,CAAC2Z,OAAO,EAAE;MACzB,IAAI,IAAI,CAACH,OAAO,CAACrZ,MAAM,EAAE;QACvBS,UAAU,CAACX,IAAI,CAAC6Z,mBAAmB,CAAC,IAAI,CAACN,OAAO,CAACrZ,MAAM,CAAC,EAAE,IAAI,CAACH,OAAO,CAAC;MACzE,CAAC,MAAM;QACLY,UAAU,CAACX,IAAI,CAAC,IAAI,EAAE,IAAI,CAACD,OAAO,CAAC;MACrC;MACA,IAAIkV,SAAS;MACb,IAAI,IAAI,CAACsE,OAAO,CAACtE,SAAS,EAAE;QAC1BA,SAAS,GAAG,IAAI,CAACsE,OAAO,CAACtE,SAAS;MACpC,CAAC,MAAM;QACLA,SAAS,GAAGL,SAAS;MACvB;MACA,MAAMmF,EAAE,GAAG,IAAI/M,YAAY,CAAC,IAAI,CAACjN,OAAO,CAAC;MACzC,IAAI,CAACwW,KAAK,GAAG,IAAI5U,aAAa,CAAC,IAAI,CAAC5B,OAAO,CAAC2C,SAAS,EAAE,IAAI,CAAC3C,OAAO,CAAC;MACpE,MAAMjG,CAAC,GAAG,IAAI,CAACsL,QAAQ;MACvBtL,CAAC,CAACoG,MAAM,GAAGS,UAAU;MACrB7G,CAAC,CAAC8S,aAAa,GAAG,IAAI,CAAC2J,KAAK;MAC5Bzc,CAAC,CAAC0P,aAAa,GAAGuQ,EAAE;MACpBjgB,CAAC,CAACmO,cAAc,GAAG,IAAIkH,cAAc,CAAC4K,EAAE,EAAE;QACxC1J,OAAO,EAAE,IAAI,CAACtQ,OAAO,CAACwI,eAAe;QACrCmQ,oBAAoB,EAAE,IAAI,CAAC3Y,OAAO,CAAC2Y;MACrC,CAAC,CAAC;MACF,MAAMsB,yBAAyB,GAAG,IAAI,CAACja,OAAO,CAAC0F,aAAa,CAACiL,MAAM,IAAI,IAAI,CAAC3Q,OAAO,CAAC0F,aAAa,CAACiL,MAAM,KAAKkJ,OAAO,CAACnU,aAAa,CAACiL,MAAM;MACzI,IAAIsJ,yBAAyB,EAAE;QAC7B,IAAI,CAAC9Z,MAAM,CAACG,SAAS,CAAC,4IAA4I,CAAC;MACrK;MACA,IAAI4U,SAAS,KAAK,CAAC,IAAI,CAAClV,OAAO,CAAC0F,aAAa,CAACiL,MAAM,IAAI,IAAI,CAAC3Q,OAAO,CAAC0F,aAAa,CAACiL,MAAM,KAAKkJ,OAAO,CAACnU,aAAa,CAACiL,MAAM,CAAC,EAAE;QAC3H5W,CAAC,CAACmb,SAAS,GAAG4E,mBAAmB,CAAC5E,SAAS,CAAC;QAC5C,IAAInb,CAAC,CAACmb,SAAS,CAACjV,IAAI,EAAElG,CAAC,CAACmb,SAAS,CAACjV,IAAI,CAAClG,CAAC,EAAE,IAAI,CAACiG,OAAO,CAAC;QACvD,IAAI,CAACA,OAAO,CAAC0F,aAAa,CAACiL,MAAM,GAAG5W,CAAC,CAACmb,SAAS,CAACvE,MAAM,CAACsH,IAAI,CAACle,CAAC,CAACmb,SAAS,CAAC;MAC1E;MACAnb,CAAC,CAACuM,YAAY,GAAG,IAAIoK,YAAY,CAAC,IAAI,CAAC1Q,OAAO,CAAC;MAC/CjG,CAAC,CAACiS,KAAK,GAAG;QACRC,kBAAkB,EAAE,IAAI,CAACA,kBAAkB,CAACgM,IAAI,CAAC,IAAI;MACvD,CAAC;MACDle,CAAC,CAACoQ,gBAAgB,GAAG,IAAImM,SAAS,CAACwD,mBAAmB,CAAC,IAAI,CAACN,OAAO,CAACjD,OAAO,CAAC,EAAExc,CAAC,CAAC8S,aAAa,EAAE9S,CAAC,EAAE,IAAI,CAACiG,OAAO,CAAC;MAC/GjG,CAAC,CAACoQ,gBAAgB,CAACpJ,EAAE,CAAC,GAAG,EAAE,CAACG,KAAK,EAAE,GAAG1B,IAAI,KAAK;QAC7C,IAAI,CAAC6B,IAAI,CAACH,KAAK,EAAE,GAAG1B,IAAI,CAAC;MAC3B,CAAC,CAAC;MACF,IAAI,IAAI,CAACga,OAAO,CAACU,gBAAgB,EAAE;QACjCngB,CAAC,CAACmgB,gBAAgB,GAAGJ,mBAAmB,CAAC,IAAI,CAACN,OAAO,CAACU,gBAAgB,CAAC;QACvE,IAAIngB,CAAC,CAACmgB,gBAAgB,CAACja,IAAI,EAAElG,CAAC,CAACmgB,gBAAgB,CAACja,IAAI,CAAClG,CAAC,EAAE,IAAI,CAACiG,OAAO,CAACma,SAAS,EAAE,IAAI,CAACna,OAAO,CAAC;MAC/F;MACA,IAAI,IAAI,CAACwZ,OAAO,CAAC5R,UAAU,EAAE;QAC3B7N,CAAC,CAAC6N,UAAU,GAAGkS,mBAAmB,CAAC,IAAI,CAACN,OAAO,CAAC5R,UAAU,CAAC;QAC3D,IAAI7N,CAAC,CAAC6N,UAAU,CAAC3H,IAAI,EAAElG,CAAC,CAAC6N,UAAU,CAAC3H,IAAI,CAAC,IAAI,CAAC;MAChD;MACA,IAAI,CAACkE,UAAU,GAAG,IAAIiB,UAAU,CAAC,IAAI,CAACC,QAAQ,EAAE,IAAI,CAACrF,OAAO,CAAC;MAC7D,IAAI,CAACmE,UAAU,CAACpD,EAAE,CAAC,GAAG,EAAE,CAACG,KAAK,EAAE,GAAG1B,IAAI,KAAK;QAC1C,IAAI,CAAC6B,IAAI,CAACH,KAAK,EAAE,GAAG1B,IAAI,CAAC;MAC3B,CAAC,CAAC;MACF,IAAI,CAACga,OAAO,CAACC,QAAQ,CAACxf,OAAO,CAACC,CAAC,IAAI;QACjC,IAAIA,CAAC,CAAC+F,IAAI,EAAE/F,CAAC,CAAC+F,IAAI,CAAC,IAAI,CAAC;MAC1B,CAAC,CAAC;IACJ;IACA,IAAI,CAAC0Q,MAAM,GAAG,IAAI,CAAC3Q,OAAO,CAAC0F,aAAa,CAACiL,MAAM;IAC/C,IAAI,CAACsG,QAAQ,EAAEA,QAAQ,GAAGgC,IAAI;IAC9B,IAAI,IAAI,CAACjZ,OAAO,CAAC2J,WAAW,IAAI,CAAC,IAAI,CAACtE,QAAQ,CAAC6U,gBAAgB,IAAI,CAAC,IAAI,CAACla,OAAO,CAACqC,GAAG,EAAE;MACpF,MAAM0J,KAAK,GAAG,IAAI,CAAC1G,QAAQ,CAACoE,aAAa,CAACC,gBAAgB,CAAC,IAAI,CAAC1J,OAAO,CAAC2J,WAAW,CAAC;MACpF,IAAIoC,KAAK,CAAChR,MAAM,GAAG,CAAC,IAAIgR,KAAK,CAAC,CAAC,CAAC,KAAK,KAAK,EAAE,IAAI,CAAC/L,OAAO,CAACqC,GAAG,GAAG0J,KAAK,CAAC,CAAC,CAAC;IACzE;IACA,IAAI,CAAC,IAAI,CAAC1G,QAAQ,CAAC6U,gBAAgB,IAAI,CAAC,IAAI,CAACla,OAAO,CAACqC,GAAG,EAAE;MACxD,IAAI,CAAClC,MAAM,CAACT,IAAI,CAAC,yDAAyD,CAAC;IAC7E;IACA,MAAM0a,QAAQ,GAAG,CAAC,aAAa,EAAE,mBAAmB,EAAE,mBAAmB,EAAE,mBAAmB,CAAC;IAC/FA,QAAQ,CAACngB,OAAO,CAAC2d,MAAM,IAAI;MACzB,IAAI,CAACA,MAAM,CAAC,GAAG,CAAC,GAAGpY,IAAI,KAAK,IAAI,CAACgX,KAAK,CAACoB,MAAM,CAAC,CAAC,GAAGpY,IAAI,CAAC;IACzD,CAAC,CAAC;IACF,MAAM6a,eAAe,GAAG,CAAC,aAAa,EAAE,cAAc,EAAE,mBAAmB,EAAE,sBAAsB,CAAC;IACpGA,eAAe,CAACpgB,OAAO,CAAC2d,MAAM,IAAI;MAChC,IAAI,CAACA,MAAM,CAAC,GAAG,CAAC,GAAGpY,IAAI,KAAK;QAC1B,IAAI,CAACgX,KAAK,CAACoB,MAAM,CAAC,CAAC,GAAGpY,IAAI,CAAC;QAC3B,OAAO,IAAI;MACb,CAAC;IACH,CAAC,CAAC;IACF,MAAM8a,QAAQ,GAAGlhB,KAAK,CAAC,CAAC;IACxB,MAAMwU,IAAI,GAAGA,CAAA,KAAM;MACjB,MAAM2M,MAAM,GAAGA,CAACzK,GAAG,EAAE9V,CAAC,KAAK;QACzB,IAAI,CAAC4f,cAAc,GAAG,KAAK;QAC3B,IAAI,IAAI,CAACF,aAAa,IAAI,CAAC,IAAI,CAACc,oBAAoB,EAAE,IAAI,CAACra,MAAM,CAACT,IAAI,CAAC,uEAAuE,CAAC;QAC/I,IAAI,CAACga,aAAa,GAAG,IAAI;QACzB,IAAI,CAAC,IAAI,CAAC1Z,OAAO,CAAC2Z,OAAO,EAAE,IAAI,CAACxZ,MAAM,CAACZ,GAAG,CAAC,aAAa,EAAE,IAAI,CAACS,OAAO,CAAC;QACvE,IAAI,CAACqB,IAAI,CAAC,aAAa,EAAE,IAAI,CAACrB,OAAO,CAAC;QACtCsa,QAAQ,CAAC7gB,OAAO,CAACO,CAAC,CAAC;QACnBid,QAAQ,CAACnH,GAAG,EAAE9V,CAAC,CAAC;MAClB,CAAC;MACD,IAAI,IAAI,CAACgd,SAAS,IAAI,CAAC,IAAI,CAAC0C,aAAa,EAAE,OAAOa,MAAM,CAAC,IAAI,EAAE,IAAI,CAACvgB,CAAC,CAACie,IAAI,CAAC,IAAI,CAAC,CAAC;MACjF,IAAI,CAAC3S,cAAc,CAAC,IAAI,CAACtF,OAAO,CAACqC,GAAG,EAAEkY,MAAM,CAAC;IAC/C,CAAC;IACD,IAAI,IAAI,CAACva,OAAO,CAAC2C,SAAS,IAAI,CAAC,IAAI,CAAC3C,OAAO,CAACyY,SAAS,EAAE;MACrD7K,IAAI,CAAC,CAAC;IACR,CAAC,MAAM;MACLoK,UAAU,CAACpK,IAAI,EAAE,CAAC,CAAC;IACrB;IACA,OAAO0M,QAAQ;EACjB;EACAG,aAAaA,CAAClV,QAAQ,EAAE0R,QAAQ,GAAGgC,IAAI,EAAE;IACvC,IAAIyB,YAAY,GAAGzD,QAAQ;IAC3B,MAAM9P,OAAO,GAAGjO,QAAQ,CAACqM,QAAQ,CAAC,GAAGA,QAAQ,GAAG,IAAI,CAACA,QAAQ;IAC7D,IAAI,OAAOA,QAAQ,KAAK,UAAU,EAAEmV,YAAY,GAAGnV,QAAQ;IAC3D,IAAI,CAAC,IAAI,CAACvF,OAAO,CAAC2C,SAAS,IAAI,IAAI,CAAC3C,OAAO,CAAC4Y,uBAAuB,EAAE;MACnE,IAAIzR,OAAO,EAAEH,WAAW,CAAC,CAAC,KAAK,QAAQ,KAAK,CAAC,IAAI,CAAChH,OAAO,CAAC0Y,OAAO,IAAI,IAAI,CAAC1Y,OAAO,CAAC0Y,OAAO,CAAC3d,MAAM,KAAK,CAAC,CAAC,EAAE,OAAO2f,YAAY,CAAC,CAAC;MAC9H,MAAMxD,MAAM,GAAG,EAAE;MACjB,MAAMyD,MAAM,GAAGtY,GAAG,IAAI;QACpB,IAAI,CAACA,GAAG,EAAE;QACV,IAAIA,GAAG,KAAK,QAAQ,EAAE;QACtB,MAAMkH,IAAI,GAAG,IAAI,CAAClE,QAAQ,CAACoE,aAAa,CAACI,kBAAkB,CAACxH,GAAG,CAAC;QAChEkH,IAAI,CAACtP,OAAO,CAAC8P,CAAC,IAAI;UAChB,IAAIA,CAAC,KAAK,QAAQ,EAAE;UACpB,IAAImN,MAAM,CAAC5c,OAAO,CAACyP,CAAC,CAAC,GAAG,CAAC,EAAEmN,MAAM,CAACpb,IAAI,CAACiO,CAAC,CAAC;QAC3C,CAAC,CAAC;MACJ,CAAC;MACD,IAAI,CAAC5C,OAAO,EAAE;QACZ,MAAMgH,SAAS,GAAG,IAAI,CAAC9I,QAAQ,CAACoE,aAAa,CAACC,gBAAgB,CAAC,IAAI,CAAC1J,OAAO,CAAC2J,WAAW,CAAC;QACxFwE,SAAS,CAAClU,OAAO,CAAC8P,CAAC,IAAI4Q,MAAM,CAAC5Q,CAAC,CAAC,CAAC;MACnC,CAAC,MAAM;QACL4Q,MAAM,CAACxT,OAAO,CAAC;MACjB;MACA,IAAI,CAACnH,OAAO,CAAC0Y,OAAO,EAAEze,OAAO,GAAG8P,CAAC,IAAI4Q,MAAM,CAAC5Q,CAAC,CAAC,CAAC;MAC/C,IAAI,CAAC1E,QAAQ,CAAC8E,gBAAgB,CAACyD,IAAI,CAACsJ,MAAM,EAAE,IAAI,CAAClX,OAAO,CAAC6B,EAAE,EAAErG,CAAC,IAAI;QAChE,IAAI,CAACA,CAAC,IAAI,CAAC,IAAI,CAACof,gBAAgB,IAAI,IAAI,CAACrV,QAAQ,EAAE,IAAI,CAACsV,mBAAmB,CAAC,IAAI,CAACtV,QAAQ,CAAC;QAC1FmV,YAAY,CAAClf,CAAC,CAAC;MACjB,CAAC,CAAC;IACJ,CAAC,MAAM;MACLkf,YAAY,CAAC,IAAI,CAAC;IACpB;EACF;EACAI,eAAeA,CAACvR,IAAI,EAAE1H,EAAE,EAAEoV,QAAQ,EAAE;IAClC,MAAMqD,QAAQ,GAAGlhB,KAAK,CAAC,CAAC;IACxB,IAAI,OAAOmQ,IAAI,KAAK,UAAU,EAAE;MAC9B0N,QAAQ,GAAG1N,IAAI;MACfA,IAAI,GAAGhO,SAAS;IAClB;IACA,IAAI,OAAOsG,EAAE,KAAK,UAAU,EAAE;MAC5BoV,QAAQ,GAAGpV,EAAE;MACbA,EAAE,GAAGtG,SAAS;IAChB;IACA,IAAI,CAACgO,IAAI,EAAEA,IAAI,GAAG,IAAI,CAACyN,SAAS;IAChC,IAAI,CAACnV,EAAE,EAAEA,EAAE,GAAG,IAAI,CAAC7B,OAAO,CAAC6B,EAAE;IAC7B,IAAI,CAACoV,QAAQ,EAAEA,QAAQ,GAAGgC,IAAI;IAC9B,IAAI,CAAC5T,QAAQ,CAAC8E,gBAAgB,CAACmN,MAAM,CAAC/N,IAAI,EAAE1H,EAAE,EAAEiO,GAAG,IAAI;MACrDwK,QAAQ,CAAC7gB,OAAO,CAAC,CAAC;MAClBwd,QAAQ,CAACnH,GAAG,CAAC;IACf,CAAC,CAAC;IACF,OAAOwK,QAAQ;EACjB;EACAS,GAAGA,CAAC/W,MAAM,EAAE;IACV,IAAI,CAACA,MAAM,EAAE,MAAM,IAAIgX,KAAK,CAAC,+FAA+F,CAAC;IAC7H,IAAI,CAAChX,MAAM,CAAC1E,IAAI,EAAE,MAAM,IAAI0b,KAAK,CAAC,0FAA0F,CAAC;IAC7H,IAAIhX,MAAM,CAAC1E,IAAI,KAAK,SAAS,EAAE;MAC7B,IAAI,CAACka,OAAO,CAACjD,OAAO,GAAGvS,MAAM;IAC/B;IACA,IAAIA,MAAM,CAAC1E,IAAI,KAAK,QAAQ,IAAI0E,MAAM,CAACzE,GAAG,IAAIyE,MAAM,CAACtE,IAAI,IAAIsE,MAAM,CAACrE,KAAK,EAAE;MACzE,IAAI,CAAC6Z,OAAO,CAACrZ,MAAM,GAAG6D,MAAM;IAC9B;IACA,IAAIA,MAAM,CAAC1E,IAAI,KAAK,kBAAkB,EAAE;MACtC,IAAI,CAACka,OAAO,CAACU,gBAAgB,GAAGlW,MAAM;IACxC;IACA,IAAIA,MAAM,CAAC1E,IAAI,KAAK,YAAY,EAAE;MAChC,IAAI,CAACka,OAAO,CAAC5R,UAAU,GAAG5D,MAAM;IAClC;IACA,IAAIA,MAAM,CAAC1E,IAAI,KAAK,eAAe,EAAE;MACnCuE,aAAa,CAACE,gBAAgB,CAACC,MAAM,CAAC;IACxC;IACA,IAAIA,MAAM,CAAC1E,IAAI,KAAK,WAAW,EAAE;MAC/B,IAAI,CAACka,OAAO,CAACtE,SAAS,GAAGlR,MAAM;IACjC;IACA,IAAIA,MAAM,CAAC1E,IAAI,KAAK,UAAU,EAAE;MAC9B,IAAI,CAACka,OAAO,CAACC,QAAQ,CAAC3d,IAAI,CAACkI,MAAM,CAAC;IACpC;IACA,OAAO,IAAI;EACb;EACA6W,mBAAmBA,CAAC9Q,CAAC,EAAE;IACrB,IAAI,CAACA,CAAC,IAAI,CAAC,IAAI,CAACiN,SAAS,EAAE;IAC3B,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC1c,OAAO,CAACyP,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;IACvC,KAAK,IAAIkR,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAG,IAAI,CAACjE,SAAS,CAACjc,MAAM,EAAEkgB,EAAE,EAAE,EAAE;MACjD,MAAMC,SAAS,GAAG,IAAI,CAAClE,SAAS,CAACiE,EAAE,CAAC;MACpC,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC3gB,OAAO,CAAC4gB,SAAS,CAAC,GAAG,CAAC,CAAC,EAAE;MAC/C,IAAI,IAAI,CAAC1E,KAAK,CAACjT,2BAA2B,CAAC2X,SAAS,CAAC,EAAE;QACrD,IAAI,CAACN,gBAAgB,GAAGM,SAAS;QACjC;MACF;IACF;IACA,IAAI,CAAC,IAAI,CAACN,gBAAgB,IAAI,IAAI,CAAC5D,SAAS,CAAC1c,OAAO,CAACyP,CAAC,CAAC,GAAG,CAAC,IAAI,IAAI,CAACyM,KAAK,CAACjT,2BAA2B,CAACwG,CAAC,CAAC,EAAE;MACxG,IAAI,CAAC6Q,gBAAgB,GAAG7Q,CAAC;MACzB,IAAI,CAACiN,SAAS,CAACmE,OAAO,CAACpR,CAAC,CAAC;IAC3B;EACF;EACAzE,cAAcA,CAACjD,GAAG,EAAE4U,QAAQ,EAAE;IAC5B,IAAI,CAACmE,oBAAoB,GAAG/Y,GAAG;IAC/B,MAAMiY,QAAQ,GAAGlhB,KAAK,CAAC,CAAC;IACxB,IAAI,CAACiI,IAAI,CAAC,kBAAkB,EAAEgB,GAAG,CAAC;IAClC,MAAMgZ,WAAW,GAAGtR,CAAC,IAAI;MACvB,IAAI,CAACxE,QAAQ,GAAGwE,CAAC;MACjB,IAAI,CAACiN,SAAS,GAAG,IAAI,CAAC3R,QAAQ,CAACoE,aAAa,CAACI,kBAAkB,CAACE,CAAC,CAAC;MAClE,IAAI,CAAC6Q,gBAAgB,GAAGrf,SAAS;MACjC,IAAI,CAACsf,mBAAmB,CAAC9Q,CAAC,CAAC;IAC7B,CAAC;IACD,MAAM0N,IAAI,GAAGA,CAAC3H,GAAG,EAAE/F,CAAC,KAAK;MACvB,IAAIA,CAAC,EAAE;QACL,IAAI,IAAI,CAACqR,oBAAoB,KAAK/Y,GAAG,EAAE;UACrCgZ,WAAW,CAACtR,CAAC,CAAC;UACd,IAAI,CAAC5F,UAAU,CAACmB,cAAc,CAACyE,CAAC,CAAC;UACjC,IAAI,CAACqR,oBAAoB,GAAG7f,SAAS;UACrC,IAAI,CAAC8F,IAAI,CAAC,iBAAiB,EAAE0I,CAAC,CAAC;UAC/B,IAAI,CAAC5J,MAAM,CAACZ,GAAG,CAAC,iBAAiB,EAAEwK,CAAC,CAAC;QACvC;MACF,CAAC,MAAM;QACL,IAAI,CAACqR,oBAAoB,GAAG7f,SAAS;MACvC;MACA+e,QAAQ,CAAC7gB,OAAO,CAAC,CAAC,GAAG+F,IAAI,KAAK,IAAI,CAACxF,CAAC,CAAC,GAAGwF,IAAI,CAAC,CAAC;MAC9C,IAAIyX,QAAQ,EAAEA,QAAQ,CAACnH,GAAG,EAAE,CAAC,GAAGtQ,IAAI,KAAK,IAAI,CAACxF,CAAC,CAAC,GAAGwF,IAAI,CAAC,CAAC;IAC3D,CAAC;IACD,MAAM8b,MAAM,GAAG/R,IAAI,IAAI;MACrB,IAAI,CAAClH,GAAG,IAAI,CAACkH,IAAI,IAAI,IAAI,CAAClE,QAAQ,CAAC6U,gBAAgB,EAAE3Q,IAAI,GAAG,EAAE;MAC9D,MAAMgS,EAAE,GAAGriB,QAAQ,CAACqQ,IAAI,CAAC,GAAGA,IAAI,GAAGA,IAAI,IAAIA,IAAI,CAAC,CAAC,CAAC;MAClD,MAAMQ,CAAC,GAAG,IAAI,CAACyM,KAAK,CAACjT,2BAA2B,CAACgY,EAAE,CAAC,GAAGA,EAAE,GAAG,IAAI,CAAClW,QAAQ,CAACoE,aAAa,CAACqE,qBAAqB,CAAC5U,QAAQ,CAACqQ,IAAI,CAAC,GAAG,CAACA,IAAI,CAAC,GAAGA,IAAI,CAAC;MAC7I,IAAIQ,CAAC,EAAE;QACL,IAAI,CAAC,IAAI,CAACxE,QAAQ,EAAE;UAClB8V,WAAW,CAACtR,CAAC,CAAC;QAChB;QACA,IAAI,CAAC,IAAI,CAAC5F,UAAU,CAACoB,QAAQ,EAAE,IAAI,CAACpB,UAAU,CAACmB,cAAc,CAACyE,CAAC,CAAC;QAChE,IAAI,CAAC1E,QAAQ,CAAC6U,gBAAgB,EAAEsB,iBAAiB,GAAGzR,CAAC,CAAC;MACxD;MACA,IAAI,CAAC0Q,aAAa,CAAC1Q,CAAC,EAAE+F,GAAG,IAAI;QAC3B2H,IAAI,CAAC3H,GAAG,EAAE/F,CAAC,CAAC;MACd,CAAC,CAAC;IACJ,CAAC;IACD,IAAI,CAAC1H,GAAG,IAAI,IAAI,CAACgD,QAAQ,CAAC6U,gBAAgB,IAAI,CAAC,IAAI,CAAC7U,QAAQ,CAAC6U,gBAAgB,CAACuB,KAAK,EAAE;MACnFH,MAAM,CAAC,IAAI,CAACjW,QAAQ,CAAC6U,gBAAgB,CAACwB,MAAM,CAAC,CAAC,CAAC;IACjD,CAAC,MAAM,IAAI,CAACrZ,GAAG,IAAI,IAAI,CAACgD,QAAQ,CAAC6U,gBAAgB,IAAI,IAAI,CAAC7U,QAAQ,CAAC6U,gBAAgB,CAACuB,KAAK,EAAE;MACzF,IAAI,IAAI,CAACpW,QAAQ,CAAC6U,gBAAgB,CAACwB,MAAM,CAAC3gB,MAAM,KAAK,CAAC,EAAE;QACtD,IAAI,CAACsK,QAAQ,CAAC6U,gBAAgB,CAACwB,MAAM,CAAC,CAAC,CAACxD,IAAI,CAACoD,MAAM,CAAC;MACtD,CAAC,MAAM;QACL,IAAI,CAACjW,QAAQ,CAAC6U,gBAAgB,CAACwB,MAAM,CAACJ,MAAM,CAAC;MAC/C;IACF,CAAC,MAAM;MACLA,MAAM,CAACjZ,GAAG,CAAC;IACb;IACA,OAAOiY,QAAQ;EACjB;EACAqB,SAASA,CAACtZ,GAAG,EAAER,EAAE,EAAE+Z,SAAS,EAAE;IAC5B,MAAMC,MAAM,GAAGA,CAACxhB,GAAG,EAAE4K,IAAI,EAAE,GAAGiP,IAAI,KAAK;MACrC,IAAIzO,CAAC;MACL,IAAI,OAAOR,IAAI,KAAK,QAAQ,EAAE;QAC5BQ,CAAC,GAAG,IAAI,CAACzF,OAAO,CAAC2G,gCAAgC,CAAC,CAACtM,GAAG,EAAE4K,IAAI,CAAC,CAACpJ,MAAM,CAACqY,IAAI,CAAC,CAAC;MAC7E,CAAC,MAAM;QACLzO,CAAC,GAAG;UACF,GAAGR;QACL,CAAC;MACH;MACAQ,CAAC,CAACpD,GAAG,GAAGoD,CAAC,CAACpD,GAAG,IAAIwZ,MAAM,CAACxZ,GAAG;MAC3BoD,CAAC,CAAC8D,IAAI,GAAG9D,CAAC,CAAC8D,IAAI,IAAIsS,MAAM,CAACtS,IAAI;MAC9B9D,CAAC,CAAC5D,EAAE,GAAG4D,CAAC,CAAC5D,EAAE,IAAIga,MAAM,CAACha,EAAE;MACxB,IAAI4D,CAAC,CAACmW,SAAS,KAAK,EAAE,EAAEnW,CAAC,CAACmW,SAAS,GAAGnW,CAAC,CAACmW,SAAS,IAAIA,SAAS,IAAIC,MAAM,CAACD,SAAS;MAClF,MAAM3d,YAAY,GAAG,IAAI,CAAC+B,OAAO,CAAC/B,YAAY,IAAI,GAAG;MACrD,IAAI6d,SAAS;MACb,IAAIrW,CAAC,CAACmW,SAAS,IAAIra,KAAK,CAACe,OAAO,CAACjI,GAAG,CAAC,EAAE;QACrCyhB,SAAS,GAAGzhB,GAAG,CAACiE,GAAG,CAAClD,CAAC,IAAI;UACvB,IAAI,OAAOA,CAAC,KAAK,UAAU,EAAEA,CAAC,GAAG2J,gBAAgB,CAAC3J,CAAC,EAAE;YACnD,GAAG,IAAI,CAAC4E,OAAO;YACf,GAAGiF;UACL,CAAC,CAAC;UACF,OAAO,GAAGQ,CAAC,CAACmW,SAAS,GAAG3d,YAAY,GAAG7C,CAAC,EAAE;QAC5C,CAAC,CAAC;MACJ,CAAC,MAAM;QACL,IAAI,OAAOf,GAAG,KAAK,UAAU,EAAEA,GAAG,GAAG0K,gBAAgB,CAAC1K,GAAG,EAAE;UACzD,GAAG,IAAI,CAAC2F,OAAO;UACf,GAAGiF;QACL,CAAC,CAAC;QACF6W,SAAS,GAAGrW,CAAC,CAACmW,SAAS,GAAG,GAAGnW,CAAC,CAACmW,SAAS,GAAG3d,YAAY,GAAG5D,GAAG,EAAE,GAAGA,GAAG;MACvE;MACA,OAAO,IAAI,CAACL,CAAC,CAAC8hB,SAAS,EAAErW,CAAC,CAAC;IAC7B,CAAC;IACD,IAAIvM,QAAQ,CAACmJ,GAAG,CAAC,EAAE;MACjBwZ,MAAM,CAACxZ,GAAG,GAAGA,GAAG;IAClB,CAAC,MAAM;MACLwZ,MAAM,CAACtS,IAAI,GAAGlH,GAAG;IACnB;IACAwZ,MAAM,CAACha,EAAE,GAAGA,EAAE;IACdga,MAAM,CAACD,SAAS,GAAGA,SAAS;IAC5B,OAAOC,MAAM;EACf;EACA7hB,CAACA,CAAC,GAAGwF,IAAI,EAAE;IACT,OAAO,IAAI,CAAC2E,UAAU,EAAEsC,SAAS,CAAC,GAAGjH,IAAI,CAAC;EAC5C;EACAgG,MAAMA,CAAC,GAAGhG,IAAI,EAAE;IACd,OAAO,IAAI,CAAC2E,UAAU,EAAEqB,MAAM,CAAC,GAAGhG,IAAI,CAAC;EACzC;EACAuc,mBAAmBA,CAACla,EAAE,EAAE;IACtB,IAAI,CAAC7B,OAAO,CAAC8B,SAAS,GAAGD,EAAE;EAC7B;EACAoK,kBAAkBA,CAACpK,EAAE,EAAE7B,OAAO,GAAG,CAAC,CAAC,EAAE;IACnC,IAAI,CAAC,IAAI,CAAC0Z,aAAa,EAAE;MACvB,IAAI,CAACvZ,MAAM,CAACT,IAAI,CAAC,iDAAiD,EAAE,IAAI,CAACsX,SAAS,CAAC;MACnF,OAAO,KAAK;IACd;IACA,IAAI,CAAC,IAAI,CAACA,SAAS,IAAI,CAAC,IAAI,CAACA,SAAS,CAACjc,MAAM,EAAE;MAC7C,IAAI,CAACoF,MAAM,CAACT,IAAI,CAAC,4DAA4D,EAAE,IAAI,CAACsX,SAAS,CAAC;MAC9F,OAAO,KAAK;IACd;IACA,MAAM3U,GAAG,GAAGrC,OAAO,CAACqC,GAAG,IAAI,IAAI,CAACuY,gBAAgB,IAAI,IAAI,CAAC5D,SAAS,CAAC,CAAC,CAAC;IACrE,MAAMrN,WAAW,GAAG,IAAI,CAAC3J,OAAO,GAAG,IAAI,CAACA,OAAO,CAAC2J,WAAW,GAAG,KAAK;IACnE,MAAMqS,OAAO,GAAG,IAAI,CAAChF,SAAS,CAAC,IAAI,CAACA,SAAS,CAACjc,MAAM,GAAG,CAAC,CAAC;IACzD,IAAIsH,GAAG,CAAC2E,WAAW,CAAC,CAAC,KAAK,QAAQ,EAAE,OAAO,IAAI;IAC/C,MAAMiV,cAAc,GAAGA,CAAClS,CAAC,EAAEvG,CAAC,KAAK;MAC/B,MAAM0Y,SAAS,GAAG,IAAI,CAAC7W,QAAQ,CAAC8E,gBAAgB,CAAC1F,KAAK,CAAC,GAAGsF,CAAC,IAAIvG,CAAC,EAAE,CAAC;MACnE,OAAO0Y,SAAS,KAAK,CAAC,CAAC,IAAIA,SAAS,KAAK,CAAC,IAAIA,SAAS,KAAK,CAAC;IAC/D,CAAC;IACD,IAAIlc,OAAO,CAACmc,QAAQ,EAAE;MACpB,MAAMC,SAAS,GAAGpc,OAAO,CAACmc,QAAQ,CAAC,IAAI,EAAEF,cAAc,CAAC;MACxD,IAAIG,SAAS,KAAK7gB,SAAS,EAAE,OAAO6gB,SAAS;IAC/C;IACA,IAAI,IAAI,CAAChZ,iBAAiB,CAACf,GAAG,EAAER,EAAE,CAAC,EAAE,OAAO,IAAI;IAChD,IAAI,CAAC,IAAI,CAACwD,QAAQ,CAAC8E,gBAAgB,CAACoM,OAAO,IAAI,IAAI,CAACvW,OAAO,CAAC2C,SAAS,IAAI,CAAC,IAAI,CAAC3C,OAAO,CAAC4Y,uBAAuB,EAAE,OAAO,IAAI;IAC3H,IAAIqD,cAAc,CAAC5Z,GAAG,EAAER,EAAE,CAAC,KAAK,CAAC8H,WAAW,IAAIsS,cAAc,CAACD,OAAO,EAAEna,EAAE,CAAC,CAAC,EAAE,OAAO,IAAI;IACzF,OAAO,KAAK;EACd;EACAwa,cAAcA,CAACxa,EAAE,EAAEoV,QAAQ,EAAE;IAC3B,MAAMqD,QAAQ,GAAGlhB,KAAK,CAAC,CAAC;IACxB,IAAI,CAAC,IAAI,CAAC4G,OAAO,CAAC6B,EAAE,EAAE;MACpB,IAAIoV,QAAQ,EAAEA,QAAQ,CAAC,CAAC;MACxB,OAAOzd,OAAO,CAACC,OAAO,CAAC,CAAC;IAC1B;IACA,IAAIP,QAAQ,CAAC2I,EAAE,CAAC,EAAEA,EAAE,GAAG,CAACA,EAAE,CAAC;IAC3BA,EAAE,CAAC5H,OAAO,CAACuJ,CAAC,IAAI;MACd,IAAI,IAAI,CAACxD,OAAO,CAAC6B,EAAE,CAACvH,OAAO,CAACkJ,CAAC,CAAC,GAAG,CAAC,EAAE,IAAI,CAACxD,OAAO,CAAC6B,EAAE,CAAC/F,IAAI,CAAC0H,CAAC,CAAC;IAC7D,CAAC,CAAC;IACF,IAAI,CAACiX,aAAa,CAAC3K,GAAG,IAAI;MACxBwK,QAAQ,CAAC7gB,OAAO,CAAC,CAAC;MAClB,IAAIwd,QAAQ,EAAEA,QAAQ,CAACnH,GAAG,CAAC;IAC7B,CAAC,CAAC;IACF,OAAOwK,QAAQ;EACjB;EACAgC,aAAaA,CAAC/S,IAAI,EAAE0N,QAAQ,EAAE;IAC5B,MAAMqD,QAAQ,GAAGlhB,KAAK,CAAC,CAAC;IACxB,IAAIF,QAAQ,CAACqQ,IAAI,CAAC,EAAEA,IAAI,GAAG,CAACA,IAAI,CAAC;IACjC,MAAMgT,SAAS,GAAG,IAAI,CAACvc,OAAO,CAAC0Y,OAAO,IAAI,EAAE;IAC5C,MAAM8D,OAAO,GAAGjT,IAAI,CAACpL,MAAM,CAACkE,GAAG,IAAIka,SAAS,CAACjiB,OAAO,CAAC+H,GAAG,CAAC,GAAG,CAAC,IAAI,IAAI,CAACgD,QAAQ,CAACoE,aAAa,CAACkE,eAAe,CAACtL,GAAG,CAAC,CAAC;IAClH,IAAI,CAACma,OAAO,CAACzhB,MAAM,EAAE;MACnB,IAAIkc,QAAQ,EAAEA,QAAQ,CAAC,CAAC;MACxB,OAAOzd,OAAO,CAACC,OAAO,CAAC,CAAC;IAC1B;IACA,IAAI,CAACuG,OAAO,CAAC0Y,OAAO,GAAG6D,SAAS,CAAC1gB,MAAM,CAAC2gB,OAAO,CAAC;IAChD,IAAI,CAAC/B,aAAa,CAAC3K,GAAG,IAAI;MACxBwK,QAAQ,CAAC7gB,OAAO,CAAC,CAAC;MAClB,IAAIwd,QAAQ,EAAEA,QAAQ,CAACnH,GAAG,CAAC;IAC7B,CAAC,CAAC;IACF,OAAOwK,QAAQ;EACjB;EACAmC,GAAGA,CAACpa,GAAG,EAAE;IACP,IAAI,CAACA,GAAG,EAAEA,GAAG,GAAG,IAAI,CAACuY,gBAAgB,KAAK,IAAI,CAAC5D,SAAS,EAAEjc,MAAM,GAAG,CAAC,GAAG,IAAI,CAACic,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,CAACzR,QAAQ,CAAC;IACzG,IAAI,CAAClD,GAAG,EAAE,OAAO,KAAK;IACtB,IAAI;MACF,MAAM0H,CAAC,GAAG,IAAIwD,IAAI,CAACmP,MAAM,CAACra,GAAG,CAAC;MAC9B,IAAI0H,CAAC,IAAIA,CAAC,CAAC4S,WAAW,EAAE;QACtB,MAAMC,EAAE,GAAG7S,CAAC,CAAC4S,WAAW,CAAC,CAAC;QAC1B,IAAIC,EAAE,IAAIA,EAAE,CAACC,SAAS,EAAE,OAAOD,EAAE,CAACC,SAAS;MAC7C;IACF,CAAC,CAAC,OAAOrhB,CAAC,EAAE,CAAC;IACb,MAAMshxb,MAAMrT,aAAa,GAAG,IAAI,CAACpE,QAAQ,EAAEoE,aAAa,IAAI,IAAIwD,YAAY,CAAC1P,GAAG,CAAC,CAAC,CAAC;IAC7E,IAAI8E,GAAG,CAAC2E,WAAW,CAAC,CAAC,CAAC1M,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,OAAO,KAAK;IACxD,OAAOwiB,OAAO,CAACxiB,OAAO,CAACmP,aAAa,CAAC4D,uBAAuB,CAAChL,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAIA,GAAG,CAAC2E,WAAW,CAAC,CAAC,CAAC1M,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,KAAK,GAAG,KAAK;EACnI;EACA,OAAOyiB,cAAcA,CAAC/c,OAAO,GAAG,CAAC,CAAC,EAAEiX,QAAQ,EAAE;IAC5C,OAAO,IAAIsC,IAAI,CAACvZ,OAAO,EAAEiX,QAAQ,CAAC;EACpC;EACA+F,aAAaA,CAAChd,OAAO,GAAG,CAAC,CAAC,EAAEiX,QAAQ,GAAGgC,IAAI,EAAE;IAC3C,MAAMgE,iBAAiB,GAAGjd,OAAO,CAACid,iBAAiB;IACnD,IAAIA,iBAAiB,EAAE,OAAOjd,OAAO,CAACid,iBAAiB;IACvD,MAAMC,aAAa,GAAG;MACpB,GAAG,IAAI,CAACld,OAAO;MACf,GAAGA,OAAO;MACV,GAAG;QACD2Z,OAAO,EAAE;MACX;IACF,CAAC;IACD,MAAMhZ,KAAK,GAAG,IAAI4Y,IAAI,CAAC2D,aAAa,CAAC;IACrC,IAAIld,OAAO,CAACI,KAAK,KAAK7E,SAAS,IAAIyE,OAAO,CAACE,MAAM,KAAK3E,SAAS,EAAE;MAC/DoF,KAAK,CAACR,MAAM,GAAGQ,KAAK,CAACR,MAAM,CAACQ,KAAK,CAACX,OAAO,CAAC;IAC5C;IACA,MAAMmd,aAAa,GAAG,CAAC,OAAO,EAAE,UAAU,EAAE,UAAU,CAAC;IACvDA,aAAa,CAACljB,OAAO,CAACC,CAAC,IAAI;MACzByG,KAAK,CAACzG,CAAC,CAAC,GAAG,IAAI,CAACA,CAAC,CAAC;IACpB,CAAC,CAAC;IACFyG,KAAK,CAAC0E,QAAQ,GAAG;MACf,GAAG,IAAI,CAACA;IACV,CAAC;IACD1E,KAAK,CAAC0E,QAAQ,CAAC2G,KAAK,GAAG;MACrBC,kBAAkB,EAAEtL,KAAK,CAACsL,kBAAkB,CAACgM,IAAI,CAACtX,KAAK;IACzD,CAAC;IACD,IAAIsc,iBAAiB,EAAE;MACrB,MAAMG,UAAU,GAAGpiB,MAAM,CAACyI,IAAI,CAAC,IAAI,CAAC+S,KAAK,CAACva,IAAI,CAAC,CAACyX,MAAM,CAAC,CAAC2J,IAAI,EAAEtT,CAAC,KAAK;QAClEsT,IAAI,CAACtT,CAAC,CAAC,GAAG;UACR,GAAG,IAAI,CAACyM,KAAK,CAACva,IAAI,CAAC8N,CAAC;QACtB,CAAC;QACDsT,IAAI,CAACtT,CAAC,CAAC,GAAG/O,MAAM,CAACyI,IAAI,CAAC4Z,IAAI,CAACtT,CAAC,CAAC,CAAC,CAAC2J,MAAM,CAAC,CAAC4J,GAAG,EAAE9Z,CAAC,KAAK;UAChD8Z,GAAG,CAAC9Z,CAAC,CAAC,GAAG;YACP,GAAG6Z,IAAI,CAACtT,CAAC,CAAC,CAACvG,CAAC;UACd,CAAC;UACD,OAAO8Z,GAAG;QACZ,CAAC,EAAED,IAAI,CAACtT,CAAC,CAAC,CAAC;QACX,OAAOsT,IAAI;MACb,CAAC,EAAE,CAAC,CAAC,CAAC;MACN1c,KAAK,CAAC6V,KAAK,GAAG,IAAI5U,aAAa,CAACwb,UAAU,EAAEF,aAAa,CAAC;MAC1Dvc,KAAK,CAAC0E,QAAQ,CAACwH,aAAa,GAAGlM,KAAK,CAAC6V,KAAK;IAC5C;IACA7V,KAAK,CAACwD,UAAU,GAAG,IAAIiB,UAAU,CAACzE,KAAK,CAAC0E,QAAQ,EAAE6X,aAAa,CAAC;IAChEvc,KAAK,CAACwD,UAAU,CAACpD,EAAE,CAAC,GAAG,EAAE,CAACG,KAAK,EAAE,GAAG1B,IAAI,KAAK;MAC3CmB,KAAK,CAACU,IAAI,CAACH,KAAK,EAAE,GAAG1B,IAAI,CAAC;IAC5B,CAAC,CAAC;IACFmB,KAAK,CAACV,IAAI,CAACid,aAAa,EAAEjG,QAAQ,CAAC;IACnCtW,KAAK,CAACwD,UAAU,CAACnE,OAAO,GAAGkd,aAAa;IACxCvc,KAAK,CAACwD,UAAU,CAACgG,gBAAgB,CAAC9E,QAAQ,CAAC2G,KAAK,GAAG;MACjDC,kBAAkB,EAAEtL,KAAK,CAACsL,kBAAkB,CAACgM,IAAI,CAACtX,KAAK;IACzD,CAAC;IACD,OAAOA,KAAK;EACd;EACAiD,MAAMA,CAAA,EAAG;IACP,OAAO;MACL5D,OAAO,EAAE,IAAI,CAACA,OAAO;MACrBwW,KAAK,EAAE,IAAI,CAACA,KAAK;MACjBjR,QAAQ,EAAE,IAAI,CAACA,QAAQ;MACvByR,SAAS,EAAE,IAAI,CAACA,SAAS;MACzB4D,gBAAgB,EAAE,IAAI,CAACA;IACzB,CAAC;EACH;AACF;AACA,MAAM2C,QAAQ,GAAGhE,IAAI,CAACwD,cAAc,CAAC,CAAC;AACtCQ,QAAQ,CAACR,cAAc,GAAGxD,IAAI,CAACwD,cAAc;AAE7C,MAAMA,cAAc,GAAGQ,QAAQ,CAACR,cAAc;AAC9C,MAAMN,GAAG,GAAGc,QAAQ,CAACd,GAAG;AACxB,MAAMxc,IAAI,GAAGsd,QAAQ,CAACtd,IAAI;AAC1B,MAAMwa,aAAa,GAAG8C,QAAQ,CAAC9C,aAAa;AAC5C,MAAMK,eAAe,GAAGyC,QAAQ,CAACzC,eAAe;AAChD,MAAMC,GAAG,GAAGwC,QAAQ,CAACxC,GAAG;AACxB,MAAMzV,cAAc,GAAGiY,QAAQ,CAACjY,cAAc;AAC9C,MAAMqW,SAAS,GAAG4B,QAAQ,CAAC5B,SAAS;AACpC,MAAM3hB,CAAC,GAAGujB,QAAQ,CAACvjB,CAAC;AACpB,MAAMwL,MAAM,GAAG+X,QAAQ,CAAC/X,MAAM;AAC9B,MAAMuW,mBAAmB,GAAGwB,QAAQ,CAACxB,mBAAmB;AACxD,MAAM9P,kBAAkB,GAAGsR,QAAQ,CAACtR,kBAAkB;AACtD,MAAMoQ,cAAc,GAAGkB,QAAQ,CAAClB,cAAc;AAC9C,MAAMC,aAAa,GAAGiB,QAAQ,CAACjB,aAAa;AAE5C,SAAShX,cAAc,EAAEyX,cAAc,EAAEQ,QAAQ,IAAInP,OAAO,EAAEqO,GAAG,EAAEjX,MAAM,EAAEmW,SAAS,EAAE1P,kBAAkB,EAAEhM,IAAI,EAAE8E,gBAAgB,IAAIyY,eAAe,EAAElB,aAAa,EAAED,cAAc,EAAE5B,aAAa,EAAEK,eAAe,EAAEiB,mBAAmB,EAAE/hB,CAAC,EAAE+gB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}